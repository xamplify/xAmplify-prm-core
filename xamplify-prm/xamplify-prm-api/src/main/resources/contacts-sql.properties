
contactsExcludedUsersCount = select cast(count(distinct total) as integer) as total from \
                     ( select distinct xuul.user_id as total from xt_user_profile xup  \
					  left join xt_user_list xul on xul.customer_id = xup.user_id  \
					  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id  \
					  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id  \
					  left join xt_excluded_user xeu on xeu.user_id = xuul.user_id  \
					  where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds) \
					      union   \
					  select distinct xuul.user_id as total from xt_user_profile xup   \
					  left join xt_user_list xul on xul.customer_id = xup.user_id   \
					  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
					  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
					  left join xt_excluded_domain xed on xed.company_id  =xul.company_id   \
					  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
					  and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\') \  
					   )a
					 
assignedLeadsExcludedUsersCount = select cast(count(distinct total) as integer) as total from \
				  ( select distinct xuul.user_id as total from xt_user_profile xup   \
				  left join xt_user_list xul on xul.assigned_by = xup.user_id   \
				  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				  left join xt_excluded_user xeu on xeu.user_id = xuul.user_id  \
				  where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds) union \
				  select distinct xuul.user_id as total from xt_user_profile xup   \
				  left join xt_user_list xul on xul.assigned_by = xup.user_id   \
				  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				  left join xt_excluded_domain xed on xed.company_id  =xul.assigned_company_id   \
				  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				  and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\')  \
				  )a
				  
SharedLeadsExcludedUsersCount = select distinct xuul.user_id as total from xt_user_profile xup   \
				 left join xt_user_list xul on xul.company_id = xup.company_id   \
				 left join xt_sharelist_partner xslp on xslp.user_list_id = xul.user_list_id \
				 left join xt_sharelist_partner_mapping xslpm on xslpm.sharelist_partner_id = xslp.id \
				 left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				 left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				 left join xt_excluded_user xeu on xeu.user_id = xuul.user_id   \
				 where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				 and xslpm.partner_id = :loggedInUserId  \
				 union   \
				 select distinct xuul.user_id as total from xt_user_profile xup   \
				 left join xt_user_list xul on xul.company_id = xup.company_id   \
				 left join xt_sharelist_partner xslp on xslp.user_list_id = xul.user_list_id  \
				 left join xt_sharelist_partner_mapping xslpm on xslpm.sharelist_partner_id = xslp.id  \
				 left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				 left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				 left join xt_excluded_domain xed on xed.company_id  =xul.company_id   \
				 where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				 and xslpm.partner_id = :loggedInUserId and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\')  \  
				 )a
				  
contactsExcludedSql = select distinct xuul.user_id from xt_user_profile xup  \
					  left join xt_user_list xul on xul.customer_id = xup.user_id  \
					  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id  \
					  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id  \
					  left join xt_excluded_user xeu on xeu.user_id = xuul.user_id  \
					  where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)    union   \
					  select distinct xuul.user_id from xt_user_profile xup   \
					  left join xt_user_list xul on xul.customer_id = xup.user_id   \
					  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
					  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
					  left join xt_excluded_domain xed on xed.company_id  =xul.company_id   \
					  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
					  and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\')  \
					 
assignedLeadsExcludedSql = select distinct xuul.user_id from xt_user_profile xup   \
				  left join xt_user_list xul on xul.assigned_by = xup.user_id   \
				  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				  left join xt_excluded_user xeu on xeu.user_id = xuul.user_id  \
				  where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)    union   \
				  select distinct xuul.user_id from xt_user_profile xup   \
				  left join xt_user_list xul on xul.assigned_by = xup.user_id   \
				  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				  left join xt_excluded_domain xed on xed.company_id  =xul.assigned_company_id   \
				  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				  and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\') 
				  
SharedLeadsExcludedSql = select distinct xuul.user_id from xt_user_profile xup   \
				 left join xt_user_list xul on xul.company_id = xup.company_id   \
				 left join xt_sharelist_partner xslp on xslp.user_list_id = xul.user_list_id \
				 left join xt_sharelist_partner_mapping xslpm on xslpm.sharelist_partner_id = xslp.id \
				 left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				 left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				 left join xt_excluded_user xeu on xeu.user_id = xuul.user_id   \
				 where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				 and xslpm.partner_id = :logedInUserId  union   \
				 select distinct xuul.user_id from xt_user_profile xup   \
				 left join xt_user_list xul on xul.company_id = xup.company_id   \
				 left join xt_sharelist_partner xslp on xslp.user_list_id = xul.user_list_id  \
				 left join xt_sharelist_partner_mapping xslpm on xslpm.sharelist_partner_id = xslp.id  \
				 left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				 left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				 left join xt_excluded_domain xed on xed.company_id  =xul.company_id   \
				 where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				 and xslpm.partner_id = :logedInUserId and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\') 
				 
contactsExcludedSqlWithSearch1 = with excluded_users as ( select distinct xuul.user_id  as excluded from xt_user_profile xup  \
					  left join xt_user_list xul on xul.customer_id = xup.user_id  \
					  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id  \
					  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id  \
					  left join xt_excluded_user xeu on xeu.user_id = xuul.user_id  \
					  where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds) \
					  :excludeUserSearchSql \
					  union \
					  select distinct xuul.user_id from xt_user_profile xup   \
					  left join xt_user_list xul on xul.customer_id = xup.user_id   \
					  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
					  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
					  left join xt_excluded_domain xed on xed.company_id  =xul.company_id   \
					  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds) \
					  and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\') \
					  :excludeUserSearchSql )\
					 select a.excluded  from excluded_users a \
                     Where a.excluded is not null  \
                       dataSortSQL\
					  
assignedLeadsExcludedSqlWithSearch1 = select distinct xuul.user_id from xt_user_profile xup   \
				  left join xt_user_list xul on xul.assigned_by = xup.user_id   \
				  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				  left join xt_excluded_user xeu on xeu.user_id = xuul.user_id  \
				  where xeu.company_id = :customerCompanyId and xul.user_list_id in (:userListIds) :excludeUserSearchSql  union   \
				  select distinct xuul.user_id from xt_user_profile xup   \
				  left join xt_user_list xul on xul.assigned_by = xup.user_id   \
				  left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile xup1 on xup1.user_id = xuul.user_id   \
				  left join xt_excluded_domain xed on xed.company_id  =xul.assigned_company_id   \
				  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				  and xup1.email_id like concat(\'%@\',xed.domain_name,\'%\') :excludeUserSearchSql \ 
				  
				  
SharedLeadsExcludedSqlWithSearch = select a.excluded from  ( \
                       ( select distinct uul.user_id as excluded sortColumnSQL from xt_user_profile up   \
				 left join xt_user_list xul on xul.company_id = up.company_id   \
				 left join xt_sharelist_partner xslp on xslp.user_list_id = xul.user_list_id \
				 left join xt_sharelist_partner_mapping xslpm on xslpm.sharelist_partner_id = xslp.id \
				 left join xt_user_userlist uul on uul.user_list_id = xul.user_list_id   \
				 left join xt_user_profile up1 on up1.user_id = uul.user_id   \
				 left join xt_excluded_user xeu on xeu.user_id = uul.user_id   \
				 left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
				 where xeu.company_id = :customerCompanyId and xul.user_list_id in \
				 (:userListIds) and xslpm.partner_id = :logedInUserId  :excludeUserSearchSql GROUP BY  1 sortOrder)  union   \
				 select distinct uul.user_id as excluded sortColumnSQL1 from xt_user_profile up   \
				 left join xt_user_list xul on xul.company_id = up.company_id   \
				 left join xt_sharelist_partner xslp on xslp.user_list_id = xul.user_list_id  \
				 left join xt_sharelist_partner_mapping xslpm on xslpm.sharelist_partner_id = xslp.id  \
				 left join xt_user_userlist uul on uul.user_list_id = xul.user_list_id  \
				 left join xt_user_profile up1 on up1.user_id = uul.user_id   \
				 left join xt_excluded_domain xed on xed.company_id  =xul.company_id   \
				 left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
				 where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				 and xslpm.partner_id = :logedInUserId and  \
				 up1.email_id like concat('%@',xed.domain_name,'%')   :excludeUserSearchSql  GROUP BY  1 sortOrder)a  \ 
				  
				
            
   AlldataSql =    With users as \
(select distinct cast((up.user_id) as integer) as userId sortColumnSQL  from xt_user_list u \
left join xt_user_userlist uul on u.user_list_id =uul.user_list_id \
left join  xt_user_profile up on uul.user_id=up.user_id \
 left join  xt_company_profile xcp on xcp.company_id = up.company_id  teamMemberSql \
 left join xt_partnership ps on up.user_id = ps.partner_id and ps.vendor_company_id = u.company_id \
 left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
where  up.email_validation_ind=true  and u.user_list_id \
in (:userListIds)  searchHQL sortSQL )select au.userId from users au Where au.userId is not null sortingOrder \
            


			
ActiveSql = With users as ( \
             select distinct  case   when up.is_email_valid = true   and  up.status = 'APPROVE' \
             and un.user_id is null   and  up.user_id is not null then  up.user_id  end  as userId \
             sortColumnSQL \
             from xt_user_list u \
             inner join xt_user_userlist uul on u.user_list_id = uul.user_list_id \
             inner join xt_user_profile up on uul.user_id = up.user_id \
             left join xt_company_profile xcp on xcp.company_id = up.company_id \
             left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
             left join ( select distinct un.user_id  from xt_unsubscribed_user un \
              where un.customer_company_id = :customerCompanyId ) un \
            on uul.user_id = un.user_id teamMemberSql \
            where up.email_validation_ind = true and u.user_list_id   in (:userListIds) \
             and up.user_id is not null searchHQL sortSQL ),\
			
InActivesql = With users as ( \
             select distinct  case   when up.is_email_valid = true   and  up.status = 'UnApproved' \
             and un.user_id is null   and  up.user_id is not null then  up.user_id  end  as userId \
             sortColumnSQL \
             from xt_user_list u \
             inner join xt_user_userlist uul on u.user_list_id = uul.user_list_id \
             inner join xt_user_profile up on uul.user_id = up.user_id \
             left join xt_company_profile xcp on xcp.company_id = up.company_id \
             left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
             left join ( select distinct un.user_id  from xt_unsubscribed_user un  where un.customer_company_id = :customerCompanyId ) un \
             on uul.user_id = un.user_id teamMemberSql \
             where up.email_validation_ind = true  and u.user_list_id in (:userListIds)  and up.user_id is not null \
             searchHQL sortSQL ),\
			  
ValidSql = With users as ( \
            SELECT  DISTINCT CASE   WHEN up.is_email_valid = true  AND(up.status = 'UnApproved' OR up.status = 'APPROVE') \
           AND un.user_id IS NULL THEN up.user_id  end  AS  userId \
             sortColumnSQL \
             from xt_user_list u \
             INNER JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
             INNER JOIN xt_user_profile up ON uul.user_id = up.user_id  \
             left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
             LEFT JOIN ( SELECT DISTINCT un.user_id FROM xt_unsubscribed_user un   \
             where un.customer_company_id = :customerCompanyId ) un \
             on uul.user_id = un.user_id \
             where up.email_validation_ind = true  and u.user_list_id in (:userListIds)  and up.user_id is not null \
             searchHQL sortSQL ),\
           
InValidSql = With users as ( \
             select distinct  case   when up.is_email_valid = false  \
             and un.user_id is null   and  up.user_id is not null then  up.user_id  end  as userId \
             sortColumnSQL \
             from xt_user_list u \
             inner join xt_user_userlist uul on u.user_list_id = uul.user_list_id \
             inner join xt_user_profile up on uul.user_id = up.user_id \
             left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
             left join ( select distinct un.user_id  from xt_unsubscribed_user un  where un.customer_company_id = :customerCompanyId ) un \
             on uul.user_id = un.user_id \
             where up.email_validation_ind = true  and u.user_list_id in (:userListIds)  and up.user_id is not null \
            searchHQL sortSQL ),\


UnSubscribedSql = With users as ( \
                  select DISTINCT case when up.user_id is not null then up.user_id  end as userId \
                  sortColumnSQL from xt_user_list u \
                  inner join xt_user_userlist uul on u.user_list_id = uul.user_list_id \
                  inner join xt_user_profile up on uul.user_id = up.user_id \
                  left join xt_company_profile xcp on xcp.company_id = up.company_id \
                  left join xt_unsubscribed_user un on uul.user_id = un.user_id \
                  left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
                  teamMemberSql \
                  where up.email_validation_ind = true  and u.user_list_id in (:userListIds) \
                  and up.user_id is not null and un.customer_company_id = :customerCompanyId \
                  searchHQL sortSQL ), \
                
    
partnersUnSubscribedSql = With users as ( \
                  select DISTINCT case when up.user_id is not null then up.user_id  end as userId \
                  sortColumnSQL from xt_user_list u \
                  inner join xt_user_userlist uul on u.user_list_id = uul.user_list_id \
                  inner join xt_user_profile up on uul.user_id = up.user_id \
                  left join xt_company_profile xcp on xcp.company_id = up.company_id \
                  left join xt_unsubscribed_user un on uul.user_id = un.user_id \
                  left join xt_contact_status xcs on xcs.id = uul.contact_status_id teamMemberSql \
                  where up.email_validation_ind = true  and u.user_list_id in (:userListIds) \
                  and up.user_id is not null and un.customer_company_id = :customerCompanyId \
                  searchHQL sortSQL ) select userid from users\        
            
SortSql = select au.userId from users au \
          left join  (select user_id from excluded_users)eu on au.userId= eu.user_id \
          Where au.userId is not null excludedString sortingOrder\
                  
                  
ActiveInActiveValidDataSql =  select * from  (select distinct up.user_id as \"id\", \
				       up.email_id as \"emailId\", max(uul.firstname) as \"firstName\",max(uul.lastname) as \"lastName\", max(uul.contact_company) as \"contactCompany\", \
				       max(uul.job_title) as \"jobTitle\", max(uul.mobile_number) as \"mobileNumber\", max(uul.description) as \"description\",\
				       max(uul.address) as \"address\", max(uul.city) as \"city\", \
				       max(uul.country) as \"country\", max(uul.state) as \"state\", max(uul.zip) as \"zipCode\", max(uul.vertical) as \"vertical\", \
				       max(uul.region) as \"region\", max(uul.partner_type) as \"partnerType\",  max(uul.category) as \"category\",max(uul.account_name) as \"accountName\", \
				       max(uul.account_sub_type) as \"accountSubType\",  max(uul.territory) as \"territory\", \
				       max(uul.company_domain) as \"companyDomain\",max(uul.account_owner) as \"accountOwner\",max(uul.website) as \"website\", up.is_email_valid as \"validEmail\", \
				       up.email_category as \"emailCategory\", max(u.user_list_id) as \"userListId\", \
				       up.password as \"password\", up.status as \"userStatus\", max(uul.contact_company_id) as \"contactCompanyId\" \
				       FROM xt_user_list u  JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
				       LEFT JOIN xt_company cc ON cc.id = uul.contact_company_id \
				       JOIN xt_user_profile up ON uul.user_id = up.user_id \
				       LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id AND un.customer_company_id = :customerCompanyId \
				       WHERE up.email_validation_ind = true  AND u.user_list_id IN (:userListIds)   AND up.is_email_valid = true \
				       AND uul.user_id in (:userIds)  GROUP BY 1,2,24,25,27,28  ) AS t 
				       
				       
InValidDataSql = select * from  (select distinct up.user_id as \"id\", \
				       up.email_id as \"emailId\", max(uul.firstname) as \"firstName\",max(uul.lastname) as \"lastName\", max(uul.contact_company) as \"contactCompany\", \
				       max(uul.job_title) as \"jobTitle\", max(uul.mobile_number) as \"mobileNumber\", max(uul.description) as \"description\",\
				       max(uul.address) as \"address\", max(uul.city) as \"city\", \
				       max(uul.country) as \"country\", max(uul.state) as \"state\", max(uul.zip) as \"zipCode\", max(uul.vertical) as \"vertical\", \
				       max(uul.region) as \"region\", max(uul.partner_type) as \"partnerType\",  max(uul.category) as \"category\",max(uul.account_name) as \"accountName\", \
				       max(uul.account_sub_type) as \"accountSubType\",  max(uul.territory) as \"territory\", \
				       max(uul.company_domain) as \"companyDomain\",max(uul.account_owner) as \"accountOwner\",max(uul.website) as \"website\", up.is_email_valid as \"validEmail\", \
				       up.email_category as \"emailCategory\", max(u.user_list_id) as \"userListId\", \
				       up.password as \"password\", up.status as \"userStatus\", max(uul.contact_company_id) as \"contactCompanyId\" \
				       FROM xt_user_list u  JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
				       LEFT JOIN xt_company cc ON cc.id = uul.contact_company_id \
				       JOIN xt_user_profile up ON uul.user_id = up.user_id \
				       LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id AND un.customer_company_id = :customerCompanyId \
				       WHERE up.email_validation_ind = true  AND u.user_list_id IN (:userListIds)   AND up.is_email_valid = false \
				       AND uul.user_id in (:userIds)  GROUP BY 1,2,24,25,27,28  ) AS t 
				       
AllUnSubscribedSql = select * from  (select distinct up.user_id as \"id\", \
				       up.email_id as \"emailId\", max(uul.firstname) as \"firstName\",max(uul.lastname) as \"lastName\", max(uul.contact_company) as \"contactCompany\", \
				       max(uul.job_title) as \"jobTitle\", max(uul.mobile_number) as \"mobileNumber\", max(uul.description) as \"description\",\
				       max(uul.address) as \"address\", max(uul.city) as \"city\", \
				       max(uul.country) as \"country\", max(uul.state) as \"state\", max(uul.zip) as \"zipCode\", max(uul.vertical) as \"vertical\", \
				       max(uul.region) as \"region\", max(uul.partner_type) as \"partnerType\",  max(uul.category) as \"category\",max(uul.account_name) as \"accountName\", \
				       max(uul.account_sub_type) as \"accountSubType\",  max(uul.territory) as \"territory\", \
				       max(uul.company_domain) as \"companyDomain\",max(uul.account_owner) as \"accountOwner\",max(uul.website) as \"website\", up.is_email_valid as \"validEmail\", \
				       up.email_category as \"emailCategory\", max(u.user_list_id) as \"userListId\", \
				       up.password as \"password\", up.status as \"userStatus\", max(uul.contact_company_id) as \"contactCompanyId\" \
				       FROM xt_user_list u  JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
				       LEFT JOIN xt_company cc ON cc.id = uul.contact_company_id \
				       JOIN xt_user_profile up ON uul.user_id = up.user_id \
				       LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id AND un.customer_company_id = :customerCompanyId \
				       WHERE up.email_validation_ind = true  AND u.user_list_id IN (:userListIds)  \
				       AND uul.user_id in (:userIds)  GROUP BY 1,2,24,25,27,28  ) AS t 
				       
				       
ExcludedDataSql =  select * from  (select distinct up.user_id as \"id\", \
				       up.email_id as \"emailId\", max(uul.firstname) as \"firstName\",max(uul.lastname) as \"lastName\", max(uul.contact_company) as \"contactCompany\", \
				       max(uul.job_title) as \"jobTitle\", max(uul.mobile_number) as \"mobileNumber\", max(uul.description) as \"description\",\
				       max(uul.address) as \"address\", max(uul.city) as \"city\", \
				       max(uul.country) as \"country\", max(uul.state) as \"state\", max(uul.zip) as \"zipCode\", max(uul.vertical) as \"vertical\", \
				       max(uul.region) as \"region\", max(uul.partner_type) as \"partnerType\",  max(uul.category) as \"category\",max(uul.account_name) as \"accountName\", \
				       max(uul.account_sub_type) as \"accountSubType\",  max(uul.territory) as \"territory\", \
				       max(uul.company_domain) as \"companyDomain\",max(uul.account_owner) as \"accountOwner\",max(uul.website) as \"website\", up.is_email_valid as \"validEmail\", \
				       up.email_category as \"emailCategory\", max(u.user_list_id) as \"userListId\", \
				       up.password as \"password\", up.status as \"userStatus\", max(uul.contact_company_id) as \"contactCompanyId\" \
				       FROM xt_user_list u  JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
				       LEFT JOIN xt_company cc ON cc.id = uul.contact_company_id \
				       JOIN xt_user_profile up ON uul.user_id = up.user_id \
				       LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id AND un.customer_company_id = :customerCompanyId \
				       WHERE up.email_validation_ind = true  AND u.user_list_id IN (:userListIds)  \
				       AND uul.user_id in (:userIds)  GROUP BY 1,2,24,25,27,28  ) AS t
				    
AllDatadownaload = with a as (select * from  \
(select distinct up.user_id as \"id\", case when xeu.user_id = uul.user_id then 'Excluded User'\
when xed.company_id  =u.company_id then 'Excluded Domain' end as \"excludedCatagory\" , \
un.reason as \"unsubscribedReason\", CASE WHEN uul.user_id = un. user_id  THEN TRUE ELSE FALSE END AS \"unsubscribed\", \
up.email_id as \"emailId\", max(uul.firstname) as \"firstName\",max(uul.lastname) as \"lastName\", \
max(uul.contact_company) as \"contactCompany\", max(uul.job_title) as \"jobTitle\", \
max(uul.mobile_number) as \"mobileNumber\", max(uul.description) as \"description\", max(uul.address) as \"address\", \
max(uul.city) as \"city\", max(uul.country) as \"country\", max(uul.state) as \"state\", max(uul.zip) as \"zipCode\", \
max(uul.vertical) as \"vertical\", max(uul.region) as \"region\", max(uul.partner_type) as \"partnerType\", \
max(uul.category) as \"category\",max(uul.account_name) as \"accountName\", max(uul.account_sub_type) as \"accountSubType\", \
max(uul.territory) as \"territory\", max(uul.company_domain) as \"companyDomain\",max(uul.account_owner) as \"accountOwner\", \
max(uul.website) as \"website\", up.is_email_valid as \"validEmail\", up.email_category as \"emailCategory\", \
max(u.user_list_id) as \"userListId\", xcp.company_name_status as \"companyNameStatus\", up.password as \"password\", \
up.status as \"userStatus\", max(uul.contact_company_id) as \"contactCompanyId\" , \
max(xcp.company_name) as \"partnerCompanyName\", cast(ps.created_time as text) as \"createdTime\", \
ps.status as \"partnerStatus\", up.email_validation_ind as \"emailValidationInd\", uul.country_code as \"countryCode\", \
uul.contact_status_id as \"contactStatusId\", max(xcs.stage_name) as \"contactStatus\" \
FROM xt_user_list u  JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
 LEFT JOIN xt_company cc ON cc.id = uul.contact_company_id \
 JOIN xt_user_profile up ON uul.user_id = up.user_id \
 LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id AND un.customer_company_id = :customerCompanyId \
 left join xt_excluded_user xeu on xeu.user_id = uul.user_id \
 left join xt_excluded_domain xed on xed.company_id  =u.company_id \
 left join xt_company_profile xcp on xcp.company_id = up.company_id \
 left join xt_partnership ps on up.user_id = ps.partner_id and ps.vendor_company_id = :customerCompanyId \
 left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
 WHERE up.email_validation_ind = true userListSql \
 AND uul.user_id in (:userIds) \
 GROUP BY  1,2,3,4,27,28,30,35,36,38,39  ) AS t),\
 b as  \
(  select up2.user_id as "id1",\
count(distinct c.campaign_id) as "totalCampaignsCount1",count(distinct el.campaign_id) as "activeCampaignsCount1" ,\
count(distinct case when el.action_id = 13 and el.url_id is null \
and el.reply_id is null and  el.video_id is null then date_trunc('minute',el.time) end ) as "emailOpenedCount1",  \
count(distinct case when (el.action_id = 14 or el.action_id = 15) and  \
el.url_id is null and  el.reply_id is null then date_trunc('minute',el.time) end) as "clickedUrlsCount1",\
(count(DISTINCT xl.session_id) + count(CASE WHEN xl.action_id = 10 THEN xl.user_id 	END)) AS "viewsCount1" \
from xt_campaign c	\
left join xt_campaign_user_userlist cuul on (cuul.campaign_id=c.campaign_id) \
left join xt_user_profile up2 on (up2.user_id=cuul.user_id) \
left join xt_email_log el on (el.campaign_id=c.campaign_id and cuul.user_id=el.user_id) \
LEFT JOIN xt_xtremand_log xl on (xl.user_id = cuul.user_id AND c.campaign_id = xl.campaign_id) \
 join (select user_id from xt_user_profile where company_id = :customerCompanyId ) up on up.user_id= c.customer_id \
 where up2.user_id  in (:userIds)  and  c.campaign_type  in ('REGULAR','VIDEO')	\
 group by 1 ) ,  total as (select distinct a.*, \
 coalesce(b."totalCampaignsCount1",0) as \"totalCampaignsCount\",\
coalesce(b."activeCampaignsCount1" ,0) as \"activeCampaignsCount\" ,\
coalesce(b."emailOpenedCount1",0) as \"emailOpenedCount\", \
coalesce(b."clickedUrlsCount1",0) as \"clickedUrlsCount\", \
coalesce(b."viewsCount1" ,0) as \"viewsCount\" ,\
 ROW_NUMBER() OVER (PARTITION BY a."id" ORDER BY a."id") as \"rowNumber\" \
from a left join b on a."id"=b."id1" dataSortSQL) \
select * from total where "rowNumber" = 1 \
				       
#count Query's
PartnersAllCountSql = select cast(count(distinct up.user_id) as integer) as all \
                     from xt_user_list u, xt_user_userlist uul, xt_user_profile up \
                     where u.user_list_id = uul.user_list_id and uul.user_id = up.user_id and up.email_validation_ind = true \
                     and u.company_id = :customerCompanyId and u.module_name='PARTNERS' and  up.user_id is not null \
                     
AllCountSql = select cast(count(distinct up.user_id) as integer) as all \
              from xt_user_list u, xt_user_userlist uul, xt_user_profile up \
              where u.user_list_id = uul.user_list_id and uul.user_id = up.user_id and up.email_validation_ind = true \
              and u.user_list_id in (:userListIds) and  up.user_id is not null \

PartnersActiveCountSql = select cast(count(distinct active) as integer) as active from \
                         (SELECT  DISTINCT CASE   WHEN up.is_email_valid = true  AND up.status = 'APPROVE' \
                         AND un.user_id IS NULL THEN up.user_id  end  AS active FROM  xt_user_list u \
                         inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                         INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                         LEFT JOIN ( SELECT DISTINCT un.user_id  FROM xt_unsubscribed_user un WHERE \
                         un.customer_company_id=:customerCompanyId ) un ON uul.user_id = un.user_id \
                         WHERE up.email_validation_ind = true and u.company_id = :customerCompanyId and u.module_name='PARTNERS' and \
                         up.user_id is not null )a \

ActiveCountSql = select cast(count(distinct active) as integer) as active from \
                 (SELECT  DISTINCT CASE   WHEN up.is_email_valid = true  AND up.status = 'APPROVE' \
                 AND un.user_id IS NULL THEN up.user_id  end  AS active FROM  xt_user_list u \
                 inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                 INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                 LEFT JOIN ( SELECT DISTINCT un.user_id  FROM xt_unsubscribed_user un WHERE \
                 un.customer_company_id=:customerCompanyId ) un ON uul.user_id = un.user_id \
                 WHERE up.email_validation_ind = true  and u.user_list_id in (:userListIds) and \
				 up.user_id is not null \
				 
PartnersInActiveCountSql = select cast(count(distinct nonactive) as integer) as inactive from \
                      (SELECT  DISTINCT CASE   WHEN up.is_email_valid = true  AND up.status = 'UnApproved' \
                      AND un.user_id IS NULL THEN up.user_id  end  AS nonactive FROM  xt_user_list u \
                      inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                      INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                      LEFT JOIN ( SELECT DISTINCT un.user_id  FROM xt_unsubscribed_user un  WHERE \
                      un.customer_company_id=:customerCompanyId ) un ON uul.user_id = un.user_id \
                      WHERE up.email_validation_ind = true and u.company_id = :customerCompanyId and u.module_name='PARTNERS' and \
                      up.user_id is not null )a \

InActivecountSql = select cast(count(distinct nonactive) as integer) as inactive from \
                  (SELECT  DISTINCT CASE   WHEN up.is_email_valid = true  AND up.status = 'UnApproved' \
                  AND un.user_id IS NULL THEN up.user_id  end  AS nonactive FROM  xt_user_list u \
                  inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                  INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                  LEFT JOIN ( SELECT DISTINCT un.user_id  FROM xt_unsubscribed_user un  WHERE \
                  un.customer_company_id=:customerCompanyId ) un ON uul.user_id = un.user_id \
                  WHERE up.email_validation_ind = true and u.user_list_id in (:userListIds) and  up.user_id is not null \
                  
PartnersUndeliverableCountSql = select cast(count(distinct invalid) as integer) as invalid from \
                                (SELECT  DISTINCT CASE   WHEN up.is_email_valid = false \
                                AND un.user_id IS NULL THEN up.user_id  end  AS invalid FROM  xt_user_list u \
                                inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                                INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                                LEFT JOIN ( SELECT DISTINCT un.user_id  FROM xt_unsubscribed_user un WHERE \
                                un.customer_company_id=:customerCompanyId ) un ON uul.user_id = un.user_id \
                                WHERE up.email_validation_ind = true and u.company_id = :customerCompanyId and u.module_name='PARTNERS' and \
                                up.user_id is not null )a \
                                
 UndeliverableCountSql = select cast(count(distinct invalid) as integer) as invalid from \
                         (SELECT  DISTINCT CASE   WHEN up.is_email_valid = false \
                         AND un.user_id IS NULL THEN up.user_id  end  AS invalid FROM  xt_user_list u \
                         inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                         INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                         LEFT JOIN ( SELECT DISTINCT un.user_id  FROM xt_unsubscribed_user un WHERE \
                         un.customer_company_id=:customerCompanyId ) un ON uul.user_id = un.user_id \
                         WHERE up.email_validation_ind = true  and u.user_list_id in (:userListIds) and  up.user_id is not null \
                         
PartnersUnsubscribedCountSql = select cast(count(distinct unsubscribed) as integer) as unsubscribed from \
                              (SELECT  DISTINCT case when up.user_id is not null then up.user_id  end  AS unsubscribed \
                              FROM  xt_user_list u inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                              INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                              LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id WHERE \
                              un.customer_company_id=:customerCompanyId and  up.email_validation_ind = true \
                              and u.company_id = :customerCompanyId and u.module_name='PARTNERS' and  up.user_id is not null )a \
                              
UnsubscribedCountSql = select cast(count(distinct unsubscribed) as integer) as unsubscribed from \
                       (SELECT  DISTINCT case when up.user_id is not null then up.user_id  end  AS unsubscribed \
                       FROM  xt_user_list u inner JOIN xt_user_userlist uul ON u.user_list_id = uul.user_list_id \
                       INNER JOIN xt_user_profile up ON uul.user_id = up.user_id \
                       LEFT JOIN xt_unsubscribed_user un ON uul.user_id = un.user_id WHERE \
                       un.customer_company_id=:customerCompanyId and  up.email_validation_ind = true \
                       and u.user_list_id in (:userListIds) and  up.user_id is not null \
                       
                       
contactsExcludedSqlWithSearch = select a.excluded  from  \
                                ((select distinct uul.user_id as excluded  sortColumnSQL\
from xt_user_profile up  left join xt_user_list xul on xul.customer_id = up.user_id  \
left join xt_user_userlist uul on uul.user_list_id = xul.user_list_id  \
left join xt_user_profile xup1 on xup1.user_id = uul.user_id  \
left join xt_excluded_user xeu on xeu.user_id = uul.user_id  \
left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
where xeu.company_id = :customerCompanyId \
and xul.user_list_id in (:userListIds) :excludeUserSearchSql  GROUP BY  1 sortOrder) \
union \
select distinct uul.user_id  as excluded sortColumnSQL   from xt_user_profile up1  \
left join xt_user_list xul on xul.customer_id = up1.user_id  \
left join xt_user_userlist uul on uul.user_list_id = xul.user_list_id \
left join xt_user_profile up on up.user_id = uul.user_id  \
left join xt_excluded_domain xed on xed.company_id  =xul.company_id \
left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
where xed.company_id = :customerCompanyId \
 and xul.user_list_id in (:userListIds)  and up.email_id like \
concat('%@',xed.domain_name,'%')   :excludeUserSearchSql  GROUP BY  1 sortOrder )a  \

assignedLeadsExcludedSqlWithSearch = select a.excluded from  ( \
 (select distinct uul.user_id as excluded sortColumnSQL from xt_user_profile up   \
				  left join xt_user_list xul on xul.assigned_by = up.user_id   \
				  left join xt_user_userlist uul on uul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile up1 on up1.user_id = uul.user_id   \
				  left join xt_excluded_user xeu on xeu.user_id = uul.user_id  \
				  left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
				  where xeu.company_id = :customerCompanyId \
				  and xul.user_list_id in (:userListIds) :excludeUserSearchSql  GROUP BY  1 sortOrder)   union   \
				  select distinct uul.user_id  as excluded sortColumnSQL1 from xt_user_profile up   \
				  left join xt_user_list xul on xul.assigned_by = up.user_id   \
				  left join xt_user_userlist uul on uul.user_list_id = xul.user_list_id   \
				  left join xt_user_profile up1 on up1.user_id = uul.user_id   \
				  left join xt_excluded_domain xed on xed.company_id  =xul.assigned_company_id   \
				  left join xt_contact_status xcs on xcs.id = uul.contact_status_id \
				  where xed.company_id = :customerCompanyId and xul.user_list_id in (:userListIds)   \
				  and up1.email_id like concat(\'%@\',xed.domain_name,\'%\')  :excludeUserSearchSql GROUP BY  1 sortOrder )a \ 
				  

 teamMemberSql= join (\
                        select distinct p.partner_id from  xt_team_member t left outer join xt_team_member_group_user_mapping \
                        tgum on t.id = tgum.team_member_id  \
                         left outer join xt_partner_team_group_mapping ptgm on tgum.id = ptgm.team_member_group_user_mapping_id \
                         left outer join xt_partnership p on ptgm.partnership_id=p.id  \
                         where t.team_member_id = :teamMemberId and p.partner_id is not null) tp on tp.partner_id=up.user_id \


contacts.campaign.analytics = (SELECT up2.user_id AS userId,  \
COUNT(DISTINCT c.campaign_id) AS totalCampaignsCount, COUNT(DISTINCT el.campaign_id) AS activeCampaignsCount,  \
COUNT(DISTINCT CASE WHEN el.action_id = 13 AND el.url_id IS NULL AND el.reply_id IS NULL AND el.video_id IS NULL  \
THEN date_trunc('minute', el.time) END) AS emailOpenedCount, COUNT(DISTINCT CASE WHEN el.action_id IN (14, 15)  \
AND el.url_id IS NULL AND el.reply_id IS NULL THEN date_trunc('minute', el.time) END ) AS clickedUrlsCount,  \
(COUNT(DISTINCT xl.session_id) + COUNT(CASE WHEN xl.action_id = 10 THEN xl.user_id END)) AS viewsCount  \
  FROM xt_campaign c  \
  LEFT JOIN xt_campaign_user_userlist cuul ON cuul.campaign_id = c.campaign_id  \
  LEFT JOIN xt_user_profile up2 ON up2.user_id = cuul.user_id  \
  LEFT JOIN xt_email_log el ON el.user_id = cuul.user_id AND el.campaign_id = c.campaign_id  \
  LEFT JOIN xt_xtremand_log xl ON xl.user_id = cuul.user_id AND xl.campaign_id = c.campaign_id  \
  LEFT JOIN xt_user_profile up1 ON up1.user_id = c.customer_id  \
  WHERE c.campaign_type IN ('REGULAR', 'VIDEO') AND up1.company_id = :companyId GROUP BY up2.user_id)


partner.details.query = SELECT xuul.user_id AS \"id\", xuul.user_id AS \"userId\", xuul.user_list_id AS \"userListId\",  \
xuul.id AS \"userUserListId\", xuul.description AS \"description\", xuul.country AS \"country\",  \
xuul.city AS \"city\", xuul.address AS \"address\", xuul.contact_company AS \"contactCompany\",  \
xuul.job_title AS \"jobTitle\", xuul.firstname AS \"firstName\", xuul.lastname AS \"lastName\",  \
xuul.mobile_number AS \"mobileNumber\", xuul.state AS \"state\", xuul.zip AS \"zipCode\",  \
xuul.vertical AS \"vertical\", xuul.region AS \"region\", xuul.partner_type AS \"partnerType\",  \
xuul.category AS \"category\",xuul.contact_company_id AS \"contactCompanyId\", xuul.account_name AS \"accountName\",  \
xuul.account_sub_type AS \"accountSubType\", xuul.territory AS \"territory\", xuul.company_domain AS \"companyDomain\",  \
xuul.account_owner AS \"accountOwner\", xuul.website AS \"website\", xuul.country_code AS \"countryCode\",  \
xul.is_deal_contact_list as \"dealContactList\", xul.is_partner_userlist as \"partnerUserList\",  \
xup.email_id AS \"emailId\", xup.is_email_valid AS \"validEmail\", xup.email_category AS \"emailCategory\",  \
xup.password AS \"password\", xup.status AS \"userStatus\", xup.email_validation_ind AS \"emailValidationInd\",  \
xcp.company_name_status AS \"companyNameStatus\", xcp.company_name AS \"partnerCompanyName\",   \
xun.reason AS \"unsubscribedReason\", CASE WHEN xun.user_id IS NOT NULL THEN TRUE ELSE FALSE END AS \"unsubscribed\",  \
CAST(xps.created_time AS TEXT) AS "createdTime", xps.status as \"partnerStatus\", xps.id as \"partnershipId\",  \
xps.contacts_limit as \"contactsLimit\", COALESCE(xps.notify_partners, false) as \"notifyPartners\", xps.partner_company_id as \"companyId\",  \
COALESCE(xps.is_login_as_partner_option_enabled_for_vendor, false) as \"loginAsPartnerOptionEnabledForVendor\",  \
CAST(CASE WHEN xps.deactivated_on IS NOT NULL THEN xps.deactivated_on END AS TEXT) as \"deactivatedOn\", \
COALESCE(cs.totalCampaignsCount, 0) AS \"totalCampaignsCount\", COALESCE(cs.activeCampaignsCount, 0) AS \"activeCampaignsCount\",  \
COALESCE(cs.emailOpenedCount, 0) AS \"emailOpenedCount\", COALESCE(cs.clickedUrlsCount, 0) AS \"clickedUrlsCount\",  \
COALESCE(cs.viewsCount, 0) AS \"viewsCount\" FROM xt_user_userlist xuul  \
LEFT JOIN xt_user_list xul ON xul.user_list_id = xuul.user_list_id  \
LEFT JOIN xt_user_profile xup ON xup.user_id = xuul.user_id  \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id  \
LEFT JOIN xt_unsubscribed_user xun ON xuul.user_id = xun.user_id AND xun.customer_company_id = xul.company_id  \
LEFT JOIN xt_partnership xps ON xup.user_id = xps.partner_id AND xps.vendor_company_id = xul.company_id  \
LEFT JOIN ${contacts.campaign.analytics} cs ON cs.userId = xuul.user_id  teamMemberSql  \
WHERE xuul.user_list_id = :userListId AND xul.company_id = :companyId AND xup.email_validation_ind is true  \
AND (:type = 'ALL'  \
    OR (:type = 'ACTIVE' AND xup.is_email_valid IS TRUE AND xup.status = 'APPROVE' AND xun.user_id IS NULL AND xps.status = 'approved')  \
    OR (:type = 'NON-ACTIVE' AND xup.is_email_valid IS TRUE AND xup.status = 'UnApproved' AND xun.user_id IS NULL AND xps.status = 'approved')  \
    OR (:type = 'UNSUBSCRIBED' AND xup.is_email_valid IS TRUE AND xun.user_id IS NOT NULL AND xps.status = 'approved') \
	OR (:type = 'DEACTIVATED' AND xup.is_email_valid IS TRUE AND xps.status = 'deactivated'))  \


contacts.flexi.fields.query = (SELECT ulffe.user_user_list_id, CAST(json_agg(json_build_object(  \
    'id', ff.id,'fieldName', ff.field_name,'fieldValue', ulffe.flexi_field_value)) AS TEXT) AS flexiFieldsJson  \
    FROM xt_user_list_flexi_field_entries ulffe  \
    JOIN xt_flexi_fields ff ON ff.id = ulffe.flexi_field_id   \
    GROUP BY ulffe.user_user_list_id)   \


contact.details.query = SELECT xuul.user_id AS \"id\", xuul.user_id AS \"userId\", xuul.user_list_id AS \"userListId\",  \
xuul.id AS \"userUserListId\", xuul.description AS \"description\", xuul.country AS \"country\",  \
xuul.city AS \"city\", xuul.address AS \"address\", xuul.contact_company AS \"contactCompany\",  \
xuul.job_title AS \"jobTitle\", xuul.firstname AS \"firstName\", xuul.lastname AS \"lastName\",  \
xuul.mobile_number AS \"mobileNumber\", xuul.state AS \"state\", xuul.zip AS \"zipCode\",  \
xuul.vertical AS \"vertical\", xuul.region AS \"region\", xuul.partner_type AS \"partnerType\",  \
xuul.category AS \"category\",xuul.contact_company_id AS \"contactCompanyId\", xuul.account_name AS \"accountName\",  \
xuul.account_sub_type AS \"accountSubType\", xuul.territory AS \"territory\", xuul.company_domain AS \"companyDomain\",  \
xuul.account_owner AS \"accountOwner\", xuul.website AS \"website\", xuul.country_code AS \"countryCode\",  \
xul.is_deal_contact_list as \"dealContactList\", xul.is_partner_userlist as \"partnerUserList\",  \
xup.email_id AS \"emailId\", xup.is_email_valid AS \"validEmail\", xup.email_category AS \"emailCategory\",  \
xup.password AS \"password\", xup.status AS \"userStatus\", xup.email_validation_ind AS \"emailValidationInd\",  \
xcp.company_name_status AS \"companyNameStatus\", xcp.company_name AS \"partnerCompanyName\",   \
xun.reason AS \"unsubscribedReason\", CASE WHEN xun.user_id IS NOT NULL THEN TRUE ELSE FALSE END AS \"unsubscribed\",  \
CASE WHEN xeu.user_id IS NOT NULL THEN 'Excluded User' WHEN xed.domain_name IS NOT NULL THEN 'Excluded Domain' \
ELSE NULL END AS \"excludedCatagory\", xcs.stage_name AS \"contactStatus\",  \
COALESCE(cs.totalCampaignsCount, 0) AS \"totalCampaignsCount\", COALESCE(cs.activeCampaignsCount, 0) AS \"activeCampaignsCount\",  \
COALESCE(cs.emailOpenedCount, 0) AS \"emailOpenedCount\", COALESCE(cs.clickedUrlsCount, 0) AS \"clickedUrlsCount\",  \
COALESCE(cs.viewsCount, 0) AS \"viewsCount\", flexi.flexiFieldsJson AS \"flexiFieldsJson\"   \
FROM xt_user_userlist xuul  \
LEFT JOIN xt_user_list xul ON xul.user_list_id = xuul.user_list_id  \
LEFT JOIN xt_user_profile xup ON xup.user_id = xuul.user_id  \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id  \
LEFT JOIN xt_unsubscribed_user xun ON xuul.user_id = xun.user_id AND xun.customer_company_id = xul.company_id  \
LEFT JOIN xt_excluded_user xeu ON xeu.user_id = xuul.user_id AND xeu.company_id = :companyId  \
LEFT JOIN xt_excluded_domain xed ON LOWER(TRIM(xed.domain_name)) = LOWER(TRIM(SPLIT_PART(xup.email_id, '@', 2))) AND xed.company_id = :companyId  \
LEFT JOIN xt_contact_status xcs ON xcs.id = xuul.contact_status_id  \
LEFT JOIN ${contacts.campaign.analytics} cs ON cs.userId = xuul.user_id  \
LEFT JOIN ${contacts.flexi.fields.query} flexi ON flexi.user_user_list_id = xuul.id  \
WHERE xuul.user_list_id = :userListId AND xul.company_id = :companyId AND xup.email_validation_ind is true  \
AND (:type = 'ALL'  \
    OR (:type = 'VALID' AND xup.is_email_valid IS TRUE AND (xup.status = 'APPROVE' OR xup.status = 'UnApproved')  \
    AND xun.user_id IS NULL AND xeu.user_id IS NULL AND xed.domain_name IS NULL)  \
    OR (:type = 'INVALID' AND xup.is_email_valid IS FALSE AND xun.user_id IS NULL AND xeu.user_id IS NULL AND xed.domain_name IS NULL)  \
    OR (:type = 'UNSUBSCRIBED' AND xup.is_email_valid IS TRUE AND xun.user_id IS NOT NULL AND xeu.user_id IS NULL AND xed.domain_name IS NULL)  \
    OR (:type = 'EXCLUDED' AND (xeu.user_id IS NOT NULL OR xed.domain_name IS NOT NULL)))  \ 


contacts.count.query = SELECT cast(count(distinct xup.user_id) as integer) as count  \
FROM xt_user_userlist xuul  \
LEFT JOIN xt_user_list xul ON xul.user_list_id = xuul.user_list_id  \
LEFT JOIN xt_user_profile xup ON xup.user_id = xuul.user_id  \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id  \
LEFT JOIN xt_excluded_user xeu ON xeu.user_id = xuul.user_id AND xeu.company_id = :companyId   \
LEFT JOIN xt_excluded_domain xed ON LOWER(TRIM(xed.domain_name)) = LOWER(TRIM(SPLIT_PART(xup.email_id, '@', 2))) AND xed.company_id = :companyId  \
LEFT JOIN xt_contact_status xcs ON xcs.id = xuul.contact_status_id  \
LEFT JOIN xt_unsubscribed_user xun ON xuul.user_id = xun.user_id AND xun.customer_company_id = xul.company_id  \
LEFT JOIN xt_partnership xps ON xup.user_id = xps.partner_id AND xps.vendor_company_id = xul.company_id  \
WHERE xuul.user_list_id = :userListId AND xul.company_id = :companyId AND xup.email_validation_ind IS TRUE  \
AND (:type = 'ALL'  \
    OR (:type = 'VALID' AND xup.is_email_valid IS TRUE AND (xup.status = 'APPROVE' OR xup.status = 'UnApproved')  \
    AND xun.user_id IS NULL AND xeu.user_id IS NULL AND xed.domain_name IS NULL)  \
    OR (:type = 'INVALID' AND xup.is_email_valid IS FALSE AND xun.user_id IS NULL AND xeu.user_id IS NULL AND xed.domain_name IS NULL)  \
    OR (:type = 'UNSUBSCRIBED' AND xup.is_email_valid IS TRUE AND xun.user_id IS NOT NULL AND xeu.user_id IS NULL AND xed.domain_name IS NULL)  \
    OR (:type = 'EXCLUDED' AND (xeu.user_id IS NOT NULL OR xed.domain_name IS NOT NULL))  \
    OR (:type = 'ACTIVE' AND xup.is_email_valid IS TRUE AND xup.status = 'APPROVE' AND xun.user_id IS NULL AND xps.status = 'approved')  \
    OR (:type = 'NON-ACTIVE' AND xup.is_email_valid IS TRUE AND xup.status = 'UnApproved' AND xun.user_id IS NULL AND xps.status = 'approved')  \
    OR (:type = 'PARTNER-UNSUBSCRIBED' AND xup.is_email_valid IS TRUE AND xun.user_id IS NOT NULL AND xps.status = 'approved')  \
	OR (:type = 'DEACTIVATED' AND xup.is_email_valid IS TRUE AND xps.status = 'deactivated'))  \

