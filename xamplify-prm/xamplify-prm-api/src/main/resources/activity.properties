

all.recent.activity.query = select a.* from (select distinct 'Campaign' as \"type\", xc.campaign_id as \"id\" ,xc.campaign_name as \"name\", case when cast(xc.campaign_type as text) ilike '%REGULAR%' then 'EMAIL' else cast(xc.campaign_type as text) end as \"stage\" , \
cast(xc.campaign_schedule_type as text) as \"schedule\"  , cast(xc.launch_time as text) as \"createdTime\", cast(xc.updated_time as text) as \"updatedTime\", \
null as \"closeDate\", 'LAUNCHED' as \"activity\", null as \"dueDateString\", cast('true' as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\" from xt_campaign xc \
left join xt_campaign_user_userlist xcuul on xcuul.campaign_id= xc.campaign_id \
left join xt_user_profile xup on xc.customer_id = xup.user_id \
where xc.campaign_type in ('VIDEO', 'REGULAR') and xcuul.user_id= :userId and xc.is_launched = 'true' and xup.company_id = :companyId {vanityUrlFilterForCampaigns} union \
select distinct 'Lead', xl.id as \"id\" ,concat(xl.first_name, ' ' ,xl.last_name) as \"name\",ps.stage_name, cast(xl.company as text), \
case when cd.activity_type = 'LEAD_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xl.created_time as text) end, cast(xl.created_time as text), null as \"closeDate\", \
cast(cd.activity_type as text) as \"activity\", null, cast('true' as boolean), cast('true' as boolean) \
from xt_lead xl left join xt_user_profile xup on xup.user_id= xl.associated_user_id \
left join xt_pipeline_stage ps on xl.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.lead_id= xl.id \
where xl.associated_user_id = :userId and xl.created_by_company_id = :companyId {vanityUrlFilterForLeads} union \
select distinct 'Deal', xd.id as \"id\" ,xd.title, ps.stage_name, cast(xd.amount as text), case when cd.activity_type = 'DEAL_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xd.created_time as text) end, \
cast(xd.created_time as text), cast(xd.close_date as text) as \"closeDate\", cast(cd.activity_type as text) as \"activity\", null, cast('true' as boolean), cast('true' as boolean) \
from xt_deal xd left join xt_user_profile xup on xup.user_id= xd.associated_user_id left join xt_pipeline_stage ps on xd.pipeline_stage_id=ps.id \
left join xt_campaign_deal_comments cd on cd.deal_id=xd.id where xd.associated_user_id = :userId and xd.created_by_company_id = :companyId {vanityUrlFilterForDeals} union \
select distinct 'Note', xn.id as \"id\", xn.title, xn.content, cast(xn.visibility as text), cast(xn.updated_time as text), cast(xn.created_time as text), concat(xcup.firstname, ' ' ,xcup.lastname), \
case when xn.created_time = xn.updated_time then 'CREATED' when xn.created_time < xn.updated_time then 'UPDATED' else 'CREATED' end as \"activity\", null, \
cast(case when created_by = :loggedInUserId then 'true' else 'false' end as boolean) as "deleteEnabled", cast(case when created_by = :loggedInUserId then 'true' else 'false' end as boolean) as "editEnabled" \
from xt_note xn left join xt_user_profile xup on xn.contact_id= xup.user_id left join xt_user_profile xcup on xn.created_by = xcup.user_id \
where ((xn.visibility = 'PUBLIC') or (xn.visibility = 'PRIVATE' AND xn.created_by = :loggedInUserId)) and xn.contact_id= :userId and xn.company_id= :companyId union \
select distinct 'Email', xea.id as \"id\", xea.subject, cast(xea.status as text), xupp.email_id, cast(xea.created_time as text), cast(xea.opened_time as text), 'Email', 'CREATED', null, cast('true' as boolean), cast('true' as boolean) \
from xt_email_activity xea left join xt_user_profile xup on xup.user_id= xea.recipient_user_id left join xt_user_profile xupp on xupp.user_id = xea.sender_user_id \
where xup.user_id = :userId and xea.company_id= :companyId union \
select distinct 'Task', xta.id, xta.name, initcap(cast(xta.priority as text)), initcap(cast(xta.task_type as text)), cast(xta.updated_time as text), cast(xta.created_time as text), xtas.name, \
case when xta.created_time = xta.updated_time then 'CREATED' when xta.created_time < xta.updated_time then 'UPDATED' else 'CREATED' end as \"activity\", cast(xta.due_date as text), \
cast(case when xta.assigned_by = :loggedInUserId then 'true' else 'false' end as boolean), cast('true' as boolean) \
from xt_task_activity xta left join xt_task_activity_status xtas on xtas.id = xta.status where xta.contact_id = :userId and xta.company_id = :companyId) as a {filterBy} {searchQuery} order by \"createdTime\" desc
 
 
all.recent.activity.count.query = select cast(count(a.*) as int) from \
(select distinct xc.campaign_id, 'Campaign' as \"type\", null as \"activity\", xc.campaign_name as "name" from xt_campaign xc \
left join xt_campaign_user_userlist xcuul on xcuul.campaign_id= xc.campaign_id \
left join xt_user_profile xup on xc.customer_id = xup.user_id where xc.campaign_type in ('VIDEO', 'REGULAR') and xcuul.user_id= :userId \
and xc.is_launched = true and xup.company_id = :companyId {vanityUrlFilterForCampaigns} union \
select distinct xl.id, 'Lead' as \"type\", case when cd.activity_type = 'LEAD_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xl.created_time as text) end, \
concat(xl.first_name, ' ' ,xl.last_name) as "name" \
from xt_lead xl left join xt_user_profile xup on xup.user_id= xl.associated_user_id \
left join xt_pipeline_stage ps on xl.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.lead_id= xl.id \
where xl.associated_user_id = :userId and xl.created_by_company_id = :companyId {vanityUrlFilterForLeads} union \
select distinct xd.id, 'Deal' as \"type\", case when cd.activity_type = 'DEAL_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xd.created_time as text) end, \
xd.title as \"name\" from xt_deal xd left join xt_user_profile xup on xup.user_id= xd.associated_user_id \
left join xt_pipeline_stage ps on xd.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.deal_id=xd.id \
where xd.associated_user_id = :userId and xd.created_by_company_id = :companyId {vanityUrlFilterForDeals} union \
select distinct xn.id, 'Note' as \"type\", null, xn.title as \"name\" from xt_note xn left join xt_user_profile xup on xn.contact_id= xup.user_id \
where ((xn.visibility = 'PUBLIC') or (xn.visibility = 'PRIVATE' AND xn.created_by = :loggedInUserId)) and xn.contact_id= :userId and xn.company_id = :companyId union select distinct xea.id, 'Email' as \"type\", null, xea.subject as \"name\" \
from xt_email_activity xea left join xt_user_profile xup on xup.user_id= xea.recipient_user_id where xup.user_id = :userId and xea.company_id = :companyId union \
select distinct xta.id,'Task', null, xta.name as \"name\" \
from xt_task_activity xta where xta.contact_id = :userId and xta.company_id = :companyId) as a {filterBy} {searchQuery}
			
email.activity.attachments = email/

upload.attachment.path = /opt/tomcat8/webapps/vod/attachments/

email.excluded.file.types = exe

task.activity.attachments = task/

calendly.meeting.types = {physical:'In-Person Meeting',outbound_call:'Outbound Call',inbound_call:'Inbound Call',google_conference:'Google Conference',zoom:'Zoom Conference',gotomeeting:'GoToMeeting Conference',microsoft_teams_conference:'Microsoft Teams Conference',custom:'Custom Location',ask_invitee:'Invitee Specified Location',webex_conference:'Webex Conference'}

task.remainder.options = {BEFORE30MIN:'30 Min Before',BEFORE1HOUR:'1 Hour Before',BEFORE1DAY:'1 Day Before',BEFORE1WEEK:'1 Week Before'}

all.activity.campaign.query = select distinct 'Campaign' as \"type\", xc.campaign_id as \"id\" ,xc.campaign_name as \"name\", cast(xc.campaign_type as text) as \"stage\" , \
cast(xc.campaign_schedule_type as text) as \"schedule\"  , cast(xc.launch_time as text) as \"createdTime\", cast(xc.updated_time as text) as \"updatedTime\", \
null as \"closeDate\", 'LAUNCHED' as \"activity\", null as \"dueDateString\", cast('true' as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\", xup.email_id as \"addedForEmailId\" \
from xt_campaign xc left join xt_user_profile xup on xc.customer_id = xup.user_id where xc.campaign_id in (:campaignIds) 

all.activity.lead.query = select distinct 'Lead' as \"type\", xl.id as \"id\" ,concat(xl.first_name, ' ' ,xl.last_name) as \"name\",ps.stage_name as \"stage\", cast(xl.company as text) as \"schedule\", \
case when cd.activity_type = 'LEAD_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xl.created_time as text) end as \"createdTime\", cast(xl.created_time as text) as \"updatedTime\", null as \"closeDate\", \
cast(cd.activity_type as text) as \"activity\", null as \"dueDateString\", cast('true' as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\", xup.email_id as \"addedForEmailId\" \
from xt_lead xl left join xt_user_profile xup on xup.user_id= xl.associated_user_id \
left join xt_pipeline_stage ps on xl.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.lead_id= xl.id where xl.id in (:leadIds) 

all.activity.deal.query = select distinct 'Deal' as \"type\", xd.id as \"id\" ,xd.title as \"name\", ps.stage_name as \"stage\", cast(xd.amount as text) as \"schedule\", case when cd.activity_type = 'DEAL_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xd.created_time as text) end as \"createdTime\", \
cast(xd.created_time as text) as \"updatedTime\", cast(xd.close_date as text) as \"closeDate\", cast(cd.activity_type as text) as \"activity\", null as \"dueDateString\", cast('true' as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\", xup.email_id as \"addedForEmailId\" \
from xt_deal xd left join xt_user_profile xup on xup.user_id= xd.associated_user_id left join xt_pipeline_stage ps on xd.pipeline_stage_id=ps.id \
left join xt_campaign_deal_comments cd on cd.deal_id=xd.id where xd.id in (:dealIds) 

all.activity.note.query = select distinct 'Note' as \"type\", xn.id as \"id\", xn.title as \"name\", xn.content as \"stage\", cast(xn.visibility as text) as \"schedule\", cast(xn.updated_time as text) as \"createdTime\", cast(xn.created_time as text) as \"updatedTime\", concat(xcup.firstname, ' ' ,xcup.lastname) as \"closeDate\", \
case when xn.created_time = xn.updated_time then 'CREATED' when xn.created_time < xn.updated_time then 'UPDATED' else 'CREATED' end as \"activity\", null as \"dueDateString\", \
cast(case when created_by = :loggedInUserId then 'true' else 'false' end as boolean) as \"deleteEnabled\", cast(case when created_by = :loggedInUserId then 'true' else 'false' end as boolean) as \"editEnabled\", xup.email_id as \"addedForEmailId\" \
from xt_note xn left join xt_user_profile xup on xn.contact_id= xup.user_id left join xt_user_profile xcup on xn.created_by = xcup.user_id where xn.id in (:noteIds) 

all.activity.email.query = select distinct 'Email' as \"type\", xea.id as \"id\", xea.subject as \"name\", cast(xea.status as text) as \"stage\", xupp.email_id as \"schedule\", cast(xea.created_time as text) as \"createdTime\", cast(xea.opened_time as text) as \"updatedTime\", 'Email' as \"closeDate\", 'CREATED' as \"activity\", \
null as \"dueDateString\", cast('true' as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\", xup.email_id as \"addedForEmailId\" \
from xt_email_activity xea left join xt_user_profile xup on xup.user_id= xea.recipient_user_id left join xt_user_profile xupp on xupp.user_id = xea.sender_user_id where xea.id in (:emailIds) 

all.activity.task.query = select distinct 'Task' as \"type\", xta.id as \"id\", xta.name as \"name\", initcap(cast(xta.priority as text)) as \"stage\", initcap(cast(xta.task_type as text)) as \"schedule\", cast(xta.updated_time as text) as \"createdTime\", cast(xta.created_time as text) as \"updatedTime\", xtas.name as \"closeDate\", \
case when xta.created_time = xta.updated_time then 'CREATED' when xta.created_time < xta.updated_time then 'UPDATED' else 'CREATED' end as \"activity\", cast(xta.due_date as text) as \"dueDateString\", \
cast(case when xta.assigned_by = :loggedInUserId then 'true' else 'false' end as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\", xup.email_id as \"addedForEmailId\" \
from xt_task_activity xta left join xt_task_activity_status xtas on xtas.id = xta.status left join xt_user_profile xup on xup.user_id = xta.contact_id where xta.id in (:taskIds) 

all.recent.activity.company.query = select a.* from (select distinct 'Campaign' as \"type\", xc.campaign_id as \"id\" ,xc.campaign_name as \"name\", case when cast(xc.campaign_type as text) ilike '%REGULAR%' then 'EMAIL' else cast(xc.campaign_type as text) end as \"stage\" , \
cast(xc.campaign_schedule_type as text) as \"schedule\"  , cast(xc.launch_time as text) as \"createdTime\", cast(xc.updated_time as text) as \"updatedTime\", \
null as \"closeDate\", 'LAUNCHED' as \"activity\", xc.campaign_title as \"dueDateString\", cast('true' as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\", null as \"addedForEmailId\" from xt_campaign xc \
left join xt_campaign_user_userlist xcuul on xcuul.campaign_id= xc.campaign_id \
left join xt_user_profile xup on xc.customer_id = xup.user_id join xt_user_userlist uul on uul.user_id = xcuul.user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where xc.campaign_type in ('VIDEO', 'REGULAR', 'SURVEY') and ul.associated_company_id = :userId and xc.is_launched = 'true' and xup.company_id = :companyId {vanityUrlFilterForCampaigns} union \
select distinct 'Lead', xl.id as \"id\" ,concat(xl.first_name, ' ' ,xl.last_name) as \"name\",ps.stage_name, cast(xl.company as text), \
case when cd.activity_type = 'LEAD_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xl.created_time as text) end, cast(xl.created_time as text), null as \"closeDate\", \
cast(cd.activity_type as text) as \"activity\", null, cast('true' as boolean), cast('true' as boolean),  xup.email_id as \"addedForEmailId\" \
from xt_lead xl left join xt_user_profile xup on xup.user_id= xl.associated_user_id \
left join xt_pipeline_stage ps on xl.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.lead_id= xl.id join xt_user_userlist uul on uul.user_id = xl.associated_user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where ul.associated_company_id = :userId and xl.created_by_company_id = :companyId {vanityUrlFilterForLeads} union \
select distinct 'Deal', xd.id as \"id\" ,xd.title, ps.stage_name, cast(xd.amount as text), case when cd.activity_type = 'DEAL_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xd.created_time as text) end, \
cast(xd.created_time as text), cast(xd.close_date as text) as \"closeDate\", cast(cd.activity_type as text) as \"activity\", null, cast('true' as boolean), cast('true' as boolean), xup.email_id as \"addedForEmailId\" \
from xt_deal xd left join xt_user_profile xup on xup.user_id= xd.associated_user_id left join xt_pipeline_stage ps on xd.pipeline_stage_id=ps.id join xt_user_userlist uul on uul.user_id = xd.associated_user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
left join xt_campaign_deal_comments cd on cd.deal_id=xd.id where ul.associated_company_id = :userId and xd.created_by_company_id = :companyId {vanityUrlFilterForDeals} union \
select distinct 'Note', xn.id as \"id\", xn.title, xn.content, cast(xn.visibility as text), cast(xn.updated_time as text), cast(xn.created_time as text), concat(xcup.firstname, ' ' ,xcup.lastname), \
case when xn.created_time = xn.updated_time then 'CREATED' when xn.created_time < xn.updated_time then 'UPDATED' else 'CREATED' end as \"activity\", null, \
cast(case when created_by = :loggedInUserId then 'true' else 'false' end as boolean) as "deleteEnabled", cast(case when created_by = :loggedInUserId then 'true' else 'false' end as boolean) as "editEnabled", adup.email_id as \"addedForEmailId\" \
from xt_note xn left join xt_user_profile xup on xn.contact_id= xup.user_id left join xt_user_profile xcup on xn.created_by = xcup.user_id join xt_user_userlist uul on uul.user_id = xn.contact_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
left join xt_user_profile adup on adup.user_id = xn.contact_id where ((xn.visibility = 'PUBLIC') or (xn.visibility = 'PRIVATE' AND xn.created_by = :loggedInUserId)) and ul.associated_company_id = :userId and xn.company_id= :companyId union \
select distinct 'Email', xea.id as \"id\", xea.subject, cast(xea.status as text), xupp.email_id, cast(xea.created_time as text), cast(xea.opened_time as text), 'Email', 'CREATED', null, cast('true' as boolean), cast('true' as boolean), adup.email_id as \"addedForEmailId\" \
from xt_email_activity xea left join xt_user_profile xup on xup.user_id= xea.recipient_user_id left join xt_user_profile xupp on xupp.user_id = xea.sender_user_id join xt_user_userlist uul on uul.user_id = xea.recipient_user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
left join xt_user_profile adup on adup.user_id = xea.recipient_user_id where ul.associated_company_id = :userId and xea.company_id= :companyId union \
select distinct 'Task', xta.id, xta.name, initcap(cast(xta.priority as text)), initcap(cast(xta.task_type as text)), cast(xta.updated_time as text), cast(xta.created_time as text), xtas.name, \
case when xta.created_time = xta.updated_time then 'CREATED' when xta.created_time < xta.updated_time then 'UPDATED' else 'CREATED' end as \"activity\", cast(xta.due_date as text), \
cast(case when xta.assigned_by = :loggedInUserId then 'true' else 'false' end as boolean), cast('true' as boolean), adup.email_id as \"addedForEmailId\" \
from xt_task_activity xta left join xt_task_activity_status xtas on xtas.id = xta.status join xt_user_userlist uul on uul.user_id = xta.contact_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
left join xt_user_profile adup on adup.user_id = xta.contact_id where ul.associated_company_id = :userId and xta.company_id = :companyId) as a {filterBy} {searchQuery} order by \"createdTime\" desc


all.recent.activity.count.company.query = select cast(count(a.*) as int) from \
(select distinct xc.campaign_id, 'Campaign' as \"type\", null as \"activity\", xc.campaign_name as "name" from xt_campaign xc \
left join xt_campaign_user_userlist xcuul on xcuul.campaign_id= xc.campaign_id \
left join xt_user_profile xup on xc.customer_id = xup.user_id join xt_user_userlist uul on uul.user_id = xcuul.user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where xc.campaign_type in ('VIDEO', 'REGULAR', 'SURVEY') and ul.associated_company_id = :userId \
and xc.is_launched = true and xup.company_id = :companyId {vanityUrlFilterForCampaigns} union \
select distinct xl.id, 'Lead' as \"type\", case when cd.activity_type = 'LEAD_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xl.created_time as text) end, \
concat(xl.first_name, ' ' ,xl.last_name) as "name" \
from xt_lead xl left join xt_user_profile xup on xup.user_id= xl.associated_user_id \
left join xt_pipeline_stage ps on xl.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.lead_id= xl.id join xt_user_userlist uul on uul.user_id = xl.associated_user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where ul.associated_company_id = :userId and xl.created_by_company_id = :companyId {vanityUrlFilterForLeads} union \
select distinct xd.id, 'Deal' as \"type\", case when cd.activity_type = 'DEAL_STAGE_UPDATED' then cast(cd.created_time as text) else cast(xd.created_time as text) end, \
xd.title as \"name\" from xt_deal xd left join xt_user_profile xup on xup.user_id= xd.associated_user_id \
left join xt_pipeline_stage ps on xd.pipeline_stage_id=ps.id left join xt_campaign_deal_comments cd on cd.deal_id=xd.id join xt_user_userlist uul on uul.user_id = xd.associated_user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where ul.associated_company_id = :userId and xd.created_by_company_id = :companyId {vanityUrlFilterForDeals} union \
select distinct xn.id, 'Note' as \"type\", null, xn.title as \"name\" from xt_note xn left join xt_user_profile xup on xn.contact_id= xup.user_id join xt_user_userlist uul on uul.user_id = xn.contact_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where ((xn.visibility = 'PUBLIC') or (xn.visibility = 'PRIVATE' AND xn.created_by = :loggedInUserId)) and ul.associated_company_id = :userId and xn.company_id = :companyId union select distinct xea.id, 'Email' as \"type\", null, xea.subject as \"name\" \
from xt_email_activity xea left join xt_user_profile xup on xup.user_id= xea.recipient_user_id join xt_user_userlist uul on uul.user_id = xea.recipient_user_id join xt_user_list ul on ul.user_list_id = uul.user_list_id where ul.associated_company_id = :userId and xea.company_id = :companyId union \
select distinct xta.id,'Task', null, xta.name as \"name\" \
from xt_task_activity xta join xt_user_userlist uul on uul.user_id = xta.contact_id join xt_user_list ul on ul.user_list_id = uul.user_list_id where ul.associated_company_id = :userId and xta.company_id = :companyId) as a {filterBy} {searchQuery}

company.leads.from.and.where.clause.data.query =  from xt_user_list ul, xt_user_userlist uul, xt_lead l join xt_pipeline_stage ps on l.pipeline_stage_id = ps.id left join xt_campaign c on c.campaign_id = l.campaign_id \
 where ul.associated_company_id = :contactId and ul.user_list_id = uul.user_list_id \
 and uul.user_id = l.associated_user_id and l.created_by_company_id = :companyId \
 and ul.company_id = :companyId {vanityFilterQuery} order by l.id desc
 
company.leads.from.and.where.clause.count.query = from xt_user_list ul, xt_user_userlist uul, xt_lead l \
where ul.associated_company_id = :contactId and ul.user_list_id = uul.user_list_id \
and uul.user_id = l.associated_user_id and l.created_by_company_id = :companyId and ul.company_id = :companyId {vanityFilterQuery}

contact.leads.from.and.where.clause.data.query = from xt_lead l join xt_pipeline_stage ps on l.pipeline_stage_id = ps.id left join xt_campaign c on c.campaign_id = l.campaign_id \
where l.created_by_company_id = :companyId and l.associated_user_id = :contactId {vanityFilterQuery} order by l.id desc

contact.leads.from.and.where.clause.count.query = from xt_lead l where l.created_by_company_id = :companyId and l.associated_user_id = :contactId {vanityFilterQuery}

leads.limited.data.query = select l.id as \"id\", concat((case when l.first_name is not null and l.first_name not like ' ' then concat(l.first_name, ' ') else '' end), l.last_name) as \"fullName\", \
c.campaign_name as \"campaignName\", ps.stage_name as \"stageName\" 

company.notes.from.and.where.clause.data.query =   FROM xt_note AS xn INNER JOIN xt_user_profile xup ON xn.created_by = xup.user_id JOIN xt_user_userlist uul ON xn.contact_id = uul.user_id \
JOIN xt_user_list ul ON uul.user_list_id = ul.user_list_id left join xt_user_profile adup on xn.contact_id = adup.user_id \
where ((xn.visibility = 'PUBLIC' AND xn.company_id = :companyId) OR \
(xn.visibility = 'PRIVATE' AND xn.created_by = :userId and xn.company_id = :companyId)) \
and xn.association_type = 'CONTACT' and ul.associated_company_id = :contactId 
 
company.notes.from.and.where.clause.count.query = FROM xt_note AS xn join xt_user_userlist uul ON xn.contact_id = uul.user_id join xt_user_list ul ON uul.user_list_id = ul.user_list_id \
where ((xn.visibility = 'PUBLIC' AND xn.company_id = :companyId) OR \
(xn.visibility = 'PRIVATE' AND xn.created_by = :userId and xn.company_id = :companyId)) \
and xn.association_type = 'CONTACT' and ul.associated_company_id = :contactId 

contact.notes.from.and.where.clause.data.query = FROM xt_note AS xn INNER JOIN xt_user_profile xup ON xn.created_by = xup.user_id \
where ((xn.visibility = 'PUBLIC' AND xn.company_id = :companyId) OR \
(xn.visibility = 'PRIVATE' AND xn.created_by = :userId and xn.company_id = :companyId)) \
and xn.contact_id = :contactId and xn.association_type = 'CONTACT'

contact.notes.from.and.where.clause.count.query = FROM xt_note AS xn where ((xn.visibility = 'PUBLIC' AND xn.company_id = :companyId) OR \
(xn.visibility = 'PRIVATE' AND xn.created_by = :userId and xn.company_id = :companyId)) \
 and xn.contact_id = :contactId and xn.association_type = 'CONTACT' 
 
all.note.activity.data.query = SELECT xn.id AS \"id\", xn.title AS \"title\", xn.content AS \"content\", CAST(xn.visibility AS TEXT) AS \"visibility\", \
xn.created_by AS \"createdBy\", cast(xn.created_time as text) AS \"createdTime\", xn.updated_by AS \"updatedBy\", \
cast(xn.updated_time as text) AS \"updatedTime\", {addedForEmailIdString} \
xup.firstname AS \"createdByFirstName\", xup.lastname AS \"createdByLastName\", \
cast(case when created_by = :userId then 'true' else 'false' end as boolean) as \"deleteEnabled\", \
cast(case when created_by = :userId then 'true' else 'false' end as boolean) as \"editEnabled\" {fromAndWhereClauseDataQueryString} \

company.deals.from.and.where.clause.data.query =  from xt_user_list ul, xt_user_userlist uul, xt_deal d join xt_pipeline_stage ps on d.pipeline_stage_id = ps.id left join xt_campaign c on c.campaign_id = d.campaign_id \
where ul.associated_company_id = :contactId and ul.user_list_id = uul.user_list_id \
and uul.user_id = d.associated_user_id and d.created_by_company_id = :companyId \
and ul.company_id = :companyId {vanityFilterQuery} order by d.id desc
 
company.deals.from.and.where.clause.count.query = from xt_user_list ul, xt_user_userlist uul, xt_deal d \
where ul.associated_company_id = :contactId and ul.user_list_id = uul.user_list_id \
and uul.user_id = d.associated_user_id and d.created_by_company_id = :companyId \
and ul.company_id = :companyId {vanityFilterQuery}

contact.deals.from.and.where.clause.data.query = from xt_deal d join xt_pipeline_stage ps on d.pipeline_stage_id = ps.id left join xt_campaign c on c.campaign_id = d.campaign_id \
where d.created_by_company_id = :companyId and d.associated_user_id = :contactId \
{vanityFilterQuery} order by d.id desc

contact.deals.from.and.where.clause.count.query = from xt_deal d where d.created_by_company_id = :companyId and d.associated_user_id = :contactId {vanityFilterQuery}

deals.limited.data.query = select d.id as \"id\", d.title as \"title\", d.amount as \"amount\", cast(d.close_date as text) as \"closeDate\", \
 ps.stage_name as \"stageName\", c.campaign_name as \"campaignName\" 
 
company.campaigns.from.and.where.clause.data.query =  from xt_campaign xc join xt_user_profile xup on xc.customer_id = xup.user_id left join xt_campaign_user_userlist xcuu on xcuu.campaign_id = xc.campaign_id \
join xt_user_userlist uul on xcuu.user_id = uul.user_id join xt_user_list ul on uul.user_list_id = ul.user_list_id \
where xc.is_launched = true and xup.company_id = :companyId and ul.associated_company_id = :contactId and xc.campaign_type in ('REGULAR', 'VIDEO', 'SURVEY') \
{vanityFilterQuery} order by cast(xc.launch_time as text) desc
 
company.campaigns.from.and.where.clause.count.query = from xt_campaign xc join xt_user_profile xup on xc.customer_id = xup.user_id left join xt_campaign_user_userlist xcuu on xcuu.campaign_id = xc.campaign_id \
join xt_user_userlist uul on xcuu.user_id = uul.user_id join xt_user_list ul on uul.user_list_id = ul.user_list_id \
where xc.is_launched = true and xup.company_id = :companyId and ul.associated_company_id = :contactId and xc.campaign_type in ('REGULAR', 'VIDEO', 'SURVEY') {vanityFilterQuery}

contact.campaigns.from.and.where.clause.data.query = from xt_campaign xc join xt_user_profile xup on xc.customer_id = xup.user_id left join xt_campaign_user_userlist xcuu on xcuu.campaign_id = xc.campaign_id \
where xc.is_launched = true and xup.company_id = :companyId and xcuu.user_id = :contactId and  xc.campaign_type in ('REGULAR', 'VIDEO') \
{vanityFilterQuery} order by cast(xc.launch_time as text) desc

contact.campaigns.from.and.where.clause.count.query = from xt_campaign xc join xt_user_profile xup on xc.customer_id = xup.user_id left join xt_campaign_user_userlist xcuu on xcuu.campaign_id = xc.campaign_id \
where xc.is_launched = true and xup.company_id = :companyId and xcuu.user_id = :contactId and  xc.campaign_type in ('REGULAR', 'VIDEO') {vanityFilterQuery}

campaigns.limited.data.query = select distinct xc.campaign_id as \"campaignId\", xc.campaign_name as \"campaignName\", case when cast(xc.campaign_type as text) ilike '%REGULAR%' then 'EMAIL' else cast(xc.campaign_type as text) end as \"campaignType\", \
cast(xc.launch_time as text) as \"launchTime\", xc.campaign_title as \"campaignTitle\"

company.emails.from.and.where.clause.data.query =   from xt_email_activity ea left join xt_user_profile up on ea.sender_user_id = up.user_id left join xt_user_profile adup on adup.user_id = ea.recipient_user_id \
JOIN xt_user_userlist uul ON ea.recipient_user_id = uul.user_id JOIN xt_user_list ul ON uul.user_list_id = ul.user_list_id \
where ea.company_id = :companyId and ul.associated_company_id = :userId 
 
company.emails.from.and.where.clause.count.query = from xt_email_activity ea JOIN xt_user_userlist uul ON ea.recipient_user_id = uul.user_id JOIN xt_user_list ul ON uul.user_list_id = ul.user_list_id \
where ea.company_id = :companyId and ul.associated_company_id = :userId

contact.emails.from.and.where.clause.data.query = from xt_email_activity ea left join xt_user_profile up on ea.sender_user_id = up.user_id \
where ea.company_id = :companyId and ea.recipient_user_id = :userId

contact.emails.from.and.where.clause.count.query = from xt_email_activity ea where ea.company_id = :companyId and ea.recipient_user_id = :userId 
 
all.email.activity.data.query = select ea.id as \"id\", ea.subject as \"subject\", cast(ea.status as text) as \"status\", {addedForEmailIdString} \
up.email_id as \"senderEmailId\", cast(ea.created_time as text) as \"createdTime\", cast(ea.opened_time as text) as \"openedTime\" 

company.tasks.from.and.where.clause.data.query =  from xt_task_activity ta left join xt_user_profile atup on ta.assigned_to = atup.user_id left join xt_user_profile adup on ta.contact_id = adup.user_id \
left join xt_user_profile abup on ta.assigned_by = abup.user_id left join xt_task_activity_status tas on tas.id = ta.status \
join xt_user_userlist uul on uul.user_id = ta.contact_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where ul.associated_company_id = :userId and ta.company_id = :companyId 
 
company.tasks.from.and.where.clause.count.query = from xt_task_activity ta left join xt_user_profile atup on ta.assigned_to = atup.user_id \
left join xt_user_profile abup on ta.assigned_by = abup.user_id join xt_user_userlist uul on uul.user_id = ta.contact_id join xt_user_list ul on ul.user_list_id = uul.user_list_id \
where ul.associated_company_id = :userId and ta.company_id = :companyId

contact.tasks.from.and.where.clause.data.query = from xt_task_activity ta left join xt_user_profile atup on ta.assigned_to = atup.user_id \
left join xt_user_profile abup on ta.assigned_by = abup.user_id left join xt_task_activity_status tas on tas.id = ta.status \
where ta.contact_id = :userId and ta.company_id = :companyId

contact.tasks.from.and.where.clause.count.query = from xt_task_activity ta left join xt_user_profile atup on ta.assigned_to = atup.user_id \
left join xt_user_profile abup on ta.assigned_by = abup.user_id where ta.contact_id = :userId and ta.company_id = :companyId
 
all.task.activity.data.query = select ta.id as \"id\", ta.name as \"name\", ta.description as \"description\", tas.name as \"statusName\", \
cast(ta.due_date as text) as \"dueDate\", cast(ta.created_time as text) as \"createdTime\", cast(ta.updated_time as text) as \"updatedTime\", \
initcap(cast(ta.priority as text)) as \"priority\", initcap(cast(ta.task_type as text)) as \"taskType\", concat(atup.firstname,' ',atup.lastname) as \"assignedToName\", \
concat(abup.firstname,' ',abup.lastname) as \"assignedByName\", {addedForEmailIdString} \
cast(case when ta.assigned_by = :loggedInUserId then 'true' else 'false' end as boolean) as \"deleteEnabled\", cast('true' as boolean) as \"editEnabled\" 


