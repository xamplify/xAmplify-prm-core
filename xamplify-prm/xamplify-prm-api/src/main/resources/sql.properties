vendors.count = select count(*) from xt_partnership where partner_company_id = :partnerCompanyId 
campaign.partners.contacts = with campaign_list as ( \
select c.user_id,c.campaign_id,max(c.firstname) as firstname,max(c.lastname) as lastname,up.email_id \
from xt_campaign_user_userlist c  \
join xt_user_profile up on c.user_id = up.user_id \
where c.campaign_id = :campaignId \
group by c.user_id,c.campaign_id,up.email_id), \
campaign_status as (select * from public.xt_campaign_user_work_flow_status) \
select campaign_list.*,coalesce(campaign_status.work_flow_status,'ACTIVE') \
from campaign_list left join campaign_status \
on campaign_list.campaign_id = campaign_status.campaign_id and campaign_list.user_id = campaign_status.user_id


#################VanityUrl################
foldersByVanityFilterQuery = select distinct cat.id from xt_partnership a,xt_partner_landing_page b,xt_landing_page c,\
xt_category  cat,xt_category_module cm	where a.id = b.partner_ship_fkey_id and a.partner_company_id = :partnerCompanyId \
and a.vendor_company_id=:vendorCompanyId and c.id =	b.landing_page_fkey_id and cat.id = cm.category_id and cm.landing_page_id = c.id and \
cat.company_id = c.company_id and cat.company_id = cm.company_id and 


######CampaignsListByUserListId########## commented by Swathi 19/07.2021 for the lists with 0 contacts
#campaigns.user.list.id = select distinct c.campaign_id,c.campaign_name,c.campaign_type,c.launch_time,c.time_zone, \
#u.email_id,u.firstname,u.lastname from xt_campaign c,xt_user_profile u, \
#xt_campaign_user_userlist cuu  where c.campaign_id = cuu.campaign_id \
#and c.customer_id  = u.user_id and c.is_launched = true and \
#c.campaign_type not in ('LANDINGPAGE','SOCIAL')  and cuu.user_list_id = :userListId and c.email_template_id is not null

campaigns.user.list.id = select distinct c.campaign_id,c.campaign_name,c.campaign_type,c.launch_time,c.time_zone, \
u.email_id,u.firstname,u.lastname,c.is_channel_campaign from xt_campaign c left outer join xt_campaign pc  \
on c.parent_campaign_id = pc.campaign_id,xt_user_profile u, \
xt_campaign_user_lists cuu  where c.campaign_id = cuu.campaign_id \
and c.customer_id  = u.user_id and c.is_launched = true \
and (c.parent_campaign_id is null or pc.end_date is null or pc.end_date > NOW()) \
and c.campaign_type not in ('LANDINGPAGE','SOCIAL')  and cuu.user_list_id = :userListId and c.email_template_id is not null


userListAndUserIdFilter =  and c.campaign_id not in (select distinct campaign_id from xt_campaign_user_userlist where user_id = :partnerId and user_list_id=:userListId \
	and c.campaign_type not in ('LANDINGPAGE','SOCIAL') )

###########Shared Campaigs Count In Folder#####################################
partnerCampaignCountQuery = (select cp.campaign_id from xt_campaign_partner cp,xt_campaign c where cp.partner_company_id=:partnerCompanyId \
and c.campaign_id = cp.campaign_id and c.campaign_type not in ('LANDINGPAGE'))

##################UserDetails##############################
userDetailsByAlias = select u.email_id,u.firstname,u.lastname,c.company_name,r.role,u.status,u.datereg, \
u.datelastlogin,u.updated_time,r.role_id,u.user_id,u.source,c.company_profile_name from xt_user_profile u,xt_company_profile c,xt_user_role ur,xt_role r \
where u.company_id = c.company_id and c.company_id = :companyId \
and u.alias = :userAlias and ur.user_id =u.user_id and (ur.role_id  = 13 or ur.role_id = 2 or ur.role_id = 18 or ur.role_id = 19 or ur.role_id = 20) \
and r.role_id = ur.role_id and ur.user_id = u.user_id

################### Has Redistribute Access ####################
listRoleIdsByCampaignIdQuery = select ur.role_id from xt_user_role ur,xt_user_profile u \
where  u.user_id in (select user_id from xt_user_profile where company_id = \
(select company_id from xt_user_profile where user_id = \
(select customer_id from xt_campaign where campaign_id = :campaignId))) \
and u.user_id = ur.user_id	

############ Getting Vendor Company User Roles By Partner Id ###########################
vendorCompanyUserRolesQuery = select ur.role_id from xt_user_profile u,xt_user_role ur where  u.user_id = ur.user_id \
and u.company_id in (select vendor_company_id from xt_partnership where partner_company_id  = (select company_id from xt_user_profile where user_id = :userId) and status = 'approved')

#####################Get Admin Roles By Company Id#####################
adminRolesByCompanyIdQuery  = select distinct u.user_id as \"id\",u.email_id as \"emailId\",concat(u.firstname, ' ', u.lastname) as \"fullName\" from xt_user_profile u,\
xt_user_role ur where u.user_id = ur.user_id and u.company_id  = :companyId and ur.role_id in (adminRoleIdsString)

############User Level Campaign Analytics###############
campaignAnalyticsByUserQuery = select distinct xc.campaign_id as \"campaignId\" ,xc.campaign_name as \"campaignName\",xc.campaign_type as \"campaignType\", xc.campaign_schedule_type as \"campaignScheduleType\" ,xc.launch_time as \"launchTime\", xc.time_zone as \"timezone\", concat(xup.firstname, ' ', xup.lastname) as \"fullName\", \
xup.email_id as \"emailId\", max(date_trunc('minute', "time"))   as \"latestView\", \
case when campaign_type ='REGULAR' THEN \
 count(distinct case when xel.action_id = 13 and xel.url_id is null and xel.reply_id is null and \
 (xel.video_id is null or xel.video_id=0) then date_trunc('minute',xel.time) end ) \
else \
count(distinct case when xel.action_id = 13 and xel.url_id is null and xel.reply_id is null and \
 (xel.video_id is not null) then date_trunc('minute',xel.time) end ) \
end as "emailOpenedCount", \
count(distinct case when xel.action_id = 15 and xel.reply_id is null and xel.url_id is null then xel.id end)  as \"clickedUrlsCount\",\
coalesce(count(distinct cr.id), 0) + coalesce(count(distinct cu.id), 0)  as \"autoResponsesCount\", xc.campaign_title as \"campaignTitle\" from xt_campaign xc join xt_user_profile xup on xc.customer_id = xup.user_id \
left join xt_campaign_user_userlist xcuu on	xcuu.campaign_id = xc.campaign_id left join xt_email_log xel on xel.campaign_id = xc.campaign_id and  xel.user_id = xcuu.user_id \
left join (	select	distinct xcr.id, xcr.campaign_id , xcesl.user_id from xt_campaign_replies xcr left join xt_campaign_email_sent_log xcesl on xcesl.reply_id = xcr.id) cr on \
cr.campaign_id = xc.campaign_id	and cr.user_id = xcuu.user_id left join (select	distinct xccu.id, xccu.campaign_id , xcesl.user_id from xt_campaign_clicked_urls xccu \
left join xt_campaign_email_sent_log xcesl on xcesl.click_id = xccu.id) cu on cu.campaign_id = xc.campaign_id and cu.user_id = xcuu.user_id \
where	xc.is_launched = true and xup.company_id = :companyId	and xcuu.user_id = :userId and 

campaignAnalyticsByUserGroupByQuery = group by xc.campaign_id,xc.campaign_name, xc.campaign_type,	xc.launch_time,	xup.firstname, xup.lastname , xup.email_id

campaignAnalyticsByUserSearchQuery = \and ( LOWER(xc.campaign_name) like LOWER('%searchKey%') or LOWER(xup.firstname) like LOWER('%searchKey%') or LOWER(xup.email_id) like LOWER('%searchKey%') \
or LOWER(xup.lastname) like LOWER('%searchKey%'))

totalAndActiveCampaignsQuery = select count(distinct xc.campaign_id) as \"campaignsCount\",count(distinct xel.campaign_id) as \"emailsOpenedCount\" from xt_campaign xc \
join xt_user_profile xup on xup.user_id = xc.customer_id left join xt_campaign_user_userlist xcuu on xcuu.campaign_id = xc.campaign_id \
left join xt_email_log xel on xel.campaign_id = xc.campaign_id and xel.user_id = xcuu.user_id where xup.company_id = :companyId and xcuu.user_id = :userId and xc.is_launched = true and xc.campaign_type in ('REGULAR', 'VIDEO')

#########UserLevel Campaign Analytics Query#####################
userLevelCampaignTimeLineEmailOpenedAndClickedUrlsCountQuery = select count(distinct case when xel.action_id = 13 and xel.reply_id is null  and xel.url_id is null and  (xel.video_id is null or xel.video_id <> 0) \
 then date_trunc('minute', "time") end) as "\emailOpenedCount\" ,count(distinct case when xel.action_id = 15 and xel.reply_id is null and xel.url_id is null then xel.id end) as \"clickedUrlsCount\" from 	xt_email_log xel \
where xel.campaign_id = :campaignId	and xel.user_id = :userId

userLevelCampaignTimeLineWatchCountQuery = SELECT ( SELECT COUNT(DISTINCT session_id)  FROM  xt_xtremand_log where user_id=:userId \
 and campaign_id=:campaignId) +(select count(*) from xt_xtremand_log where user_id=:userId and campaign_id=:campaignId and action_id = 10);

userLevelCampaignTimeLineTotalTimeSpentQuery = SELECT sum(stop_duration - start_duration) as spent FROM xt_xtremand_log where user_id=:userId and action_id=1 and campaign_id=:campaignId

userLevelCampaignTimeLineEmailLogsQuery = select distinct on (e.action_id, to_char(e.time, 'YYYY-MM-DD HH24:MI')) * from xt_email_log e where e.user_id = :userId  and e.campaign_id=:campaignId and e.action_id=13 group by e.time, e.id  union \
select * from xt_email_log e where e.user_id = :userId and e.campaign_id=:campaignId and e.action_id in (14, 15) group by e.time, e.id
	
userLevelCampaignTimeLinePlayLogs = SELECT * FROM ( SELECT session_id, action_id, start_time, city, state, country, country_code, isp, row_number() \
over ( partition by session_id order by start_time ) as rn FROM xt_xtremand_log WHERE campaign_id = :campaignId \
AND user_id = :userId) as rs where rs.rn = 1	
 
userLevelCampaignTimeLineReplayLogs = SELECT session_id, action_id, start_time, city, state, country, country_code, isp  FROM xt_xtremand_log WHERE campaign_id =:campaignId \
AND user_id = :userId AND action_id = 10
 
userLevelCampaignTimeLineCampaignDetailsQuery = SELECT distinct c.campaign_name as \"campaignName\",c.campaign_type as \"campaignType\",c.time_zone as \"timezone\", \
c.is_nurture_campaign as \"nurtureCampaign\",	c.is_channel_campaign as \"channelCampaign\", c.customer_id as \"userId\",  c.launch_time as \"launchTime\",v.title as \"videoTitle\",u.company_id as \"companyId\" FROM xt_campaign  c LEFT JOIN xt_campaign_videos cv \
ON c.campaign_id = cv.campaign_id LEFT JOIN xt_video_files v ON v.id = cv.video_id \
LEFT JOIN xt_user_profile u ON c.customer_id = u.user_id  where c.campaign_id = :campaignId  

userDetailsFromUserListQuery = select distinct xuu.user_id as \"id\",xup.email_id as \"emailId\", \
max(case when xuu.firstname is not null and xuu.lastname is not null then xuu.firstname||' '||xuu.lastname \
when xuu.firstname is not null and xuu.lastname is null then xuu.firstname  when xuu.firstname is null and xuu.lastname is not null then xuu.lastname \
end) as \"fullName\",max(xuu.contact_company) as \"companyName\" from xt_user_list xul left join xt_user_userlist xuu on xuu.user_list_id = xul.user_list_id join xt_user_profile xup on xup.user_id = xuu.user_id \
where xul.company_id = :companyId and xup.user_id = :userId and xul.is_partner_userlist = :isPartner group by xuu.user_id,xup.email_id order by xuu.user_id


maxUserListIdByUserId = select max(xuu.user_list_id) as userListId from xt_user_userlist xuu,xt_campaign_user_lists xcu where xuu.user_list_id = xcu.user_list_id and \
 xcu.campaign_id = :campaignId and xuu.user_id = :userId
 
userListIdString = \"id\"
customerIdString = \"customerId\"
userListNameString = \"name\"
publicString = \"publicList\" 
createdTimeInString = \"createdDate\"
validListString = \"emailValidationInd\"
contactTypeString = \"type\"
partnerListString = \"partnerList\"

#Campaign User List Query
campaignUserListQueryByCampaignIdQueryPrefix = select user_list_id as ${userListIdString},customer_id as ${customerIdString},user_list_name as ${userListNameString},is_public as ${publicString},\
created_time as ${createdTimeInString},email_validation_ind as ${validListString} ,contact_type as ${contactTypeString} ,is_partner_userlist as ${partnerListString}, social_network as \"socialNetwork\",  module_name as \"moduleName\" \
from (with userlist as (select ul.* from  xt_user_list ul left join xt_user_userlist uul on ul.user_list_id = uul.user_list_id left join xt_user_profile u on uul.user_id = u.user_id \
where ul.company_id = :companyId 

campaignUserListQueryByCampaignIdQuerySuffix = ),campaign as (select distinct cuu.user_list_id as userlist_id ,c.campaign_id ,up.company_id \
from xt_campaign c join xt_user_profile up on up.user_id = c.customer_id left join xt_campaign_user_userlist cuu on cuu.campaign_id = c.campaign_id \
where c.campaign_id = :campaignId) select  distinct userlist.*,campaign.userlist_id from userlist left join campaign on userlist.company_id = campaign.company_id \
 and userlist.user_list_id = campaign.userlist_id order by campaign.userlist_id) as query 

 
assignedListFilterQuery =  and (assigned_company_id  = (select u.company_id from xt_user_profile u,xt_campaign c where c.customer_id = u.user_id and c.campaign_id = :parentCampaignId) \
 or assigned_company_id is null )

excludePartnerUserListsQuery =  and is_partner_userlist = false

#Commented On 03/06/2021 - Swathi
#campaignUserListQuery = select user_list_id as ${userListIdString},customer_id as ${customerIdString},user_list_name as ${userListNameString},is_public as ${publicString},\
#created_time as ${createdTimeInString},email_validation_ind as ${validListString} ,contact_type as ${contactTypeString} ,is_partner_userlist as ${partnerListString} \
#from xt_user_list where company_id = :companyId \

campaignUserListQuery = select ul.user_list_id as ${userListIdString},customer_id as ${customerIdString},user_list_name as ${userListNameString},is_public as ${publicString},\
ul.created_time as ${createdTimeInString},ul.email_validation_ind as ${validListString} ,contact_type as ${contactTypeString} ,is_partner_userlist as ${partnerListString}, social_network as \"socialNetwork\", module_name as \"moduleName\", \
CASE WHEN ul.form_id IS NOT NULL THEN true ELSE false END AS \"formList\"  \
from xt_user_list ul left join xt_user_userlist uul on ul.user_list_id = uul.user_list_id left join xt_user_profile u on uul.user_id = u.user_id \
where ul.company_id = :companyId \

campaignUserListQueryGroupBy = group by ul.user_list_id, ul.user_list_name


campaignUserListOrderByTimeQuery  =  order by ul.created_time desc 

campaignUserListSearchQuery = and (ul.user_list_name ilike '%searchKey%' or uul.firstname ilike '%searchKey%' or uul.lastname ilike '%searchKey%' \
or uul.contact_company ilike '%searchKey%' or uul.mobile_number ilike '%searchKey%' or u.email_id ilike '%searchKey%' or uul.job_title ilike '%searchKey%' \
or uul.address ilike '%searchKey%')

orderByTimeQuery =  order by created_time desc
 
#CampaignAnalyticsCountQuery
campaignsAnalyticsCountQuery = select a.campaign_id as \"campaignId"\,a.campaign_type as \"type\",cast(a.\"totalRecipients"\ as text), cast(a.\"activeRecipients"\ as text)|| ' (' || \
cast(round((a.\"activeRecipients"\ / NULLIF(cast(a.\"totalRecipients"\ as numeric),0)) *100 ,1) as text) || '%)' \
as \"activeRecipients"\,cast(a.\"emailClicked"\ as text),cast(a.\"views"\ as text) from (select c.campaign_id,c.campaign_type,count(distinct cuul.user_id) as \
 \"totalRecipients"\, count(distinct el.user_id) as  \"activeRecipients"\,count(distinct case when	(el.action_id = 14 or el.action_id = 15) \
 and el.url_id is null and el.reply_id is null then el.user_id end)  as \"emailClicked"\, (count(DISTINCT xl.session_id) + count(CASE WHEN xl.action_id = 10 THEN xl.user_id \
 END)) AS \"views"\ from xt_campaign c left join xt_campaign_user_userlist cuul on (cuul.campaign_id=c.campaign_id) \
 left join xt_email_log el on (el.campaign_id=c.campaign_id and cuul.user_id=el.user_id) \
 LEFT JOIN xt_xtremand_log xl ON (xl.user_id = cuul.user_id AND c.campaign_id = xl.campaign_id) \
 where c.campaign_id=:campaignId group by 1 order by 3 desc) a
 


emailCampaignsAnalyticsCountQuery =  with a as( select distinct campaign_id as \"campaignId\", cast (campaign_type as text) as \"type\", \
cast(sum (\"Total Emails Sent"\) as text) as \"totalEmailsSent"\, \
cast (sum(\"Total email Contacts"\) as text) as \"totalRecipients\", cast (sum(\"Email Opened"\) as text)||' ('|| round((sum(\"Email Opened"\)/ \
(CASE sum(\"Total email Contacts"\) WHEN 0 THEN 1 ELSE sum(\"Total email Contacts"\) end))*100,2) || '%)' as \"activeRecipients"\, \
cast (sum(\"Email Opened"\) as text) as \"opened"\, \
cast (sum(\"Email Clicked"\) as text) as \"emailClicked"\, \
cast (sum( \"Pages Clicked"\) as text) as \"pagesClicked"\, \
cast (sum(\"Soft Bounce"\) as text) as \"softBounce"\, \
cast (sum(\"Hard Bounce"\) as text) as \"hardBounce"\, \
cast (sum(\"Unsubscribed"\) as text) as \"unsubscribed"\, \
cast (count (distinct case when (\"Bounce"\=false and \"Block"\=false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) as text) ||' ('||  \
round((count (distinct case when ("Bounce"\=false and "Block"\=false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) / \
(CASE sum(\"Total Emails Sent"\) WHEN 0 THEN 1 ELSE sum(\"Total Emails Sent"\) end)) *100, 2) \
|| '%)' as \"delivered"\, \
cast(count (distinct case when ("Bounce"=false and "Block"=false and "Spam"=false) and "Is_Email_Valid"=true then "Sent User" end) as text) as \"deliveredCount"\, \
cast (round(sum(\"Email Opened"\) / (case count (distinct case when (\"Bounce"\=false and \"Block"\= false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) when 0 then 1 else \
 count (distinct case when (\"Bounce"\=false and \"Block"\= false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) end ) *100, 2) as text) || '%' as \"openRate"\,  \
cast (round((sum(\"Email Clicked"\) / (CASE sum(\"Email Opened"\) WHEN 0 THEN 1 ELSE sum(\"Email Opened"\) end)) *100, 2) as text) || '%' as \"clickthroughRate"\, \
cast (sum(\"views"\) as text) as \"views"\, \
cast (max(social) as text) as \"socialRedistributed"\ \
from \
(select distinct \
xc.campaign_id,  \
xc.campaign_type,  \
xcuu.user_id,  \
xup2.email_id, \
xup2.is_email_valid as \"Is_Email_Valid"\, \
(case when sg.user_id=xcuu.user_id and (((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))<=3)) \
then true else false end) as \"Bounce"\, \
(case when sg1.user_id=xcuu.user_id and \
(((DATE_PART('year',age(sg1.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg1.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg1.created,xc.launch_time))*24+ DATE_PART('hour', age(sg1.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg1.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg1.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg1.created,xc.launch_time))*24+ DATE_PART('hour', age(sg1.created,xc.launch_time) ))<=3)) \
then true else false end) as \"Block"\, \
(case when sg2.user_id=xcuu.user_id and \
(((DATE_PART('year',age(sg2.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg2.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg2.created,xc.launch_time))*24+ DATE_PART('hour', age(sg2.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg2.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg2.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg2.created,xc.launch_time))*24+ DATE_PART('hour', age(sg2.created,xc.launch_time) ))<=3)) \
then true else false end) as \"Spam"\,  \
ceh.user_id as \"Sent User"\, \
count(distinct case when xup2.is_email_valid=false \
then xcuu.user_id else null end) as \"Soft Bounce"\,  \
count(distinct case when xup2.is_email_valid=true and sg.user_id="xcuu".user_id and  \
 sg.created>=xc.launch_time and \
(((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))<=3)) \
then xcuu.user_id else null end) as \"Hard Bounce"\,  \
count(distinct xuu.id) as \"Unsubscribed"\,  \
count( distinct case when xel.action_id = 13 and xel.url_id IS NULL  \
and xel.reply_id IS null then xel.user_id end) as \"Email Opened"\,  \
count (distinct xcuu.user_id )as \"Total email Contacts"\,  \
count ( distinct case when (xel.action_id = 14 OR xel.action_id = 15) AND xel.url_id IS NULL  \
and xel.reply_id IS NULL THEN xel.user_id else null end) AS \"Email Clicked"\,  \
count ( distinct case when (xel.action_id = 14 OR xel.action_id = 15) AND xel.url_id IS NULL  \
and xel.reply_id IS NULL THEN xel.id else null end) AS \"Pages Clicked"\,  \
count(distinct ceh.user_id) as \"Total Emails Sent"\  \
,count(distinct xel.user_id) as \"active"\  \
,count(distinct case when (xel.action_id = 14 or xel.action_id = 15) and xel.url_id is null and xel.reply_id is null then xel.user_id end)  as \"emailClicked"\  \
,count(DISTINCT xxl.session_id) + count(distinct CASE WHEN xxl.action_id = 10 THEN xxl.id END) AS \"views"\  \
,count(distinct case when xss.social_status_id = xss2.parent then xss2.social_status_id end) as \"social"\  \
from  \
xt_campaign xc  \
left join xt_user_profile xup on (xc.customer_id = xup.user_id)  \
left join xt_company_profile xcp on (xup.company_id = xcp.company_id)  \
left join xt_campaign_user_userlist xcuu on (xcuu.campaign_id = xc .campaign_id)  \
left join xt_user_profile xup2 on xup2.user_id = xcuu.user_id \
left join xt_email_log xel on (xel.campaign_id = xc.campaign_id and  xel.user_id = xcuu.user_id)  \
left join xt_xtremand_log xxl ON (xxl.user_id = xcuu.user_id AND xc.campaign_id = xxl.campaign_id) \
left join xt_bounce sg on (xcuu.user_id = sg.user_id)  \
left join xt_block sg1 on (xcuu.user_id = sg1.user_id)  \
left join xt_spam sg2 on (xcuu.user_id = sg2.user_id)  \
left join xt_campaign_emails_history ceh on (xc.campaign_id = ceh.campaign_id and xcuu.user_id = ceh.user_id)  \
left join public.xt_unsubscribed_user xuu on xuu.customer_company_id  =  xcp.company_id and xcuu.user_id  =  xuu.user_id  \
left join xt_social_status xss on xss.campaign_id = xc.campaign_id  \
left join xt_social_status xss2 on xss.social_status_id = xss2.parent  \
where xc.campaign_id in  \
(select campaign_id from xt_campaign where customer_id in (select user_id from xt_user_profile where company_id = :companyId))  \
and xc.is_launched = true  \
group by 1,2,3,4,5,6,7,8,9  \
) as cte  \
where  campaign_id = :campaignId  \
group by 1,2), \
b as \
(select c.campaign_id , count(distinct l.id) as \"leadCount\" \
from xt_campaign c, xt_lead l, xt_campaign rc \
where l.campaign_id = rc.campaign_id \
and ((rc.customer_id IN (select user_id from xt_user_profile where company_id = :companyId) and rc.campaign_id = c.campaign_id) \
or (rc.customer_id NOT IN (select user_id from xt_user_profile where company_id = :companyId) \
and (((rc.parent_campaign_id is not null and c.campaign_id = rc.parent_campaign_id) \
or (rc.parent_campaign_id is null and c.campaign_id = rc.campaign_id)) \
and c.customer_id IN (select user_id from xt_user_profile where company_id = :companyId)))) \
and c.campaign_id = :campaignId \
and c.is_launched = true \
group by c.campaign_id), \
c as \
(select c.campaign_id , count(distinct d.id) as \"dealCount\" \
from xt_campaign c, xt_deal d, xt_campaign rc \
where d.campaign_id = rc.campaign_id \
and ((rc.customer_id IN (select user_id from xt_user_profile where company_id = :companyId) and rc.campaign_id = c.campaign_id and d.created_by_company_id = :companyId) \
or (rc.customer_id NOT IN (select user_id from xt_user_profile where company_id = :companyId) \
and (((rc.parent_campaign_id is not null and c.campaign_id = rc.parent_campaign_id) \
or (rc.parent_campaign_id is null and c.campaign_id = rc.campaign_id)) \
and c.customer_id IN (select user_id from xt_user_profile where company_id = :companyId)))) \
and c.campaign_id = :campaignId \
and c.is_launched = true \
group by c.campaign_id) \
select distinct a.*, cast (COALESCE (b."leadCount", 0) as text) as \"leadCount\", cast (COALESCE (c."dealCount", 0) as text) as \"dealCount\" \
from a left join b on a."campaignId"=b.campaign_id \
left join c on a."campaignId"=c.campaign_id \


emailCampaignsAnalyticsCountQuery1 =  select distinct campaign_id as \"campaignId"\, cast (campaign_type as text) as \"type\",cast(sum (\"Total Emails Sent"\) as text) as \"totalEmailsSent"\, \
cast (sum(\"Total email Contacts"\) as text) as \"totalRecipients\", cast (sum(\"Email Opened"\) as text)||' ('|| round((sum(\"Email Opened"\)/ \
(CASE sum(\"Total email Contacts"\) WHEN 0 THEN 1 ELSE sum(\"Total email Contacts"\) end))*100,2) || '%)' as \"activeRecipients"\, \
cast (sum(\"Email Opened"\) as text) as \"opened"\, \
cast (sum(\"Email Clicked"\) as text) as \"emailClicked"\, \
cast (sum( \"Pages Clicked"\) as text) as \"pagesClicked"\, \
cast (sum(\"Soft Bounce"\) as text) as \"softBounce"\, \
cast (sum(\"Hard Bounce"\) as text) as \"hardBounce"\, \
cast (sum(\"Unsubscribed"\) as text) as \"unsubscribed"\, \
cast (count (distinct case when (\"Bounce"\=false and \"Block"\=false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) as text) ||' ('||  \
round((count (distinct case when ("Bounce"\=false and "Block"\=false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) / \
(CASE sum(\"Total Emails Sent"\) WHEN 0 THEN 1 ELSE sum(\"Total Emails Sent"\) end)) *100, 2) \
|| '%)' as \"delivered"\, \
cast(count (distinct case when ("Bounce"=false and "Block"=false and "Spam"=false) and "Is_Email_Valid"=true then "Sent User" end) as text) as \"deliveredCount"\, \
cast (round(sum(\"Email Opened"\) / (case count (distinct case when (\"Bounce"\=false and \"Block"\= false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) when 0 then 1 else \
 count (distinct case when (\"Bounce"\=false and \"Block"\= false and \"Spam"\=false) and \"Is_Email_Valid"\=true then \"Sent User"\ end) end ) *100, 2) as text) || '%' as \"openRate"\,  \
cast (round((sum(\"Email Clicked"\) / (CASE sum(\"Email Opened"\) WHEN 0 THEN 1 ELSE sum(\"Email Opened"\) end)) *100, 2) as text) || '%' as \"clickthroughRate"\, \
cast (sum(\"views"\) as text) as \"views"\, \
cast (max(social) as text) as \"socialRedistributed"\ \
from \
(select distinct \
xc.campaign_id,  \
xc.campaign_type,  \
xcuu.user_id,  \
xup2.email_id, \
xup2.is_email_valid as \"Is_Email_Valid"\, \
(case when sg.user_id=xcuu.user_id and (((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))<=3)) \
then true else false end) as \"Bounce"\, \
(case when sg1.user_id=xcuu.user_id and \
(((DATE_PART('year',age(sg1.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg1.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg1.created,xc.launch_time))*24+ DATE_PART('hour', age(sg1.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg1.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg1.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg1.created,xc.launch_time))*24+ DATE_PART('hour', age(sg1.created,xc.launch_time) ))<=3)) \
then true else false end) as \"Block"\, \
(case when sg2.user_id=xcuu.user_id and \
(((DATE_PART('year',age(sg2.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg2.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg2.created,xc.launch_time))*24+ DATE_PART('hour', age(sg2.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg2.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg2.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg2.created,xc.launch_time))*24+ DATE_PART('hour', age(sg2.created,xc.launch_time) ))<=3)) \
then true else false end) as \"Spam"\,  \
ceh.user_id as \"Sent User"\, \
count(distinct case when xup2.is_email_valid=false \
then xcuu.user_id else null end) as \"Soft Bounce"\,  \
count(distinct case when xup2.is_email_valid=true and sg.user_id="xcuu".user_id and  \
 sg.created>=xc.launch_time and \
(((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))>=0) and \
((DATE_PART('year',age(sg.created,xc.launch_time))*12*30*24+ \
  DATE_PART('month',age(sg.created,xc.launch_time))*30*24+ \
DATE_PART('day',age(sg.created,xc.launch_time))*24+ DATE_PART('hour', age(sg.created,xc.launch_time) ))<=3)) \
then xcuu.user_id else null end) as \"Hard Bounce"\,  \
count(distinct xuu.id) as \"Unsubscribed"\,  \
count( distinct case when xel.action_id = 13 and xel.url_id IS NULL  \
and xel.reply_id IS null then xel.user_id end) as \"Email Opened"\,  \
count (distinct xcuu.user_id )as \"Total email Contacts"\,  \
count ( distinct case when (xel.action_id = 14 OR xel.action_id = 15) AND xel.url_id IS NULL  \
and xel.reply_id IS NULL THEN xel.user_id else null end) AS \"Email Clicked"\,  \
count ( distinct case when (xel.action_id = 14 OR xel.action_id = 15) AND xel.url_id IS NULL  \
and xel.reply_id IS NULL THEN xel.id else null end) AS \"Pages Clicked"\,  \
count(distinct ceh.user_id) as \"Total Emails Sent"\  \
,count(distinct xel.user_id) as \"active"\  \
,count(distinct case when (xel.action_id = 14 or xel.action_id = 15) and xel.url_id is null and xel.reply_id is null then xel.user_id end)  as \"emailClicked"\  \
,count(DISTINCT xxl.session_id) + count(distinct CASE WHEN xxl.action_id = 10 THEN xxl.id END) AS \"views"\  \
,count(distinct case when xss.social_status_id = xss2.parent then xss2.social_status_id end) as \"social"\  \
from  \
xt_campaign xc  \
left join xt_user_profile xup on (xc.customer_id = xup.user_id)  \
left join xt_company_profile xcp on (xup.company_id = xcp.company_id)  \
left join xt_campaign_user_userlist xcuu on (xcuu.campaign_id = xc .campaign_id)  \
left join xt_user_profile xup2 on xup2.user_id = xcuu.user_id \
left join xt_email_log xel on (xel.campaign_id = xc.campaign_id and  xel.user_id = xcuu.user_id)  \
left join xt_xtremand_log xxl ON (xxl.user_id = xcuu.user_id AND xc.campaign_id = xxl.campaign_id) \
left join xt_bounce sg on (xcuu.user_id = sg.user_id)  \
left join xt_block sg1 on (xcuu.user_id = sg1.user_id)  \
left join xt_spam sg2 on (xcuu.user_id = sg2.user_id)  \
left join xt_campaign_emails_history ceh on (xc.campaign_id = ceh.campaign_id and xcuu.user_id = ceh.user_id)  \
left join public.xt_unsubscribed_user xuu on xuu.customer_company_id  =  xcp.company_id and xcuu.user_id  =  xuu.user_id  \
left join xt_social_status xss on xss.campaign_id = xc.campaign_id  \
left join xt_social_status xss2 on xss.social_status_id = xss2.parent  \
where xc.campaign_id in  \
(select campaign_id from xt_campaign where customer_id in (select user_id from xt_user_profile where company_id = :companyId))  \
and xc.is_launched = true  \
group by 1,2,3,4,5,6,7,8,9  \
) as cte  \
where  campaign_id = :campaignId  \
group by 1,2

####count(DISTINCT xuu.user_id) AS \"count\",

#################Partner/Contact Lists#####################
contactOrPartnerListsQuerySelect =  SELECT xul.user_list_id as \"id\",   xul.user_list_name as \"name\",   xul.company_id as \"companyId\",xul.created_time as \"createdTime\", \
xul.customer_id AS \"createdBy\", CASE  WHEN xul.is_partner_userlist THEN 'Partners' ELSE 'Contacts' END AS \"listType\", \
xul.is_public as \"publicList\",xul.is_partner_userlist as \"partnerList\",xul.email_validation_ind as \"emailValidationInd\", \
CASE WHEN length(trim(concat(trim(u.firstname), ' ', trim(u.lastname)))) > 0 THEN trim(concat(trim(u.firstname), ' ', trim(u.lastname))) ELSE u.email_id  END AS \"creatorName\", \
CAST(xul.social_network as text) AS \"socialNetwork\", CASE WHEN xul.form_id IS NOT NULL THEN true ELSE false END AS \"formList\", CASE WHEN xul.associated_company_id IS NOT NULL THEN true ELSE false END AS \"companyList\", \
xul.is_synchronized_list as \"synchronisedList\"

contactOrPartnerListsQueryFrom =   FROM xt_user_profile u, xt_user_list xul left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_user_profile u1 on u1.user_id = xuu.user_id WHERE \
xul.contact_type!= 'ASSIGNED_LEADS_LIST' AND u.user_id = xul.customer_id AND xul.email_validation_ind \
and xul.company_id = (select company_id from xt_user_profile where user_id = :userId) 

contactOrPartnerListsTotalCountQuerySelect =  SELECT xul.user_list_id as \"id\",  count(DISTINCT xuu.user_id) AS \"count\" 

contactOrPartnerListsGroupByQuery = GROUP BY xul.user_list_id, xul.user_list_name, u.firstname, u.lastname, u.email_id having count(DISTINCT xuu.user_id)>0 or  xul.form_id IS NOT NULL 


campaignUserListQuery = select distinct ul.user_list_id as ${userListIdString}, \
case when (ul.contact_type = 'CONTACT' or ul.contact_type = 'LEAD' or ul.contact_type = 'CONTACT_LISTVIEWS' or ul.contact_type = 'LEAD_LISTVIEWS') \
THEN ul.customer_id else spm.partner_id end as ${customerIdString}, user_list_name as ${userListNameString},is_public as ${publicString},\
ul.created_time as ${createdTimeInString},ul.email_validation_ind as ${validListString} ,contact_type as ${contactTypeString} ,is_partner_userlist as ${partnerListString}, social_network as \"socialNetwork\", \
CASE WHEN ul.form_id IS NOT NULL THEN true ELSE false END AS \"formList\",CASE WHEN ul.associated_company_id IS NOT NULL THEN true ELSE false END AS \"companyList\", \
module_name as \"moduleName\",  count(distinct uul.user_id) as \"countOfContactsLists\" \
from xt_user_list ul left join xt_user_userlist uul on ul.user_list_id = uul.user_list_id left join xt_user_profile u on uul.user_id = u.user_id left join xt_sharelist_partner sp on  ul.user_list_id = sp.user_list_id   \
left join xt_sharelist_partner_mapping spm on sp.id = spm.sharelist_partner_id \
where ul.email_validation_ind = true \

userIdsFilterQuery =  and \
case when ul.module_name ='CONTACTS' \
THEN  assigned_company_id is null and (customer_id in (:userIds) or is_public) and ul.company_id = :companyId \
else ul.assigned_company_id  = :assignedByCompanyId  \
and spm.partner_id = :userId end \
 
userIdFilterQuery =  and \
case when ul.module_name ='CONTACTS' \
THEN  assigned_company_id is null and  (customer_id  = :userId or is_public) and ul.company_id = :companyId  \
else ul.assigned_company_id  = :assignedByCompanyId \
and spm.partner_id = :userId end \
 
partneruserIdFilterQuery =  and \
case when ul.module_name ='CONTACTS' THEN ul.assigned_company_id is null and ul.company_id = :companyId \
else ul.assigned_company_id  = :assignedByCompanyId and \
spm.partner_id = :userId end \

campaignUserListQueryGroupBy =  group by ul.user_list_id, ul.user_list_name, spm.partner_id \

campaignUserListQueryByCampaignIdQueryPrefix = select distinct user_list_id as ${userListIdString},customer_id as ${customerIdString},user_list_name as ${userListNameString},is_public as ${publicString},\
created_time as ${createdTimeInString},email_validation_ind as ${validListString} ,contact_type as ${contactTypeString} ,is_partner_userlist as ${partnerListString}, social_network as \"socialNetwork\", module_name as \"moduleName\", \"countOfContactsLists\" \
from (with userlist as (select ul.*, COUNT(DISTINCT uul.user_id) AS \"countOfContactsLists\"  from  xt_user_list ul left join xt_user_userlist uul on  ul.user_list_id = uul.user_list_id  left join xt_user_profile u on uul.user_id = u.user_id \
left join xt_sharelist_partner sp on  ul.user_list_id = sp.user_list_id left join xt_sharelist_partner_mapping spm on sp.id = spm.sharelist_partner_id   \
where ul.email_validation_ind = true \

campaignUserListQueryByCampaignIdQuerySuffix = ),campaign as (select distinct cuu.user_list_id as userlist_id ,c.campaign_id ,up.company_id \
from xt_campaign c join xt_user_profile up on up.user_id = c.customer_id left join xt_campaign_user_userlist cuu on cuu.campaign_id = c.campaign_id \
where c.campaign_id = :campaignId) select  distinct userlist.*,campaign.userlist_id from userlist left join campaign on userlist.company_id = campaign.company_id \
and userlist.user_list_id = campaign.userlist_id order by campaign.userlist_id) as query 


#XNFR-125
oneClickLaunchScheduledCampaignIdsQuery = ${oneClickLaunchScheduledCampaignIdsQueryPrefix} customer_id in (select user_id from xt_user_profile where company_id =:companyId) ${oneClickLaunchScheduledCampaignIdsQuerySuffix} \
UNION ${oneClickLaunchScheduledCampaignIdsQueryPrefix} vendor_organization_id = :companyId ${oneClickLaunchScheduledCampaignIdsQuerySuffix}
 
oneClickLaunchScheduledCampaignIdsQueryPrefix = select distinct campaign_id from xt_campaign where 

oneClickLaunchScheduledCampaignIdsQuerySuffix = and is_launched = false and cast(campaign_schedule_type as text) = :campaignScheduleType and one_click_launch = :oneClickLaunch 

oneClickLaunchScheduledCampaignsCountQuery = select cast(count(campaign_id) as int) from (${oneClickLaunchScheduledCampaignIdsQuery}) as scheduledCampaigns 


#XNFR-278
query.findUserListGroupsQuery = select ul.user_list_id as \"id\",ul.user_list_name as \"groupName\",ul.created_time as \"createdTime\",count(uul.id) as \"numberOfPartners\" from xt_user_list ul \
left join xt_user_userlist uul on ul.user_list_id = uul.user_list_id where ul.company_id =(select company_id from xt_user_profile where user_id = :loggedInUserId) and ul.is_partner_userlist and ul.upload_in_progress = false and ul.validation_in_progress = false \
and ul.module_name = TRIM(:moduleName) and ul.is_default_partnerlist = false and (is_team_member_partner_list = false or team_member_id is null) and ul.user_list_name not in (:activeAndInactivePartnerList) and ul.user_list_id!=:userListId 

query.groupByUserListGroupQuery = group by ul.user_list_id

query.searchUserListGroups =  and (LOWER(ul.user_list_name) like LOWER('%searchKey%'))

userlist.partner.module = PARTNERS

query.findUserListContactsQuery = select ul.user_list_id as \"id\",ul.user_list_name as \"groupName\", \
count(uul.id) as \"numberOfPartners\",ul.created_time as \"createdTime\", \
CASE WHEN LENGTH(TRIM(CONCAT(up.firstname, up.middle_name, up.lastname))) > 0 \
THEN TRIM(CONCAT_WS(' ', up.firstname, up.middle_name, up.lastname)) \
ELSE up.email_id END AS \"uploadedBy\" \
from xt_user_list ul \
left join xt_user_userlist uul on ul.user_list_id = uul.user_list_id \
left join xt_user_profile up on up.user_id = ul.updated_by \
where ul.company_id = :companyId and ul.upload_in_progress = false \
and ul.validation_in_progress = false and ul.module_name = TRIM('CONTACTS') \
and ul.is_default_partnerlist = false and ul.is_synchronized_list is false \
and ul.form_id is null and ul.contact_list_type  is null and ul.user_list_id != :userListId \
and ul.is_deal_contact_list is false and associated_company_id is null and ul.is_public = true \

query.groupByUserListContactQuery = group by ul.user_list_id, ul.user_list_name,ul.created_time,up.firstname,up.middle_name,up.lastname, up.email_id \



#**********XNFR-316**************** 
activePartnerCompaniesQuery = select  p.id AS \"partnershipId"\, p.partner_company_id as \"partnerCompanyId\", p.vendor_company_id as \"vendorCompanyId\",COALESCE(uul.contact_company, '') AS \"companyNameAddedByVendor\", \
  p.created_time as \"createdTime\",c.company_logo  as \"companyLogo\",c.company_name as \"companyName\",c.company_id as \"companyId\"  FROM xt_partnership p,    xt_user_list ul,    xt_user_profile u,    xt_user_userlist uul,	xt_company_profile c, xt_user_profile u1 \
  WHERE p.status = 'approved' AND ul.is_default_partnerlist   AND uul.user_list_id = ul.user_list_id AND uul.user_id = p.partner_id \
  AND u.user_id = p.partner_id AND p.partner_company_id IS NOT NULL   AND p.vendor_company_id = ul.company_id and c.company_id = p.partner_company_id and p.vendor_company_id = :vendorCompanyId \
  and u1.company_id = p.partner_company_id and u1.status in ('APPROVE','DECLINE','SUSPEND') 
  
partnerJourneyCompanyInfoQuery = select distinct xup1.user_id as \"partnerId\", xup1.company_id as \"partnerCompanyId\", xup1.datelastlogin as \"lastLogInDate\", xcp.company_logo as \"companyLogo\", xuul.contact_company as \"companyName\", xup1.email_id as \"partnerEmail\", \
concat(xuul.firstname, ' ', xuul.lastname) as \"partnerName\", xuul.job_title as \"partnerJobTitle\", xuul.mobile_number as \"partnerMobileNumber\",  xp.id as \"partnershipId\", xp.created_time as \"partnerAddedDate\", xp.status as \"partnerStatus\" \
from xt_partnership xp left join xt_user_list xul on xul.company_id=xp.vendor_company_id left join xt_user_userlist xuul on xul.user_list_id=xuul.user_list_id and xp.partner_id=xuul.user_id left join xt_user_profile xup1 on xuul.user_id=xup1.user_id \
left join xt_company_profile xcp on xcp.company_id=xup1.company_id where xul.is_default_partnerlist = true and xp.vendor_company_id  =:vendorCompanyId and xp.partner_company_id   =:partnerCompanyId

partnerJourneyCampaignCountQuery = select distinct cp.company_id as \"companyId\", \
count(distinct case when is_channel_campaign= false and is_nurture_campaign= false then c.campaign_id when is_channel_campaign = true then c.campaign_id end) as \"totalCampaignCount\", \
count(distinct case when is_channel_campaign= false and is_nurture_campaign= false then c.campaign_id end) as \"toCampaignCount\", \
count(distinct case when is_channel_campaign = true then c.campaign_id end) as \"throughCampaignCount\" \
from xt_campaign c left join xt_user_profile xup on xup.user_id=c.customer_id \
left join xt_campaign_user_userlist xcuul on c.campaign_id=xcuul.campaign_id \
left join xt_user_profile xup1 on xup1.user_id=xcuul.user_id \
left join xt_company_profile cp on cp.company_id=xup1.company_id \
inner join xt_partnership p on p.partner_company_id=xup1.company_id \
where xup1.company_id in (select partner_company_id from xt_partnership where vendor_company_id=:vendorCompanyId) \
and c.is_launched=true and c.campaign_id is not null and xup.company_id=:vendorCompanyId and xup1.company_id=:partnerCompanyId \
group by 1

partnerJourneyRedistributedCampaignCountQuery = Select cast(coalesce (count (distinct xc1.campaign_id), 0) as text) as \"redistributedCampaignCount\" \
from xt_campaign xc left join xt_user_profile xup on (xc.customer_id=xup.user_id) \
left join xt_company_profile xcp on (xup.company_id=xcp.company_id) \
left join xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id) \
left join xt_user_profile xup1 ON (xc1.customer_id = xup1.user_id) \
left join xt_company_profile xcp1 ON (xup1.company_id = xcp1.company_id) \
where xcp1.company_name is not null and xc1.vendor_organization_id is not null \
and xc1.is_launched= true and xc1.is_nurture_campaign = true \
and xc1.parent_campaign_id is not null and xcp.company_id != xcp1.company_id \
and xup.company_id= :vendorCompanyId and xcp1.company_id=:partnerCompanyId 

xup1UserIdTMFilter = and xup1.user_id= :teamMemberUserId 
xupUserIdTMFilter = and xup.user_id= :teamMemberUserId 
xup2UserIdTMFilter = and xup2.user_id= :teamMemberUserId 
#and xc1.launch_time ='2023-07-19 17:09:33.230' -- Redistributed Campaign Date

partnerJourneyTeamMemberCountQuery = select cast(count(distinct xup.user_id) as text) as \"teamMemberCount\" \
from xt_user_profile xup where xup.company_id=:partnerCompanyId 

partnerJourneyShareLeadCountQuery = SELECT cast(count(DISTINCT xuu.user_id) as text) AS \"shareLeadCount\" \
from xt_user_profile u left join xt_user_list xul on u.user_id = xul.assigned_by and xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_user_profile u1 on u1.user_id = xuu.user_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_company_profile cp1 on cp1.company_id = xul.company_id \
left join xt_user_profile xup on xup.user_id=spm.partner_id \
where xul.assigned_company_id=:vendorCompanyId and cp1.company_id=:partnerCompanyId and cp1.company_id is not null 
#and xup.user_id=387358 -- Team member User Id
#and sp.created_time=\u20192021-04-05 17:52:52.800\u2019 -- Date

partnerJourneyLeadCountQuery = select cast(count(distinct xl.id) as text) as \"leadCount\" \
from xt_user_profile xup left join xt_lead xl on xl.created_for_company_id=xup.company_id \
left join xt_company_profile xcp on xcp.company_id=xl.created_by_company_id \
left join xt_user_profile xup1 on xup1.user_id=xl.created_by \
where xl.created_for_company_id=:vendorCompanyId and xl.created_by_company_id=:partnerCompanyId \
and xl.created_for_company_id != xl.created_by_company_id 
#and xup1.user_id= 387358 -- Team member user Id
#and xl.created_time ='2023-07-19 17:09:33.230' -- Date

partnerJourneyDealCountQuery = select cast(count(distinct xd.id) as text) as \"dealCount\" \
from xt_user_profile xup left join xt_deal xd on xd.created_for_company_id=xup.company_id \
left join xt_company_profile xcp on xcp.company_id=xd.created_by_company_id \
left join xt_user_profile xup1 on xup1.user_id=xd.created_by \
where xd.created_for_company_id =:vendorCompanyId and xcp.company_id=:partnerCompanyId \
and xd.created_for_company_id != xd.created_by_company_id 
#and xup1.user_id=387358 -- Team Member user Id
#and xd.created_time ='2023-07-19 17:09:33.230' -- Date

partnerJourneyContactCountQuery = select cast(count(distinct uul.user_id) as text) as \"contactCount\" \
from xt_user_list ul left join xt_user_userlist uul on uul.user_list_id= ul.user_list_id \
left join xt_user_profile xup on xup.user_id=uul.user_id \
left join xt_team_member tm on tm.team_member_id=ul.customer_id \
where ul.is_partner_userlist=false and uul.user_id is not null and ul.email_validation_ind=true and ul.module_name='CONTACTS' \
and ul.company_id = :partnerCompanyId 
#and tm.team_member_id =324344 -- Team member Id
#and xup.created_time ='2019-11-12 01:05:33.620' -- date

partnerJourneyMDFAmountQuery = select cast(coalesce(sum(case when xl.label_type=8 and xl.is_default_column=true then cast(xfsc.value as decimal) end),0) as text) as \"mdfAmount\" \
from xt_partnership xp left join xt_mdf_request xmr on xp.id = xmr.partnership_id \
left join xt_form_submit xfs on xfs.request_id= xmr.id \
left join xt_form_submit_single_choice xfsc on xfsc.form_submit_id = xfs.id \
left join xt_form_label xl on xl.id= xfsc.form_label_id \
left join xt_user_profile xup1 on xup1.user_id=xmr.created_by \
where xp.status = 'approved' and xp.vendor_company_id =:vendorCompanyId and xp.partner_company_id =:partnerCompanyId 
#and xup1.user_id=52666 -- Team member Id
#and xmr.created_time='2023-08-14 16:09:15.560'-- Date

partnerJourneyAssetCountQuery = select cast (count(distinct xdp.dam_id) as text) as \"assets\" \
from xt_dam_partner xdp left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
join xt_company_profile xcp on xcp.company_id=xp.vendor_company_id \
left join xt_user_profile xup1 on xup1.user_id=xdpm.partner_id \
where xp.vendor_company_id=:vendorCompanyId and xp.partner_company_id =:partnerCompanyId 
#and xup1.user_id= 323699 --Team member
#and xdp.published_time =\u20192022-08-25 10:09:49.352\u2019 --Date

partnerJourneyTrackAndPlaybookCountQuery =  select distinct cast(count (distinct case when xlt.type = 'TRACK' and xlt.is_published = true then xlt.id end) as text) as \"trackCount\", \
cast(count(distinct case when xlt.type = 'PLAYBOOK' and xlt.is_published = true then xlt.id end) as text) as \"playbookCount\" \
from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_company_profile xcp on xcp.company_id=p.partner_company_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xlt.company_id=:vendorCompanyId  and xcp.company_id=:partnerCompanyId 
#and xup1.user_id=49327 -- Partner/Team member user Id (who Logged in )
#and xlt.published_time ='2023-02-13 17:54:29.414' -- Date

partnerJourneyViewedAndNotViewedTrackCountsQuery = select cast(sum(a."Interacted") as bigint) as \"openedCount\", cast(sum(a."Non Interacted") as bigint) as \"notOpenedCount\" from \
(select distinct on (xltv.learning_track_id) xltv.learning_track_id ,xltv.user_id, \
count (distinct case when xltv.progress>0 then xlt.id end ) as "Interacted", \
count (distinct case when coalesce(xltv.progress,0) =0 then xlt.id end ) as "Non Interacted" \
from xt_learning_track xlt left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xlt.type='TRACK' and xlt.is_published= true \
and xlt.company_id= :vendorCompanyId and xup1.company_id=:partnerCompanyId  
#and xup1.user_id=324343 -- Partner/Team member user Id (who Logged in )
#and xlt.published_time ='2022-08-25 10:06:12.860' -- Date  

partnerJourneyViewedAndNotViewedTrackCountsGroupBy = group by xlt.id,1,2) a

partnerJourneyViewedAndNotViewedTrackDetailsQuery = select distinct xlt.title as  \"title\", \
case when xltv.progress>0 then 'Viewed' when coalesce(xltv.progress, 0)=0 then 'Not Viewed' end as \"status\", \
xup1.email_id as  \"emailId\", \
coalesce(xltv.progress, 0) as \"progress\", \
xup1.firstname as \"firstName\", xup1.lastname as \"lastName\", xup1.mobile_number as \"mobileNumber\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xlt.type='TRACK' and xlt.is_published= true \
and xlt.company_id= :vendorCompanyId and xup1.company_id=:partnerCompanyId 
#and xup1.user_id=49309 -- Partner/Team member user Id (who Logged in )
#and lt.published_time ='2022-08-25 10:06:12.860' -- Date

partnerJourneyTrackTypeInteractedFilter= and coalesce(xltv.progress, 0) > 0 

partnerJourneyTrackTypeNotInteractedFilter= and coalesce(xltv.progress, 0) = 0 

partnerJourneyViewedAndNotViewedTrackDetailsSearchConditions = and (xup1.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%') 

partnerJourneyTypeWiseTrackCountsQuery = select count(distinct case when xltcp.type='OPENED' then xlt.id end ) as \"openedCount\", \
count(distinct case when xltcp.type='VIEWED' then xlt.id end ) as \"viewedCount\", \
count(distinct case when xltcp.type='DOWNLOADED' then xlt.id end ) as \"downloadedCount\", \
count(distinct case when xltcp.type is null then xlt.id end) as \"notOpenedCount\", \
count(distinct case when xltcp.type ='SUBMITTED' then xltc.quiz_id end) as \"submittedCount\" \
from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_dam xd on xd.id = xltc.dam_id \
where xlt.type='TRACK' and xlt.is_published= true \
and xlt.company_id=:vendorCompanyId and xup1.company_id=:partnerCompanyId 
#and xup1.user_id=323699 -- Partner/Team member user id
#and xlt.published_time ='2022-08-25 10:06:12.860' -- Date
 

partnerJourneyTypeWiseTrackInteractedFilter= and xltcp.type is not null 

partnerJourneyTypeWiseTrackNotInteractedFilter= and xltcp.type is null 

partnerJourneyTypeWiseTrackDetailsQuery = select distinct xup1.email_id as \"emailId\", \
xup1.firstname as \"firstName\", xup1.lastname as \"lastName\", xup1.mobile_number as \"mobileNumber\", \
xlt.title as  \"title\", (case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\",(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
(case when xltcp.type is null then 'NOT OPENED' when xltcp.type is not null then cast(xltcp.type as text) end ) as \"status\" \
from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id and xltcp.learning_track_content_id =xltc.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
where xlt.type='TRACK' and xlt.is_published= true \
and xlt.company_id=:vendorCompanyId and p.partner_company_id=:partnerCompanyId 
#and xup1.user_id=323699 -- Partner/Team member user id
#and xlt.published_time ='2022-08-25 10:06:12.860' -- Date

partnerJourneyTypeWiseTrackDetailsAssetFilter = and xltcp.type = 'assetTypeFilter' 

partnerJourneyTypeWiseTrackDetailsSearchConditions = and (xup1.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or cast(xltcp.type as text) ilike '%searchKey%' or cast(xd.asset_type as text) ilike '%searchKey%') 

partnerJourneyTypeWiseTrackDetailsNotOpenedSearchConditions = and (xup1.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or xltcp.type is null or cast(xd.asset_type as text) ilike '%searchKey%') 

partnerJourneyTracksUserWiseCountsQuery = select distinct xup1.email_id as \"emailId\", \
xup1.firstname as \"firstName\", xup1.lastname as \"lastName\", xup1.mobile_number as \"mobileNumber\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track xlt left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xlt.type='TRACK' and xlt.is_published= true \
and xlt.company_id=:vendorCompanyId and xup1.company_id=:partnerCompanyId 
#and xup1.user_id=323699 -- Partner/Team member user id
#and lt.published_time ='2022-08-25 10:06:12.860' -- Date

partnerJourneyTracksUserWiseCountsSearchConditions = and (xup1.email_id ilike '%searchKey%') 

partnerJourneyTracksUserWiseGroupBy = group by 1,2,3,4

partnerJourneyTracksUserWiseContentDetailsQuery = select distinct xlt.id,xup1.email_id as \"emailId\", \
xlt.title as  \"title\", xlt.published_time as \"publishedOn\", \
count( case when xltcp.type='OPENED' then xd.id end ) as \"openedCount\", \
count( case when xltcp.type='VIEWED' then xd.id end ) as \"viewedCount\", \
count( case when xltcp.type='DOWNLOADED' then xd.id end ) as \"downloadedCount\", \
coalesce(xltv.progress,0) as \"progress\", count(distinct xd.id) as \"assetCount\", \
coalesce(count(distinct xltc.quiz_id), 0) as \"quizCount\", \
coalesce (xfs.score, 0) || ' out of ' ||coalesce(xf.max_score, 0) as \"score\", \
xup1.firstname as \"firstName\", xup1.lastname as \"lastName\", xup1.mobile_number as \"mobileNumber\" \
from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id and xltcp.learning_track_content_id =xltc.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_form xf on xltc.quiz_id= xf.id and xlt.id=xf.id \
left join xt_form_submit xfs on xf.id=xfs.form_id \
where xlt.type='TRACK' and xlt.is_published= true and xlt.company_id=:vendorCompanyId and p.partner_company_id=:partnerCompanyId 
#and xup1.user_id=323699 -- Partner/Team member user id
#and xlt.published_time ='2022-08-25 10:06:12.860' -- Date

partnerJourneyTracksUserWiseContentDetailsSearchCondition = and (xup1.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%')

partnerJourneyTracksUserWiseContentDetailsGroupBy = group by 1,2,3,4,8,11,12,13,14

#partnerJourneyTrackAssetsQuery = select distinct xlt.title as \"title\",xd.asset_name as \"assetName\",xd.asset_type as \"assetType\", \
#xd.created_time as \"assetCreatedTime\", count( case when xltcp.type='OPENED' then xd.id end ) as \"openedCount\" \
#from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
#left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
#left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id and xltcp.learning_track_content_id =xltc.id \
#left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
#left join xt_dam xd on xd.id = xltc.dam_id \
#where xlt.type='TRACK' and xlt.is_published= true and xlt.company_id=:vendorCompanyId and xup1.company_id=:partnerCompanyId 
#and xup1.user_id=324344 -- Partner Team member user id
#and xlt.published_time ='2022-08-25 10:06:12.860' -- Date

partnerJourneyTrackAssetsQuery = select distinct xlt.title as \"title\", \
(case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
(case when xd.asset_type is null then xf.created_time \
when xd.asset_type is not null then xd.created_time end )  as \"assetCreatedTime\", \
count( case when xltcp.type='OPENED' then xlt.id \
 when xltcp.type ='SUBMITTED' then xltc.quiz_id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
left join xt_user_profile xup on xup.user_id =xltv.user_id \
where xlt.company_id=:vendorCompanyId \
and xup.company_id =:partnerCompanyId \
and xlt.type='TRACK' and xlt.is_published= true 

partnerJourneyTrackAssetsSearchCondition = and (xlt.title ilike '%searchKey%' or xd.asset_name ilike '%searchKey%' or cast(xd.asset_type as text) ilike '%searchKey%')

partnerJourneyTrackAssetsGroupBy = group by 1,2,3,4

partnerJourneyPlaybookAssetsQuery = select distinct xlt.title as \"title\",xd.asset_name as \"assetName\",xd.asset_type as \"assetType\", \
xd.created_time as \"assetCreatedTime\",count( case when xltcp.type='OPENED' then xd.id end ) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_dam xd on xd.id = xltc.dam_id \
where xlt.type='PLAYBOOK' and xlt.is_published= true and xlt.company_id=:vendorCompanyId and xup1.company_id=:partnerCompanyId 
#and xup1.user_id=324344 -- Partner Team member user id
#and xlt.published_time ='2022-08-25 10:06:12.860' -- Date

partnerJourneyPlaybookAssetsSearchCondition = and (xlt.title ilike '%searchKey%' or xd.asset_name ilike '%searchKey%' or cast(xd.asset_type as text) ilike '%searchKey%') 

partnerJourneyPlaybookAssetsGroupBy = group by 1,2,3,4

partnerJourneyLeadToDealConversionQuery = select distinct cast(extract(year from xl.created_time) as text) as \"year\", \
cast(count(distinct xl.id) as decimal) as \"leadCount\", cast(count(distinct xd.id) as decimal) as \"dealCount\" \
from xt_user_profile xup left join xt_lead xl on xup.company_id = xl.created_for_company_id \
left join xt_deal xd on xl.id= xd.associated_lead_id \
left join xt_company_profile xcp on xcp.company_id=xl.created_by_company_id \
left join xt_user_profile xup1 on xup1.user_id=xl.created_by \
where xup.company_id=:vendorCompanyId and xcp.company_id=:partnerCompanyId 
#and xup1.user_id= 323699 -- Team member user Id
#and xl.created_time= \u20182022-08-26 12:32:06.443\u2019-- Lead Created Date
#and xd.created_time= \u20182022-08-26 12:32:06.443\u2019-- Deal Created Date

partnerJourneyLeadToDealConversionGroupBy = group by 1

partnerJourneyShareLeadDetailsQuery = SELECT distinct xul.user_list_id as \"userListId\", xup.email_id as \"emailId\", \
xul.user_list_name as \"listName\", xul.created_time as \"createdTime\", sp.created_time as \"assignedDate\", \
xup.firstname as \"firstName\", xup.lastname as \"lastName\", xup.mobile_number as \"mobileNumber\", \
count(distinct xuu.user_id) as \"shareLeadCount\" \
from xt_user_profile u left join xt_user_list xul on u.user_id = xul.assigned_by AND xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_user_profile u1 on u1.user_id = xuu.user_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_company_profile cp1 on cp1.company_id = xul.company_id \
left join xt_user_profile xup on xup.user_id=spm.partner_id \
where xul.assigned_company_id =:vendorCompanyId and cp1.company_id =:partnerCompanyId 
#and xup.user_id= 50061 -- Team member user Id
#and sp.created_time='2023-02-16 11:34:29.659' -- Date

partnerJourneyShareLeadDetailsSearchConditions = and (xul.user_list_name ilike '%searchKey%') 

partnerJourneyShareLeadDetailsGroupBy = group by 1,2,3,4,5,6,7,8

partnerJourneyUserWiseRedistributedCampaignDetailsQuery = select distinct ud1.email_id as \"emailId\", c.campaign_name as  \"campaignName\", case when c.campaign_type = 'REGULAR' then 'EMAIL' \
else c.campaign_type end  as \"campaignType\", \
ud1.firstname as \"firstName\", ud1.lastname as \"lastName\", ud1.mobile_number as \"mobileNumber\", \
case when cast(c.campaign_schedule_type as text) = 'NOW' then 'LAUNCHED' \
else  cast(c.campaign_schedule_type as text) end as  \"campaignScheduleType\", c.launch_time as \"launchDate\" \
from xt_campaign p left join xt_campaign c on(p.campaign_id=c.parent_campaign_id) \
left join xt_user_profile ud on(p.customer_id=ud.user_id) \
left join xt_company_profile cp on(cp.company_id=ud.company_id) \
left join xt_user_profile ud1 on(c.customer_id=ud1.user_id) \
left join xt_company_profile cp1 on(ud1.company_id=cp1.company_id) \
where c.is_launched=true and c.is_nurture_campaign=true and c.campaign_id is not null and cp.company_id != cp1.company_id \
and c.vendor_organization_id is not null and c.parent_campaign_id is not null \
and ud.company_id =:vendorCompanyId and cp1.company_id =:partnerCompanyId 
#and ud1.user_id = 387358 -- Team Member user Id
#and c.launch_time  ='2021 -05-17 16:40:06.935' -- Date

partnerJourneyRedistributedCampaignDetailsSearchConditions = and (ud1.email_id ilike '%searchKey%' or c.campaign_name ilike '%searchKey%' or cast(c.campaign_type as text) ilike '%searchKey%' or cast(c.campaign_schedule_type  as text) ilike '%searchKey%') 
 
partnerJourneyLeadDetailsQuery = select distinct xup1.email_id as \"createdByEmail\", \
concat(xl.first_name, xl.last_name) as \"fullName\", \
xl.email \"email\",xl.phone \"phone\",xl.company \"company\",xps1.stage_name as \"currentStageName\",xl.created_time \"createdDate\", \
concat(xup1.firstname, xup1.lastname) as \"createdByName\", xup1.mobile_number as \"createdByMobileNumber\" \
from xt_lead xl left join xt_pipeline_stage xps1 on xl.pipeline_stage_id =xps1.id \
left join xt_user_profile xup1 on xup1.user_id=xl.created_by \
where xl.created_for_company_id =:vendorCompanyId and xl.created_by_company_id =:partnerCompanyId \
and xl.created_for_company_id != xl.created_by_company_id 
#and xup1.user_id= 47974 -- Team member Id
#and xl.created_time='2023-08-03 18:40:08.798' -- Date
 
partnerJourneyLeadDetailsSearchConditions = and (xup1.email_id  ilike '%searchKey%' or concat(xl.first_name, xl.last_name) ilike '%searchKey%' \
or xl.email ilike '%searchKey%' or xl.phone ilike '%searchKey%' or xl.company ilike '%searchKey%' or xps1.stage_name ilike '%searchKey%') 
 
partnerJourneyDealDetailsQuery = select distinct xup1.email_id as \"createdByEmail\", \
xps.stage_name as \"currentStageName\", \
xd.deal_type as \"dealType\", xd.amount as \"amount\", xd.title as "title", xd.created_time as \"createdDate\", \
concat(xup1.firstname, xup1.lastname) as \"createdByName\", xup1.mobile_number as \"createdByMobileNumber\" \
from xt_deal xd left join xt_pipeline_stage xps on xps.id =xd.pipeline_stage_id \
left join xt_company_profile xcp on xd.created_by_company_id=xcp.company_id \
left join xt_user_profile xup1 on xup1.user_id=xd.created_by \
where xd.created_for_company_id =:vendorCompanyId and xd.created_by_company_id =:partnerCompanyId \
and xd.created_for_company_id != xd.created_by_company_id 
#and xup1.user_id=47974 
#and xd.created_time='2023-08-03 18:49:33.145' -- Date

partnerJourneyDealDetailsSearchConditions = and (xup1.email_id  ilike '%searchKey%' or xps.stage_name ilike '%searchKey%' \
or xd.deal_type ilike '%searchKey%' or cast(xd.amount as text) = '%searchKey%' or xd.title ilike '%searchKey%') 

partnerJourneycontactDetailsQuery = select distinct on (uul.user_id) xup.email_id as \"emailId\" ,max(uul.firstname) as \"firstName\", max(uul.lastname) as \"lastName\" , \
max(uul.country) as \"country\",uul.address as \"address\", max(uul.mobile_number) as \"mobileNumber\" \
from xt_user_list ul left join xt_user_userlist uul on (uul.user_list_id= ul.user_list_id ) \
left join xt_user_profile xup on (xup.user_id=uul.user_id) \
left join xt_team_member tm on tm.team_member_id=ul.customer_id \
where ul.is_partner_userlist=false and uul.user_id is not null and ul.email_validation_ind=true and ul.module_name='CONTACTS' \
and ul.company_id =:partnerCompanyId 
#and tm.team_member_id =324344 -- Team member Id
#and xup.created_time ='2019-11-12 01:05:33.620' -- date

partnerJourneyContactDetailsSearchConditions = and (xup.email_id  ilike '%searchKey%' or uul.firstname ilike '%searchKey%' or uul.lastname ilike '%searchKey%' \
or uul.country ilike '%searchKey%' or uul.address ilike '%searchKey%' or uul.mobile_number ilike '%searchKey%') 

partnerJourneycontactDetailsGroupBy = group by 1,5, uul. user_id

partnerJourneyTeamInfoQuery = select distinct xup.user_id as \"userId\", xup.email_id as \"emailId\", concat(xup.firstname, ' ', xup.lastname) as \"fullName\", xup. mobile_number as \"mobileNumber\" \
from  xt_user_profile xup where xup.company_id=:partnerCompanyId 
#and xup.user_id = 324344 -- Team member user Id
#and xup.datereg = '2023-08-04 15:16:59.028'-- Date

partnerJourneyTeamInfoSearchConditions = and (xup.email_id ilike '%searchKey%' or xup.firstname ilike '%searchKey%' or xup.lastname ilike '%searchKey%' or xup.mobile_number ilike '%searchKey%') 
partnerJourneyTeamInfoTMFilterCondition = and xup.user_id = :teamMemberUserId

partnerJourneyInteracted = Interacted
partnerJourneyNotInteracted = Not Interacted
partnerJourneyNotOpened = Not Opened

partnerJourneyTeamQuery = select distinct xup.user_id as \"userId\", xup.status as \"userStatus\",xup.email_id as \"emailId\" \
from  xt_user_profile xup where xup.company_id=:partnerCompanyId 

notRedistributedCampaignUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_profile xup1 \
left join xt_campaign_partner cp on cp.partner_company_id=xup1.company_id \
left join xt_campaign c on c.parent_campaign_id=cp.campaign_id \
left join xt_campaign p on p.customer_id=xup1.user_id \
left join xt_company_profile xcp on xcp.company_id=xup1.company_id \
left join xt_user_profile xup on xup.company_id=xcp.company_id \
left join xt_user_list xul on xul.company_id=xul.company_id \
left join xt_user_userlist xuul on xuul.user_id =xul.user_list_id \
where cp.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and c.is_nurture_campaign =true and c.is_launched = true \
and c.launch_time >= :minTimePhrase \
and c.launch_time < :maxTimePhrase 

notRedistributedCampaignUsersGroupBy = group by 1,11 having count(distinct p.campaign_id)=0

redistributedCampaignUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_profile xup1 \
left join xt_campaign_partner cp on cp.partner_company_id=xup1.company_id \
left join xt_campaign c on c.parent_campaign_id=cp.campaign_id \
left join xt_campaign p on p.customer_id=xup1.user_id \
left join xt_company_profile xcp on xcp.company_id=xup1.company_id \
left join xt_user_profile xup on xup.company_id=xcp.company_id \
left join xt_user_list xul on xul.company_id=xul.company_id \
left join xt_user_userlist xuul on xuul.user_id =xul.user_list_id \
where cp.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and c.is_nurture_campaign =true and c.is_launched = true \
and c.launch_time >= :minTimePhrase \
and c.launch_time < :maxTimePhrase 

redistributedCampaignUsersGroupBy = group by 1,11 having count(distinct p.campaign_id)!=0

workflow.filter.user.table.alias = xup.

workflow.xup.projections = xup.user_id as \"userId\", xup.email_id as \"emailId\", \
xup.firstname as \"firstName\", xup.lastname as \"lastName\", xup.address, xup.city, xup.country, xup.state, \
xup.zip as \"zipCode\", xup.mobile_number as \"mobileNumber\", xcp.company_name as \"contactCompany\"

signedUpUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xup.password is not null and xup.status='UnApproved' \
and xul.company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) \
and xup.registered_time >= :minTimePhrase and xup.registered_time < :maxTimePhrase

notSignedUpUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xup.password is null and xup.status='UnApproved' \
and xul.company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) \
and p.created_time >= :minTimePhrase and p.created_time < :maxTimePhrase 

activatedUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xup.password is not null and xup.status='APPROVE' \
and xul.company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) \
and xup.registered_time >= :minTimePhrase and xup.registered_time < :maxTimePhrase 


notActivatedUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xup.password is not null and xup.status='UnApproved' \
and xul.company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) \
and xup.registered_time >= :minTimePhrase and xup.registered_time < :maxTimePhrase 

createdCompanyProfileUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xup.password is not null and xup.status='APPROVE' and xup.company_id is not null \
and xul.company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) \
and xup.activated_time >= :minTimePhrase and xup.activated_time < :maxTimePhrase

notCreatedCompanyProfileUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xup.password is not null and xup.status='APPROVE' and xup.company_id is null \
and xul.company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) \
and xup.activated_time >= :minTimePhrase and xup.activated_time < :maxTimePhrase

createdLeadUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_lead l on l.created_by_company_id  =p.partner_company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

createdLeadUsersQueryGroupBy = group by 1,11 having count(distinct l.id)!=0

notCreatedLeadUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_lead l on l.created_by_company_id  =p.partner_company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase

notCreatedLeadUsersQueryGroupBy = group by 1,11 having count(distinct l.id)=0

convertedLeadUsersQuery = select distinct ${workflow.xup.projections} \
from  xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_lead l on l.created_by_company_id  =p.partner_company_id \
left join xt_deal xd on  xd.created_by_company_id=xcp.company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_id is not null \
and l.created_time >= :minTimePhrase \
and l.created_time < :maxTimePhrase 

convertedLeadUsersQueryGroupBy = group by 1,11 having count(distinct case when xd.associated_lead_id = l.id  then l.id end)=0

notConvertedLeadUsersQuery = select distinct ${workflow.xup.projections} \
from  xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_lead l on l.created_by_company_id  =p.partner_company_id \
left join xt_deal xd on  xd.created_by_company_id=xcp.company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_id is not null \
and l.created_time >= :minTimePhrase \
and l.created_time < :maxTimePhrase

notConvertedLeadUsersQueryGroupBy = group by 1,11 having count(distinct case when xd.associated_lead_id = l.id  then l.id end) !=0

createdDealUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_deal d on d.created_by_company_id  =p.partner_company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

notCreatedDealUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_deal d on d.created_by_company_id  =p.partner_company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

closedDealUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_deal d on d.created_by_company_id  =p.partner_company_id \
left join xt_pipeline_stage xps on xps.id =d.pipeline_stage_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and xps.stage_name ='Hold' \
and d.created_time >= :minTimePhrase \
and d.created_time < :maxTimePhrase

notClosedDealQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_deal d on d.created_by_company_id  =p.partner_company_id \
left join xt_pipeline_stage xps on xps.id =d.pipeline_stage_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and xps.stage_name ='Hold' \
and d.created_time >= :minTimePhrase \
and d.created_time < :maxTimePhrase 

createdDealUsersQueryGroupBy = group by 1,11 having count(distinct d.id)!=0

notCreatedDealUsersQueryGroupBy = group by 1,11 having count(distinct d.id)=0

closedDealUsersQueryGroupBy = group by 1,11 having count(distinct d.id)=0 

notClosedDealUsersQueryGroupBy = group by 1,11 having count(distinct d.id)!=0

addedTeamMemberUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_team_member xtm on p.partner_id=xtm.org_admin_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

addedTeamMemberUsersQueryGroupBy = group by 1,11 having count(distinct xtm.team_member_id)!=0

notAddedTeamMemberUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_team_member xtm on p.partner_id=xtm.org_admin_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase

notAddedTeamMemberUsersQueryGroupBy = group by 1,11 having count(distinct xtm.team_member_id)=0 

addedContactUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_user_list xul1 on xul1.customer_id= xup.user_id \
left join xt_user_userlist xuul1 on xuul1.user_list_id = xul1.user_list_id \
where  xul.company_id=:vendorCompanyId \
and xul.user_list_id IN (:userlistIds) \
and xcp.company_name  is not null \
and  p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

addedContactUsersQueryGroupBy = group by 1,11 having count(distinct xuul1.user_id)!=0

notAddedContactUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id = xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_user_list xul1 on xul1.customer_id= xup.user_id \
left join xt_user_userlist xuul1 on xuul1.user_list_id = xul1.user_list_id \
where  xul.company_id=:vendorCompanyId \
and xul.user_list_id IN (:userlistIds) \
and xcp.company_name  is not null \
and  p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

notAddedContactUsersQueryUsersQuery = group by 1,11 having count(distinct xuul1.user_id)=0 

redistributedShareLeadUsersQuery = select distinct ${workflow.xup.projections} \
From  xt_user_list xul \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_partnership p on p.partner_id=xuu.user_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_user_profile xup on xup.company_id=xul.company_id \
left join xt_company_profile xcp on xcp.company_id=xul.company_id \
left join xt_campaign c on c.customer_id=xup.user_id \
where xul.assigned_company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) and xul.module_name = 'SHARE LEADS' \
and sp.created_time>= :minTimePhrase \
and sp.created_time < :maxTimePhrase

redistributedShareLeadUsersQueryGroupBy = group by 1,11 having count(distinct c.campaign_id)!=0

notRedistributedShareLeadUsersQuery = select distinct ${workflow.xup.projections} \
From  xt_user_list xul \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_partnership p on p.partner_id=xuu.user_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_user_profile xup on xup.company_id=xul.company_id \
left join xt_company_profile xcp on xcp.company_id=xul.company_id \
left join xt_campaign c on c.customer_id=xup.user_id \
where xul.assigned_company_id=:vendorCompanyId and xul.user_list_id IN (:userlistIds) and xul.module_name = 'SHARE LEADS' \
and sp.created_time>= :minTimePhrase \
and sp.created_time < :maxTimePhrase

notRedistributedShareLeadUsersQueryGroupBy = group by 1,11 having count(distinct c.campaign_id)=0

notCompletedTrackUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and xlt.type='TRACK'and xlt.is_published = true and coalesce(xltv.progress,0)<100 \
and xlt.published_time  >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

completedTrackUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and xlt.type='TRACK'and xlt.is_published = true and coalesce(xltv.progress=100) \
and xlt.published_time  >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

completedPlaybookUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and xlt.type='PLAYBOOK'and xlt.is_published = true and xltv.progress=100 \
and xlt.published_time  >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

notCompletedPlaybookUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xcp.company_name is not null \
and xlt.type='PLAYBOOK'and xlt.is_published = true and coalesce(xltv.progress,0)<100 \
and xlt.published_time  >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

requestedMdfUsersQuery = select distinct ${workflow.xup.projections} \
from  xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_mdf_request xmr on p.id = xmr.partnership_id \
left join xt_form_submit xfs on xfs.request_id= xmr.id \
left join xt_form_submit_single_choice xfsc on xfsc.form_submit_id = xfs.id \
left join xt_form_label xl on xl.id= xfsc.form_label_id \
where xul.company_id  =:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xup.company_id is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

requestedMdfUsersQueryGroupBy = group by 1,11 having count(distinct xmr.id)!=0


notRequestedMdfUsersQuery = select distinct ${workflow.xup.projections} \
from  xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_mdf_request xmr on p.id = xmr.partnership_id \
left join xt_form_submit xfs on xfs.request_id= xmr.id \
left join xt_form_submit_single_choice xfsc on xfsc.form_submit_id = xfs.id \
left join xt_form_label xl on xl.id= xfsc.form_label_id \
where xul.company_id  =:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xup.company_id is not null \
and p.created_time >= :minTimePhrase \
and p.created_time < :maxTimePhrase 

notRequestedMdfUsersQueryGroupBy = group by 1,11 having count(distinct xmr.id)=0

viewedPagesUsersQuery = select distinct ${workflow.xup.projections} \
from  xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_partner_landing_page xpl on xpl.partner_ship_fkey_id =p.id \
left join xt_landing_page xlp on xlp.id=xpl.landing_page_fkey_id \
left join xt_geo_location_analytics gla on gla.landing_page_id =xlp.id and gla.partner_company_id =xup.company_id \
left join xt_campaign c on  c.landing_page_id =xlp.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) and xcp.company_name is not null \
and gla.geo_location_analytics_type ='PARTNER_LANDING_PAGE' \
and c.launch_time >= :minTimePhrase \
and c.launch_time < :maxTimePhrase 

viewedPagesUsersQueryGroupBy = group by 1,11, c.launch_time having count(distinct gla.id)!=0

notViewedPagesUsersQuery = select distinct ${workflow.xup.projections} \
from  xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_partner_landing_page xpl on xpl.partner_ship_fkey_id =p.id \
left join xt_landing_page xlp on xlp.id=xpl.landing_page_fkey_id \
left join xt_geo_location_analytics gla on gla.landing_page_id =xlp.id and gla.partner_company_id =xup.company_id \
left join xt_campaign c on  c.landing_page_id =xlp.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) and xcp.company_name is not null \
and gla.geo_location_analytics_type ='PARTNER_LANDING_PAGE' \
and c.launch_time >= :minTimePhrase \
and c.launch_time < :maxTimePhrase 

notViewedPagesUsersQueryGroupBy = group by 1,11, c.launch_time having count(distinct gla.id)=0

viewedTrackUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xlt.type='TRACK' and xlt.is_published= true \
and xcp.company_name is not null \
and xlt.published_time >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

viewedTrackUsersQueryGroupBy = group by 1,11 having count(distinct case when xltcp.type='VIEWED' then xlt.id end )!=0

notViewedTrackUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xlt.type='TRACK' and xlt.is_published= true \
and xcp.company_name is not null \
and xlt.published_time >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

notViewedTrackUsersQueryGroupBy = group by 1,11 having count(distinct case when xltcp.type='VIEWED' then xlt.id end )=0

viewedPlaybookUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xlt.type='PLAYBOOK' and xlt.is_published= true \
and xcp.company_name is not null \
and xlt.published_time >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

viewedPlaybookUsersQueryGroupBy = group by 1,11 having count(distinct case when xltcp.type='VIEWED' then xlt.id end )!=0

notViewedPlaybookUsersQuery = select distinct ${workflow.xup.projections} \
from xt_user_list xul \
left join xt_user_userlist xuul on xuul.user_list_id =xul.user_list_id \
left join xt_user_profile xup on xup.user_id=xuul.user_id \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xul.company_id=:vendorCompanyId \
and xul.user_list_id in (:userlistIds) \
and xlt.type='PLAYBOOK' and xlt.is_published= true \
and xcp.company_name is not null \
and xlt.published_time >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

notViewedPlaybookUsersQueryGroupBy = group by 1,11 having count(distinct case when xltcp.type='VIEWED' then xlt.id end )=0

allViewedAndNotViewedTrackCountsQuery = select cast(COALESCE(sum(a."Interacted"),0) as bigint) as \"openedCount\", cast(COALESCE(sum(a."Non Interacted"),0) as bigint) as \"notOpenedCount\" from \
(select distinct on (xltv.learning_track_id) xltv.learning_track_id ,xltv.progress, \
count (distinct case when xltv.progress>0 then xlt.id end ) as "Interacted", \
count (distinct case when coalesce(xltv.progress,0) =0 then xlt.id end ) as "Non Interacted" \
from xt_learning_track xlt left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_partnership p on p.id=xltv.partnership_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
where xlt.type='TRACK' and xlt.is_published= true and xlt.company_id= :vendorCompanyId  and p.status= {status} and xcp.company_name_status='active' \

allViewedAndNotViewedTrackCountsQueryGroupBy = group by 1,2)a 

allViewedAndNotViewedTrackDetailsQuery = select distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", xlt.title as \"title\", \
case when xltv.progress>0 then 'Viewed' when coalesce(xltv.progress, 0)=0 then 'Not Viewed' end as \"status\", \
cast(sum(coalesce(xltv.progress, 0))/count(distinct xltv.user_id) as Integer) as  \"progress\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup on xup.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_partnership p on p.id=xltv.partnership_id \
where xlt.company_id= :vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and xup.status ='APPROVE' and  xcp.company_name_status='active'  and p.status= {status} 
   
allRegionWiseDonutQuery   = SELECT CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' \
    ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\", \
 CAST(COUNT(DISTINCT xuul.user_id) AS INTEGER) AS \"partnersCount\" \
FROM xt_user_list xul \
JOIN xt_user_userlist xuul ON xul.user_list_id = xuul.user_list_id \
WHERE xul."module_name" = \'PARTNERS\' \
  AND xul.company_id = :companyId \
  AND xul.is_default_partnerlist = true \
GROUP BY 1 

allRegionWiseDonutQueryForTeamMemberLogin = SELECT CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' \
ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\", \
CAST(COUNT(DISTINCT xuul.user_id) AS INTEGER) AS \"partnersCount\" \
FROM xt_user_list xul \
JOIN xt_user_userlist xuul ON xul.user_list_id = xuul.user_list_id \
left join xt_user_profile xup on xup.user_id= xuul.user_id \
WHERE xul."module_name" = \'PARTNERS\' \
AND xul.company_id = :companyId \
AND xul.is_default_partnerlist = true \
and xup.company_id in ( \
SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT OUTER JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT OUTER JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT OUTER JOIN xt_partnership p ON ptgm.partnership_id = p.id \
LEFT JOIN xt_campaign xc ON xc.customer_id = tgum.team_member_id \
WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = 'approved') group by 1 \
	  
prefixQuery = select a.* from( 

allPartnersDetailsListQuerySuffix = )a where a.\"region\" ILIKE :searchKey \
    OR  LOWER(a.\"emailId\") ILIKE LOWER(:searchKey) \
    OR  a.\"status\" ILIKE :searchKey \
    OR LOWER(a.\"firstName\") ILIKE LOWER(:searchKey) \
    OR LOWER(a.\"lastName\") ILIKE LOWER(:searchKey) \
    OR LOWER(a.\"companyName\") ILIKE LOWER(:searchKey) \
    OR REPLACE(LOWER(a.\"firstName\" || a.\"lastName\"), \' \', \'\') ILIKE TRIM(REPLACE(LOWER(:searchKey),\' \',\'\')) \
    OR REPLACE(LOWER(a.\"lastName\" || a.\"firstName\"), \' \', \'\') ILIKE TRIM(REPLACE(LOWER(:searchKey),\' \',\'\')) 
    
allPartnersDetailsListQuerySuffixForBothRegionAndSearch = )a where a.\"region\" ILIKE :regionKey \
    AND  ( a.\"region\" ILIKE :searchKey \
    OR LOWER(a.\"emailId\") ILIKE LOWER(:searchKey) \
    OR  a.\"status\" ILIKE :searchKey \
    OR LOWER(a.\"firstName\") ILIKE LOWER(:searchKey) \
    OR LOWER(a.\"lastName\") ILIKE LOWER(:searchKey) \
    OR LOWER(a.\"companyName\") ILIKE LOWER(:searchKey) \
    OR REPLACE(LOWER(a.\"firstName\" || a.\"lastName\"), \' \', \'\') ILIKE TRIM(REPLACE(LOWER(:searchKey),\' \',\'\')) \
    OR REPLACE(LOWER(a.\"lastName\" || a.\"firstName\"), \' \', \'\') ILIKE TRIM(REPLACE(LOWER(:searchKey),\' \',\'\'))) 
    
allPartnersDetailsListByFilter = )a where a.\"region\" in (:regionList) 

orderByPrefix = select a.* from( 
orderBySuffix = ) a order by a.\"onboardedOn\" desc nulls last

allRegionNames = SELECT CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' \
THEN \'No Region\' ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" \
FROM xt_user_list xul  \
JOIN xt_user_userlist xuul ON xul.user_list_id = xuul.user_list_id \
WHERE xul."module_name" = \'PARTNERS\' AND xul.company_id = :companyId AND xul.is_default_partnerlist = true \
GROUP by 1

allRegionNamesByTeamMemberLogin = SELECT CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' \
THEN \'No Region\' ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" \
FROM xt_user_list xul  \
JOIN xt_user_userlist xuul ON xul.user_list_id = xuul.user_list_id \
left join xt_user_profile xup on xup.user_id= xuul.user_id \
WHERE xul."module_name" = \'PARTNERS\' AND xul.company_id = :companyId AND xul.is_default_partnerlist = true \
and xup.company_id in (select \
distinct p.partner_company_id \
from xt_team_member t \
left join xt_team_member_group_user_mapping tgum on \
t.id = tgum.team_member_id \
left join xt_partner_team_group_mapping ptgm on \
tgum.id = ptgm.team_member_group_user_mapping_id \
left join xt_partnership p on \
ptgm.partnership_id = p.id \
where \
t.team_member_id = :userId \
and p.partner_id is not null \
and p.status = \'approved\') \
GROUP by 1 \

allViewedAndNotViewedTrackDetailsSearchConditions = and (xcp.company_name ilike '%searchKey%' or xlt.title ilike '%searchKey%')

allViewedAndNotViewedTrackDetailsQueryGroupBy = group by 1,2,3,4

allTypeWiseTrackCountsQuery = select count(distinct case when xltcp.type='OPENED' then xlt.id end ) as \"openedCount\", \
count(distinct case when xltcp.type='VIEWED' then xlt.id end ) as \"viewedCount\", \
count(distinct case when xltcp.type='DOWNLOADED' then xlt.id end ) as \"downloadedCount\", \
count(distinct case when xltcp.type is null then xlt.id end) as \"notOpenedCount\", \
count(distinct case when xltcp.type ='SUBMITTED' then xltc.quiz_id end) as \"submittedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_partnership p on p.id=xltv.partnership_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and p.status={status} and xup1.status='APPROVE' and xcp.company_name_status='active' \

allTypeWiseTrackDetailsQuery = select distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", \
xlt.title as \"title\", \
(case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
(case when xltcp.type is not null then cast(xltcp.type as text) \
when xltcp.type is null and xd.asset_type is null then cast('NOT SUBMITTED' as text) \
when xltc.quiz_id is null then cast('NOT OPENED' as text) end ) as \"status\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
left join xt_partnership p on p.id=xltv.partnership_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and xcp.company_name is not null and xup1.status='APPROVE' and xcp.company_name_status='active' and p.status= {status}  

allTypeWiseTrackDetailsSearchConditions = and (xcp.company_name ilike '%searchKey%' or xlt.title ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or cast(xltcp.type as text) ilike '%searchKey%' or cast(xd.asset_type as text) ilike '%searchKey%') 

allTypeWiseTrackDetailsNotOpenedSearchConditions = and (xcp.company_name ilike '%searchKey%' or xlt.title ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or xltcp.type is null or cast(xd.asset_type as text) ilike '%searchKey%') 
 
allTracksUserWiseCountsQuery = select distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_company_profile xcp on xcp.company_id=p.partner_company_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \
and xcp.company_name is not null and p.status={status} and xcp.company_name_status='active' 

companyNameSearchCondition = and (xcp.company_name ilike '%searchKey%')  

allTracksUserWiseGroupBy = group by 1,2 

allPlaybooksUserWiseCountsQuery = select distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_company_profile xcp on xcp.company_id=p.partner_company_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='PLAYBOOK' and xlt.is_published= true \
and xcp.company_name is not null and p.status={status} and xcp.company_name_status='active'  

allPlaybooksUserWiseGroupBy = group by 1,2 

allTracksUserWiseContentDetailsQuery = select distinct xlt.id, xcp.company_name as \"companyName\", \
xlt.title as \"title\", xlt.published_time as \"publishedOn\", \
count(case when xltcp.type='OPENED' then xd.id end) as \"openedCount\", \
count(case when xltcp.type='VIEWED' then xd.id end) as \"viewedCount\", \
count(case when xltcp.type='DOWNLOADED' then xd.id end) as \"downloadedCount\", \
coalesce(xltv.progress, 0) as \"progress\", \
count(distinct xd.id) as\"assetCount\", \
coalesce(count(distinct xltc.quiz_id), 0) as \"quizCount\", \
coalesce (xfs.score, 0) || ' out of ' ||coalesce(xf.max_score, 0) as \"score\", \
xcp.company_id as \"companyId\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_company_profile xcp on xcp.company_id=p.partner_company_id \
left join xt_form xf on xltc.quiz_id= xf.id and xlt.id=xf.id \
left join xt_form_submit xfs on xf.id=xfs.form_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true 

allTracksUserWiseContentDetailsSearchCondition = and (xcp.company_name ilike '%searchKey%' or xlt.title ilike '%searchKey%')

allTracksUserWiseContentDetailsGroupBy = group by 1, 2, 3, 4, 8, 11, 12

allTrackAssetsQuery = select distinct xlt.title as \"title\", \
(case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
(case when xd.asset_type is null then xf.created_time \
when xd.asset_type is not null then xd.created_time end )  as \"assetCreatedTime\", \
count( case when xltcp.type='OPENED' then xlt.id \
 when xltcp.type ='SUBMITTED' then xltc.quiz_id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_partnership p on p.id=xltv.partnership_id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
left join xt_user_profile xup on xup.user_id =xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup.company_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and p.status={status} and xcp.company_name_status='active'  

allTrackAssetsGroupBy = group by 1,2,3,4

allPlaybookAssetsQuery = select distinct xlt.title as \"title\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
xd.created_time as \"assetCreatedTime\", count(case when xltcp.type='OPENED' then xd.id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_partnership p on p.id=xltv.partnership_id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='PLAYBOOK' and xlt.is_published= true and xd.id is not null and p.status={status} and xcp.company_name_status='active' \ 

allPlaybookAssetsGroupBy = group by 1,2,3,4

allRedistributedCampignDetailsForPieChart = select count(distinct case when xc1.campaign_type = 'REGULAR' then  xc1.campaign_id end ) as \"regularCount\", \
count(distinct case when xc1.campaign_type = 'EVENT' then  xc1.campaign_id end ) as \"eventCount\", \
count(distinct case when xc1.campaign_type = 'VIDEO' then  xc1.campaign_id end ) as \"videoCount\", \
count(distinct case when xc1.campaign_type = 'SURVEY' then  xc1.campaign_id end ) as \"surveyCount\", \
count(distinct case when xc1.campaign_type = 'SOCIAL' then  xc1.campaign_id end ) as \"socialCount\" \
from xt_campaign xc \
left join xt_user_profile xup on (xc.customer_id=xup.user_id) \
left join xt_company_profile xcp on (xup.company_id=xcp.company_id) \
left join xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id) \
left join xt_user_profile xup1 ON (xc1.customer_id = xup1.user_id) \
left join xt_partnership xp on xp.partner_company_id= xup1.company_id and xp.vendor_company_id = :vendorCompanyId \
where xup1.company_id is not null \
and xc1.vendor_organization_id is not null \
and xc1.is_launched= true and xc1.is_nurture_campaign = true \
and xc1.parent_campaign_id is not null \
and xup.company_id= :vendorCompanyId \
and xp.status={status} \

allRedistributedCampignDetailsForPieChartTeamMemberFilterQuery = and xup1.company_id in \
(select distinct p.partner_company_id \
from xt_team_member t \
left outer join xt_team_member_group_user_mapping tgum on t.id = tgum.team_member_id \
left outer join xt_partner_team_group_mapping ptgm on tgum.id = ptgm.team_member_group_user_mapping_id \
left outer join xt_partnership p on ptgm.partnership_id=p.id \
left join xt_campaign xc on xc.customer_id=tgum.team_member_id \
where t.team_member_id = :teamMemberUserId \
and p.partner_id is not null and p.status='approved')

allRedistributedCampignDetailsForPieChartGroupBy = group by 1

allShareLeadDetailsQuery = SELECT distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", xul.user_list_id as \"userListId\", \
xul.user_list_name as \"listName\", xul.created_time as \"createdTime\", \
sp.created_time as \"assignedDate\", count(distinct xuu.user_id) as \"shareLeadCount\" \
From  xt_user_list xul \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id AND xul.module_name = 'SHARE LEADS' \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_company_profile xcp on xcp.company_id = xul.company_id \
left join xt_partnership p on p.partner_company_id= xul.company_id  and p.vendor_company_id=:vendorCompanyId \
where xul.assigned_company_id=:vendorCompanyId \
and xul.company_id is not null \
and p.status={status} \

allShareLeadDetailsGroupBy = group by 1, 2, 3, 4, 5, 6

allShareLeadDetailsSearchConditions = and (xcp.company_name ilike '%searchKey%' or xul.user_list_name ilike '%searchKey%') \

allRedistributedCampaignDetailsQuery = select distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", \
c.campaign_name as \"campaignName\", case when c.campaign_type = 'REGULAR' then 'EMAIL' \
else c.campaign_type end  as \"campaignType\", \
case when cast(c.campaign_schedule_type as text) = 'NOW' then 'LAUNCHED' \
else  cast(c.campaign_schedule_type as text) end as  \"campaignScheduleType\", c.launch_time as \"launchDate\" \
from xt_campaign p \
left join xt_campaign c on(p.campaign_id=c.parent_campaign_id) \
left join xt_user_profile ud on(p.customer_id=ud.user_id) \
left join xt_user_profile up1 on(c.customer_id=up1.user_id) \
left join xt_company_profile xcp on(xcp.company_id=up1.company_id) \
left join xt_partnership xp on xp.partner_company_id= up1.company_id and xp.vendor_company_id=:vendorCompanyId \
where ud.company_id =:vendorCompanyId \
and c.is_launched=true and c.is_nurture_campaign=true \
and c.campaign_id is not null  and xp.status={status}  and c.vendor_organization_id is not null \
and c.parent_campaign_id is not null \

partnerJourneyTeamMemberFilterQuery = in (select distinct p.partner_company_id \
from xt_team_member t \
left outer join xt_team_member_group_user_mapping tgum on t.id = tgum.team_member_id \
left outer join xt_partner_team_group_mapping ptgm on tgum.id = ptgm.team_member_group_user_mapping_id \
left outer join xt_partnership p on ptgm.partnership_id=p.id \
left join xt_campaign xc on xc.customer_id=tgum.team_member_id \
where t.team_member_id = :teamMemberUserIdFilter \
and p.partner_id is not null and p.status={status}) \

allRedistributedCampaignDetailsSearchConditions = and (xcp.company_name ilike '%searchKey%' or c.campaign_name ilike '%searchKey%' or cast(c.campaign_type as text) ilike '%searchKey%' or cast(c.campaign_schedule_type  as text) ilike '%searchKey%') 

allLeadDetailsQuery = select distinct xcp.company_name as \"createdByCompanyName\", xcp.company_id as \"createdByCompanyId\", concat(xl.first_name, xl.last_name) as  \"fullName\", \
xl.email \"email\", xl.phone \"phone\", xl.company \"company\", xps1.stage_name as \"currentStageName\",xl.created_time \"createdDate\" \
from xt_lead xl \
left join xt_pipeline_stage xps1 on xl.pipeline_stage_id =xps1.id \
left join xt_company_profile xcp on xcp.company_id=xl.created_by_company_id \
left join xt_partnership p on p.partner_company_id = xl.created_by_company_id and p.vendor_company_id = :vendorCompanyId \
where xl.created_for_company_id =:vendorCompanyId \
and p.status={status} \
and xl.created_for_company_id!=xl.created_by_company_id \

allLeadDetailsSearchConditions = and (xcp.company_name  ilike '%searchKey%' or concat(xl.first_name, xl.last_name) ilike '%searchKey%' \
or xl.email ilike '%searchKey%' or xl.phone ilike '%searchKey%' or xl.company ilike '%searchKey%' or xps1.stage_name ilike '%searchKey%') \

allDealDetailsQuery = select distinct xcp.company_name as \"createdByCompanyName\", xcp.company_id as \"createdByCompanyId\", xps.stage_name as \"currentStageName\", \
xd.deal_type as \"dealType\", xd.amount as \"amount\", xd.title as "title", xd.created_time as \"createdDate\" \
from xt_deal xd \
left join xt_pipeline_stage xps on xps.id =xd.pipeline_stage_id \
left join xt_company_profile xcp on xd.created_by_company_id=xcp.company_id \
left join xt_partnership p on p.partner_company_id = xd.created_by_company_id and p.vendor_company_id = :vendorCompanyId \
where xd.created_for_company_id =:vendorCompanyId \
and p.status={status} \
and xd.created_for_company_id!=xd.created_by_company_id \

allDealDetailsSearchConditions = and (xcp.company_name  ilike '%searchKey%' or xps.stage_name ilike '%searchKey%' \
or xd.deal_type ilike '%searchKey%' or cast(xd.amount as text) = '%searchKey%' or xd.title ilike '%searchKey%') \ 

partnerJourneyMdfDetailsQuery = select distinct  xcp.company_name as \"companyName\" , xcp.company_id as \"companyId\" , \
sum(case when xmdh.mdf_amount_type='FUND_ADDED' then xmdh.mdf_amount else 0 \
end)- sum(case when xmdh.mdf_amount_type='FUND_REMOVED' then xmdh.mdf_amount else 0 end) as \"totalBalance\", \
coalesce( sum(xmrh.reimburse_amount),0) as \"usedBalance\", \
(sum(case when xmdh.mdf_amount_type='FUND_ADDED' then xmdh.mdf_amount else 0 \
end)- sum(case when xmdh.mdf_amount_type='FUND_REMOVED' then xmdh.mdf_amount else 0 end))- \
coalesce( sum(xmrh.allocation_amount) ,0) + \
(coalesce( sum(xmrh.allocation_amount) ,0)-coalesce( sum(xmrh.reimburse_amount),0) ) as \"availableBalance\" \
from xt_mdf_details xmd \
left join xt_partnership p  on   xmd.partnership_id = p.id \
left join xt_company_profile xcp on xcp.company_id=p.partner_company_id \
left join xt_mdf_request xmr on p.id = xmr.partnership_id \
left join xt_mdf_details_history xmdh on xmdh.mdf_details_id = xmd.id \
left join xt_mdf_request_history xmrh on xmrh.request_id = xmr.id \
left join xt_form_submit xfs on xfs.request_id= xmr.id \
 left join xt_form_submit_single_choice xfsc on xfsc.form_submit_id = xfs.id \
left join xt_form_label xl on xl.id= xfsc.form_label_id \
where p.vendor_company_id =:vendorCompanyId \

partnerJourneyMdfDetailsSearchConditions = and (b.\"companyName\"  ilike '%searchKey%') \

partnerJourneyMdfDetailsGroupBy = group by 1,2

allRedistributedCampaignCountQuery = select cast(coalesce (count (distinct xc1.campaign_id), 0) as text) as \"redistributedCampaignCount\" \
from xt_campaign xc \
left join xt_user_profile xup on (xc.customer_id=xup.user_id) \
left join xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id) \
Left join xt_user_profile xup1 on xup1.user_id=xc1.customer_id \
left join xt_partnership xp on xp.partner_company_id= xup1.company_id and xp.vendor_company_id = :vendorCompanyId \
where xup.company_id= :vendorCompanyId \
and xc1.vendor_organization_id is not null \
and xc1.is_launched= true and xc1.is_nurture_campaign = true \
and xp.status={status} \

allTeamMemberCountQuery = select distinct cast(count(distinct xtm.team_member_id) as text) as \"teamMemberCount\" \
from xt_partnership p \
left join xt_team_member xtm on (p.partner_id=xtm.org_admin_id) \
left join xt_user_profile xup1 on xup1.user_id = xtm.team_member_id \
where p.vendor_company_id=:vendorCompanyId \
and p.status={status} and xtm.team_member_id is not null \

allShareLeadCountQuery = SELECT cast(count(DISTINCT xuu.user_id) as text) AS \"shareLeadCount\" \
From xt_user_profile xup \
left join xt_user_list xul on xup.user_id = xul.assigned_by \
and xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_user_profile u1 on u1.user_id = xuu.user_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_partnership p on p.partner_company_id= xul.company_id and p.vendor_company_id = :vendorCompanyId \
where xul.assigned_company_id=:vendorCompanyId \
and p.status={status} \

allLeadCountQuery = select cast(count(distinct xl.id) as text) as \"leadCount\" \
from xt_lead xl \
left join xt_user_profile xup1 on xup1.company_id = xl.created_by_company_id \
left join xt_partnership p on p.partner_company_id = xl.created_by_company_id and p.vendor_company_id = :vendorCompanyId \
where xl.created_for_company_id=:vendorCompanyId \
and p.status={status} \
and created_for_company_id !=created_by_company_id \

allDealCountQuery = select cast(count(distinct xd.id) as text) as \"dealCount\" \
from xt_deal xd \
left join xt_user_profile xup1 on xup1.company_id =xd.created_by_company_id \
left join xt_partnership p on p.partner_company_id = xd.created_by_company_id and p.vendor_company_id = :vendorCompanyId \
where xd.created_for_company_id =:vendorCompanyId \
and p.status={status} \
and created_for_company_id != created_by_company_id \

allMDFAmountQuery = select cast(round(cast(COALESCE(sum(case when xmdh.mdf_amount_type='FUND_ADDED' \
then xmdh.mdf_amount else 0 end) - sum(case when xmdh.mdf_amount_type='FUND_REMOVED' \
then xmdh.mdf_amount else 0 end),0) as BIGINT ),0)as text) as \"mdfAmount\" \
from xt_partnership xp \
left join xt_mdf_details xmd on xmd.partnership_id = xp.id \
left join xt_mdf_details_history xmdh on xmdh.mdf_details_id = xmd.id \
where xp.vendor_company_id= :vendorCompanyId and xp.status = {status} \

allTrackAndPlaybookCountQuery = select distinct cast(count (distinct case when xlt.type = 'TRACK' and xlt.is_published = true then xlt.id end) as text) as \"trackCount\", \
cast(count(distinct case when xlt.type = 'PLAYBOOK' and xlt.is_published = true then xlt.id end) as text) as \"playbookCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_partnership p on p.id=xltv.partnership_id \
where xlt.company_id= :vendorCompanyId and p.status={status} and xcp.company_name_status='active' \

allAssetCountQuery = select cast (count(distinct a.id) as text) as \"assets\" \
from (select distinct xd.id  \
from xt_dam_partner xdp left join xt_dam xd on xd.id=xdp.dam_id  \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id  \
join xt_company_profile xcp on xcp.company_id=xp.vendor_company_id left join xt_user_profile xup1  \
on xup1.user_id=xdpm.partner_id \
where xp.vendor_company_id= :vendorCompanyId and xp.status={status}  \
 and xcp.company_name_status='active'  \
{dateFilter}{myPartnerFilter}{partnerCompanyFilter} \
 union \
 select distinct  xd.id \
from xt_dam_partner xdp  join xt_dam xd on xdp.dam_id =xd.id \
join xt_partnership p on p.id = xdp.partnership_id  \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id  \
left join xt_dam_analytics xda on xda.dam_partner_fk_id =xdp.id \
left join xt_user_profile xup1 on xup1.user_id=dpgm.user_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by  \
where xd.company_id= :vendorCompanyId and p.status={status} \
{dateFilter}{myPartnerFilter}{partnerCompanyFilter} \
)a \

#allContactCountQuery =select cast (count(distinct uul.user_id) as text) as \"contactCount\" \
#from xt_user_list ul \
#left join xt_user_userlist uul on (uul.user_list_id= ul.user_list_id ) \
#left join xt_user_profile xup on (xup.user_id=uul.user_id) \
#left join xt_partnership p on ul.company_id=p.partner_company_id \
#where p.vendor_company_id =:vendorCompanyId \
#and ul.is_partner_userlist=false \
#and uul.user_id is not null and ul.module_name='CONTACTS' \
#And ul.email_validation_ind=true \
#and p.status={status} \

allContactCountQuery = SELECT CAST(COUNT(DISTINCT uul.user_id) AS TEXT) AS \"contactCount\" \
FROM  xt_user_list ul \
LEFT JOIN xt_user_userlist uul ON uul.user_list_id = ul.user_list_id \
LEFT JOIN xt_user_profile xup ON xup.user_id = uul.user_id \
LEFT JOIN xt_partnership p ON p.partner_company_id = ul.company_id \
WHERE  ul.is_partner_userlist = FALSE AND uul.user_id IS NOT NULL AND ul.module_name = 'CONTACTS' AND ul.email_validation_ind = TRUE \
AND ( ul.company_id = :vendorCompanyId  or  (p.vendor_company_id = :vendorCompanyId  AND p.partner_company_id = ul.company_id)) \
and p.status={status} \

#FindAllTeamMembers
findAllTeamMembers = select xcp.company_name as \"companyName\",xcp.company_id as \"companyId\", u.datelastlogin as \"logInTime\", u.user_id as \"teamMemberUserId\",coalesce(u.firstname,'') as \"firstName\",coalesce(u.lastname,'') as "lastName", \
u.email_id as \"emailId\",u.mobile_number as \"mobileNumber\",t.id as \"teamMemberId\",cast(t.status as text) as \"status\",t.is_second_admin as \"secondAdmin\",tg.id as \"teamMemberGroupId\",tg.name as \"teamMemberGroupName\", \
ma.login_as_team_member as \"loginAs\", case when t.status = 'UNAPPROVED' then true else false end as \"resendInvitation\",cast(count(distinct ptgm.id) as int) as \"partnersCount\",false as \"primaryAdmin\" \
 from xt_partnership p \
left join xt_team_member t on (p.partner_id=t.org_admin_id) \
left join xt_user_profile u on u.user_id= t.team_member_id \
left join xt_company_profile xcp on xcp.company_id= u.company_id \
left join xt_team_member_group_user_mapping tgum on t.id = tgum.team_member_id \
left join xt_partner_team_group_mapping ptgm on ptgm.team_member_group_user_mapping_id =  tgum.id \
left join xt_team_member_group tg on tg.id = tgum.team_member_group_id \
left join xt_module_access ma on ma.company_id = t.company_id \
where p.vendor_company_id= :companyId \
and p.status={status} and t.team_member_id is not null \
and t.team_member_id!= :userId {teamMemberFilterQuery} {partnerCompanyIds}

teamMemberPrimaryAdmin = select xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", u.datelastlogin as \"logInTime\", u.user_id as \"teamMemberUserId\",coalesce(u.firstname,'') as \"firstName\",coalesce(u.lastname,'') as "lastName", \
u.email_id as \"emailId\",u.mobile_number as \"mobileNumber\",null as \"teamMemberId\",cast(u.status as text) as \"status\",false as \"secondAdmin\",null as \"teamMemberGroupId\",null as \"teamMemberGroupName\",false as \"loginAs\", \
false as \"resendInvitation\",null as \"partnersCount\",true as \"primaryAdmin\"  \
from xt_partnership p \
left join xt_team_member t on p.partner_id=t.org_admin_id \
left join xt_user_profile u on p.vendor_company_id = u.company_id \
left join xt_company_profile xcp on xcp.company_id= u.company_id \
left join xt_user_role ur on u.user_id = ur.user_id \
and role_id in (:roleIds) {teamMemberFilterQuery} {partnerCompanyIds}

teamMemberPrimaryAdminSearch = \ and (LOWER(u.email_id) like LOWER('%searchKey%') OR LOWER(xcp.company_name) like LOWER('%searchKey%') OR LOWER(u.firstname) like LOWER('%searchKey%'))  

findAllTeamMembersSearch = \ and (LOWER(u.email_id) like LOWER('%searchKey%') OR LOWER(xcp.company_name) like LOWER('%searchKey%') OR LOWER(u.firstname) like LOWER('%searchKey%') OR LOWER(tg.name) like LOWER('%searchKey%'))  

findTeamMemberPrimaryAdminGroupBy =  group by xcp.company_name,xcp.company_id,u.datelastlogin,u.user_id having CAST(count(t.id)AS integer) = 0 and xcp.company_id = :companyId  UNION ALL \t

findAllTeamMembersGroupBy = group by xcp.company_name,xcp.company_id,u.datelastlogin,u.user_id,t.id,tg.id,ma.login_as_team_member \

orderByfindAllTeamMembers = order by t.id desc

orderByTeamMemberPrimaryAdmin =  order by "\primaryAdmin\" desc


 #**********END: XNFR-316****************
 
#Companies - XNFR-427
findCompaniesQuery= select c.id, xul.user_list_id as \"companyUserListId\", c.name, c.email, xul.user_list_name as \"companyListName\", \
count(xuul.id) as \"contactCount\", c.created_by as \"createdByUserId\", xul.is_public as \"publicCompanyList\",  \
c.created_time \"createdTime\", c.website as \"website\"  \
from xt_company c \
left join xt_user_list xul on xul.associated_company_id= c.id \
left join xt_user_userlist xuul on xuul.user_list_id=xul.user_list_id \
where xul.company_id = :companyId \
 
findCompaniesSearch= and (c.name ilike '%searchKey%' OR c.email ilike '%searchKey%')  \

findCompaniesGroupBy= group by c.id, xul.user_list_id \

findCompanyCounts = select count(distinct c.id) as "\companyCount"\ ,count(distinct xuul.user_id) as "\contactCounts"\ \
from xt_company c \
left join xt_user_list xul on xul.associated_company_id= c.id \
left join xt_user_userlist xuul on xuul.user_list_id=xul.user_list_id where c.company_id = :companyId \


#*** XNFR-505 ***
getLeadsForLeadAttachment = select xl.id as \"id\", xl.first_name as \"firstName\", xl.last_name as \"lastName\", \
				xl.email as \"email\", xl.campaign_id as \"campaignId\", xl.created_by_company_id as \"createdByCompanyId\", \
				TO_CHAR(xl.created_time , 'YYYY-MM-DD HH24:MI:SS') as \"createdTime\", xl.company as \"company\", xl.pipeline_stage_id as \"pipelineStageId\", \
				xl.created_for_company_id as \"createdForCompanyId\", {stageName} as \"currentStageName\", xcp.company_name as \
				\"createdForCompanyName\",  xc.campaign_name AS \"campaignName\",  COALESCE(xpc.campaign_id, xc.campaign_id) AS \"parentCampaignId\", \
    			COALESCE(xpc.campaign_name, xc.campaign_name) AS \"parentCampaignName\", \
				CONCAT(xup.firstname,' ',xup.lastName) as \"createdByName\", \
				xup.email_id as \"createdByEmail\" FROM xt_lead AS xl {checkPartnershipForListingLeads} \
				left outer join xt_deal xd ON xl.id = xd.associated_lead_id \
				left outer join xt_pipeline_stage as xps on xl.pipeline_stage_id = xps.id \
				left outer join xt_company_profile as xcp on xl.created_for_company_id = xcp.company_id \
				LEFT JOIN xt_campaign AS xc ON xl.campaign_id = xc.campaign_id \
				LEFT JOIN xt_campaign AS xpc ON xc.parent_campaign_id = xpc.campaign_id \
				left outer join xt_user_profile as xup on xl.created_by = xup.user_id \
				WHERE xl.created_by_company_id = :created_by_company_id \
				{checkPartnershipStatusForListingLeads} AND xd.id IS NULL AND xl.approval_status = 'APPROVED' \
				AND (xl.campaign_id is null OR xpc.campaign_id is not null OR (xl.campaign_id is not null AND xl.created_by_company_id = xl.created_for_company_id)) \
				
getSelectedVendorsLeadsForLeadAttachment = AND xl.created_for_company_id = :created_for_company_id \

sortLeadsForLeadAttachment = ORDER BY xl.id DESC \


 #********** XNFR-511****************

allRedistributedCampaignCountQueryForTeamMember = select cast(coalesce (count(distinct p.campaign_id), 0) as text) as \"redistributedCampaignCount\" \
from xt_campaign c \
left join xt_campaign p on c.campaign_id=p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id=p.customer_id \
left join xt_user_profile xup1 on xup1.user_id=c.customer_id \
where xup.company_id=:partnerCompanyId \
and p.is_launched = true \
and p.is_nurture_campaign=true \
and p.campaign_id is not null \
and p.vendor_organization_id is not null and p.parent_campaign_id is not null \


allShareLeadCountQueryForTeamMember = SELECT cast(count(DISTINCT xuu.user_id) as text) AS \"shareLeadCount\" \
From xt_user_profile u \
left join xt_user_list xul on u.user_id = xul.assigned_by \
and xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id  \
left join xt_user_profile u1 on u1.user_id = xuu.user_id  \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_user_profile xup1 on xup1.user_id=spm.partner_id  \
where xul.company_id=:partnerCompanyId \


allLeadCountQueryForTeamMember = select cast(count(distinct xl.id) as text) as \"leadCount\" \
 from xt_lead xl \
left join xt_user_profile xup1 on xup1.company_id =xl.created_by_company_id \
left join xt_user_profile xup on xup.user_id=xl.created_by \
where created_for_company_id !=created_by_company_id \
and xl.created_by_company_id =:partnerCompanyId \

allDealCountQueryForTeamMember = select cast(count(distinct xd.id) as text) as \"dealCount\" \
from xt_deal xd \
left join xt_user_profile xup1 on xup1.company_id =xd.created_by_company_id \
left join xt_user_profile xup on xup.user_id=xd.created_by \
where created_for_company_id !=created_by_company_id \
and xd.created_by_company_id =:partnerCompanyId \

allAssetCountQueryForTeamMember = select cast (count(distinct a.id) as text) as "assets" \
from (select distinct xd.id  \
from xt_dam_partner xdp left join xt_dam xd on xd.id=xdp.dam_id  \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id  \
join xt_company_profile xcp on xcp.company_id=xp.vendor_company_id left join xt_user_profile xup1  \
on xup1.user_id=xdpm.partner_id \
where xup1.company_id = :partnerCompanyId and xp.status='approved'  \
 and xcp.company_name_status='active' \
{teamMemberFilter}{vendorFilter}{vanityFilter}{dateFilter} \
 union \
 select distinct  xd.id \
from xt_dam_partner xdp  join xt_dam xd on xdp.dam_id =xd.id \
join xt_partnership xp on xp.id = xdp.partnership_id  \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id  \
left join xt_dam_analytics xda on xda.dam_partner_fk_id =xdp.id \
left join xt_user_profile xup1 on xup1.user_id=dpgm.user_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by  \
where xup1.company_id = :partnerCompanyId \
{teamMemberFilter}{vendorFilter}{vanityFilter}{dateFilter} \
)a \


allTrackAndPlaybookCountQueryForTeamMember =  select distinct cast(count (distinct case when xlt.type = 'TRACK'  and xlt.is_published = true then xlt.id end) as text) as \"trackCount\", \
cast(count(distinct case when xlt.type = 'PLAYBOOK' and xlt.is_published = true  then xlt.id end)  as text) as \"playbookCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_partnership p on p.id=xltv.partnership_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where p.partner_company_id=:partnerCompanyId \

allContactsQuery = SELECT CAST(count(distinct uul.user_id) AS TEXT) AS \"contactCount\" \
from xt_user_list ul \
left join xt_user_userlist uul on uul.user_list_id= ul.user_list_id and ul.module_name='CONTACTS' \
and ul.is_partner_userlist = false \
left join xt_user_profile xup on xup.user_id=uul.user_id \
left join xt_team_member tm on tm.team_member_id=ul.customer_id \
left join xt_user_profile u on u.user_id= ul.customer_id \
where uul.user_id is not null and ul.email_validation_ind=true \
and ul.company_id =:partnerCompanyId \

allViewedAndNotViewedTrackCountsQueryForTeamMember = select cast( sum( a."Interacted") as bigint) as \"openedCount\", cast(sum(a."Non Interacted") as bigint) as \"notOpenedCount\" from \
(select distinct on (xltv.learning_track_id) xltv.learning_track_id,xltv.progress, \
count (distinct case when xltv.progress>0 then xlt.id end ) as "Interacted", \
count (distinct case when coalesce(xltv.progress,0) =0 then xlt.id end ) as "Non Interacted" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xlt.type='TRACK' and xlt.is_published= true \
and xup1.company_id=:partnerCompanyId \

allViewedAndNotViewedTrackCountsQueryForTeamMemberGroupBy = group by 1,2)a 

allViewedAndNotViewedTrackDetailsSearchConditionsForTeamMember = and (xup1.email_id  ilike '%searchKey%' or xcp.company_name ilike '%searchKey%' or xup.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%') \

allViewedAndNotViewedTrackDetailsSearchConditionsForVendorTeamMember = and (xup1.email_id ilike '%searchKey%' or xup.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%') \

allViewedAndNotViewedTrackDetailsQueryForTeamMember = select distinct  xcp.company_name as \"vendorCompany\", xup1.email_id as "vendorTeamMemberEmailId", \
 xup.email_id as \"emailId\",xlt.title as \"title\", \
case when xltv.progress>0 then 'Viewed' when coalesce(xltv.progress, 0)=0 then 'Not Viewed' end as \"status\", \
cast(sum(coalesce(xltv.progress, 0))/count(distinct xltv.user_id) as Integer) as  \"progress\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_user_profile xup on xup.user_id=xltv.user_id \
left join xt_user_profile xup1 on xup1.user_id=p.vendor_id \
left join xt_company_profile xcp on xcp.company_id=xup1.company_id \
where p.partner_company_id=:partnerCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \
and p.status='approved' \
 
allViewedAndNotViewedTrackDetailsQueryGroupByForTeamMember = group by 1,2,3,4,5


allTypeWiseTrackCountsQueryForTeamMember = select count(distinct case when xltcp.type='OPENED' then xlt.id end ) as \"openedCount\", \
count(distinct case when xltcp.type='VIEWED' then xlt.id end )  as \"viewedCount\", \
count(distinct case when xltcp.type='DOWNLOADED' then xlt.id end ) as \"downloadedCount\", \
count(distinct case when xltcp.type is null then xlt.id end) as \"notOpenedCount\", \
count(distinct case when xltcp.type ='SUBMITTED' then xltc.quiz_id end) as \"submittedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
where xup1.company_id=:partnerCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and xup1.status='APPROVE' and xcp.company_name_status='active'  \

allTypeWiseTrackDetailsQueryForTeamMember = select distinct  xcp.company_name as \"vendorCompany\",xup.email_id as \"vendorTeamMemberEmailId\", \
 xup1.email_id  as \"emailId\", xlt.title  as \"title\", \
(case when xd.asset_type is null then 'QUIZ'\
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end  ) as \"assetName\", \
(case when xltcp.type is not null then cast(xltcp.type as text) \
when xltcp.type is null and xd.asset_type is null then cast('NOT SUBMITTED' as text) \
when xltc.quiz_id is null then cast('NOT OPENED' as text) end ) as \"status\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_user_profile xup on xup.user_id = xlt.created_by  \
left join xt_company_profile xcp on xcp.company_id= xup.company_id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
where xup1.company_id=:partnerCompanyId  \
and xlt.type='TRACK' and xlt.is_published= true and xup1.status='APPROVE' \

allTypeWiseTrackDetailsNotOpenedSearchConditionsForTeamMember = and (xup1.email_id ilike '%searchKey%' or  xcp.company_name ilike '%searchKey%' or xup1.email_id ilike '%searchKey%' or xlt.title  ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or xltcp.type  is null or cast(xd.asset_type as text) ilike '%searchKey%') \
 
allTypeWiseTrackDetailsSearchConditionsForTeamMember = and (xup1.email_id ilike '%searchKey%' or  xcp.company_name ilike '%searchKey%' or xup1.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or cast(xltcp.type as text) ilike '%searchKey%' or cast(xd.asset_type as text) ilike '%searchKey%') \

allTypeWiseTrackDetailsNotOpenedSearchConditionsForVendorTeamMember = and (xup1.email_id ilike '%searchKey%' or xup.email_id ilike '%searchKey%' or xlt.title  ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or xltcp.type  is null or cast(xd.asset_type as text) ilike '%searchKey%') \
 
allTypeWiseTrackDetailsSearchConditionsForVendorTeamMember = and (xup1.email_id ilike '%searchKey%' or xup.email_id ilike '%searchKey%' or xlt.title ilike '%searchKey%' \
 or xd.asset_name ilike '%searchKey%' or cast(xltcp.type as text) ilike '%searchKey%' or cast(xd.asset_type as text) ilike '%searchKey%') \ 
 
 
allTracksTeamMemberWiseCountsQuery = select distinct  xcp.company_name as \"vendorCompanyProfileName\", xup1.email_id as \"vendorTeamMemberEmailId\", xup.email_id as \"emailId\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_user_profile xup on xup.user_id=xltv.user_id \
left join xt_user_profile xup1 on xup1.user_id=xlt.created_by \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
where xup.company_id =:partnerCompanyId \
and xup1.status='APPROVE' \
and xlt.type='TRACK' and xlt.is_published= true \ 

emailIdSearchCondition = and (xup.email_id ilike '%searchKey%') \  

allTracksandPlayBooksCountsQuerySearchCondition = and (xup.email_id ilike '%searchKey%' or xcp.company_name ilike '%searchKey%' or xup1.email_id  ilike '%searchKey%' ) \  


allTracksTeamMemberWiseCountsGroupBy = group by 1,2,3


allPlaybooksTeamMemberWiseCountsQuery = select distinct xcp.company_name as \"vendorCompanyProfileName\", xup1.email_id as \"vendorTeamMemberEmailId\", \
xup.email_id as \"emailId\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_user_profile xup on xup.user_id=xltv.user_id \
left join xt_user_profile xup1 on xup1.user_id=xlt.created_by \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
where xup.company_id =:partnerCompanyId \
and xlt.type='PLAYBOOK' and xlt.is_published= true \
and xup1.status='APPROVE' \

allPlayBooksTeamMemberWiseCountsGroupBy = group by 1,2,3

allTracksUserWiseContentDetailsSearchConditionForTeamMember = and (xup1.email_id  ilike '%searchKey%' or xlt.title ilike '%searchKey%') \


allTrackAssetsQueryForTeamMember = select distinct xlt.title as \"title\", \
(case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
case when xd.created_time  is null then xf.created_time \
when xd.created_time is not null then xd.created_time end as  \"assetCreatedTime\", \
count(case when xltcp.type='OPENED' then xd.id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xup1.company_id=:partnerCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \

allTrackAssetsGroupByForTeamMember = group by 1,2,3,4

allTrackAssetsGroupByForVendorTeamMember = group by 1

allPlaybookAssetsQueryForTeamMember = select distinct xlt.title as \"title\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
xd.created_time as \"assetCreatedTime\", count(case when xltcp.type='OPENED' then xd.id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
where xup1.company_id =:partnerCompanyId  \
and xlt.type='PLAYBOOK' and xlt.is_published= true \ 

allPlaybookAssetsGroupByForTeamMember = group by 1,2,3,4


allPlaybookCountsGroupByForVendorTeamMember = group by 1,2

allShareLeadDetailsQueryForTeamMember = SELECT xcp.company_name as \"vendorCompany\", u.email_id as \"vendorTeamMemberEmailId\", \
xup1.email_id  as \"emailId\", xul.user_list_id  as \"userListId\", \
xul.user_list_name as \"listName\", xul.created_time as \"createdTime\", \
sp.created_time as \"assignedDate\", count(distinct xuu.user_id) as \"shareLeadCount\" \
From xt_user_profile u \
left join xt_user_list xul on u.user_id = xul.assigned_by \
and xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_user_profile u1 on u1.user_id = xuu.user_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
left join xt_sharelist_partner_mapping spm on sp.id =spm.sharelist_partner_id \
left join xt_user_profile xup1 on xup1.user_id=spm.partner_id \
left join xt_company_profile xcp on xcp.company_id=u.company_id \
where xul.company_id=:partnerCompanyId \
and u.status='APPROVE' \


allShareLeadDetailsGroupByForTeamMember = group by 1, 2, 3, 4, 5, 6, 7

allShareLeadDetailsSearchConditionsForTeamMember = and (u.email_id  ilike '%searchKey%' or xcp.company_name  ilike '%searchKey%' or xup1.email_id  ilike '%searchKey%' or xul.user_list_name ilike '%searchKey%') \


allRedistributedCampignDetailsForPieChartForTeamMember = select count(distinct case when c.campaign_type = 'REGULAR' then  c.campaign_id end ) as \"regularCount\", \
count(distinct case when c.campaign_type = 'EVENT' then  c.campaign_id end ) as \"eventCount\", \
count(distinct case when c.campaign_type = 'VIDEO' then  c.campaign_id end ) as \"videoCount\", \
count(distinct case when c.campaign_type = 'SURVEY' then  c.campaign_id end ) as \"surveyCount\", \
count(distinct case when c.campaign_type = 'SOCIAL' then c.campaign_id end ) as \"socialCount\" \
from xt_campaign p \
left join xt_campaign c on(p.campaign_id=c.parent_campaign_id) \
left join xt_user_profile ud on(p.customer_id=ud.user_id) \
left join xt_user_profile up1 on(c.customer_id=up1.user_id) \
where up1.company_id=:partnerCompanyId \
and c.is_launched=true and c.is_nurture_campaign=true \
and c.campaign_id is not null \
and c.vendor_organization_id is not null and c.parent_campaign_id is not null \


allRedistributedCampaignDetailsQueryForTeamMember = select distinct up1.email_id as \"emailId\",concat(up1.firstname, ' ' , up1.lastname ) as \"fullName\", \
c.campaign_name as \"campaignName\", case when c.campaign_type = 'REGULAR' then 'EMAIL' \
else c.campaign_type end  as \"campaignType\", \
case when cast(c.campaign_schedule_type as text) = 'NOW' then 'LAUNCHED' \
else  cast(c.campaign_schedule_type as text) end as  \"campaignScheduleType\", c.launch_time  as \"launchDate\" \
from xt_campaign p \
left join xt_campaign c on(p.campaign_id=c.parent_campaign_id)  \
left join xt_user_profile ud on(p.customer_id=ud.user_id) \
left join xt_user_profile up1 on(c.customer_id=up1.user_id) \
where up1.company_id=:partnerCompanyId \
and c.is_launched=true and c.is_nurture_campaign=true \
and c.campaign_id is not null \
and c.vendor_organization_id is not null and c.parent_campaign_id is not null \

allRedistributedCampaignDetailsSearchConditionsForTeamMember = and (up1.email_id ilike '%searchKey%' or c.campaign_name ilike '%searchKey%' or cast(c.campaign_type as text) ilike '%searchKey%' or cast(c.campaign_schedule_type  as text) ilike '%searchKey%') \

allLeadDetailsQueryForTeamMember = select  distinct xup.email_id as \"createdByEmail\",concat(xup.firstname, xup.lastname)  as \"createdByName\", \
xcp.company_name  as \"createdForCompanyName\", concat(xl.first_name, xl.last_name)  as  \"fullName\", \
xl.email \"email\", xl.phone  \"phone\",  xl.company \"company\", xps1.stage_name as \"currentStageName\",xl.created_time \"createdDate\" \
from xt_lead xl \
left join xt_pipeline_stage xps1 on xl.pipeline_stage_id =xps1.id \
left join xt_user_profile xup on xup.user_id=xl.created_by \
left join xt_company_profile xcp on xcp.company_id=xl.created_for_company_id \
where xl.created_by_company_id =:partnerCompanyId \
and xl.created_by_company_id != xl.created_for_company_id \

allLeadDetailsSearchConditionsForTeamMember = and (xup.email_id  ilike '%searchKey%' or concat(xl.first_name, xl.last_name) ilike '%searchKey%' or xcp.company_name ilike '%searchKey%' \
or xl.email ilike '%searchKey%' or xl.phone ilike '%searchKey%' or xl.company ilike '%searchKey%' or xps1.stage_name ilike '%searchKey%') \

allLeadDetailsSearchConditionsForVendorTeamMember = and (xup.email_id  ilike '%searchKey%' or concat(xl.first_name, xl.last_name) ilike '%searchKey%' \
or xl.email ilike '%searchKey%' or xl.phone ilike '%searchKey%' or xl.company ilike '%searchKey%' or xps1.stage_name ilike '%searchKey%') \

allDealDetailsQueryForTeamMember = select distinct xup.email_id as \"createdByEmail\",concat(xup.firstname, xup.lastname)  as \"createdByName\", \
xcp.company_name  as \"createdForCompanyName\", xps.stage_name as \"currentStageName\", \
xd.amount as \"amount\",  xd.title as "title", xd.created_time as \"createdDate\" \
from xt_deal xd \
left join xt_pipeline_stage xps on xps.id =xd.pipeline_stage_id \
left join xt_user_profile xup on xup.user_id=xd.created_by \
left join xt_company_profile xcp on xd.created_for_company_id=xcp.company_id \
where xd.created_by_company_id =:partnerCompanyId \
and xd.created_by_company_id != xd.created_for_company_id \

allDealDetailsSearchConditionsForTeamMember = and (xup.email_id  ilike '%searchKey%' or xps.stage_name ilike '%searchKey%' or xcp.company_name ilike '%searchKey%' \
or xd.deal_type ilike '%searchKey%' or cast(xd.amount as text) = '%searchKey%' or xd.title ilike '%searchKey%') \ 

allDealDetailsSearchConditionsForVendorTeamMember = and (xup.email_id  ilike '%searchKey%' or xps.stage_name ilike '%searchKey%' \
or xd.deal_type ilike '%searchKey%' or cast(xd.amount as text) = '%searchKey%' or xd.title ilike '%searchKey%') \ 


TeamMemberAnalyticsMDFRequetsQuery = select distinct xup1.email_id as \"emailId\", xcp.company_name as \"companyName\", \
xup.email_id as \"partnerEmailId\",max(xmr.allocation_date)as \"allocationTime\", count(distinct xmr.id) as \"totalRequests\", \
coalesce(round(sum(case when xl.label_type=8 and xl.is_default_column=true then  \
cast(xfsc.value as decimal) end)/ count(distinct xmr.id),2),0) as "averageRequestSize", \
coalesce(sum(case when xl.label_type=8 and xl.is_default_column=true then \
cast(xfsc.value as decimal) end),0) as \"totalValue\", \
max(xmr.created_time)as "createdTime" \
from xt_partnership xp left join xt_mdf_request xmr on xp.id = xmr.partnership_id \
left join xt_form_submit xfs on xfs.request_id= xmr.id \
left join xt_form_submit_single_choice xfsc on xfsc.form_submit_id = xfs.id \
left join xt_form_label xl on xl.id= xfsc.form_label_id \
left join xt_user_profile xup on xup.user_id= xp.partner_id \
left join xt_user_profile xup1 on xup1.user_id=xp.vendor_id \
left join xt_company_profile xcp on xcp.company_id=xup1.company_id \
where xp.partner_company_id =:partnerCompanyId \
and xp.status = 'approved' and xup1.status='APPROVE' \

TeamMemberAnalyticsMDFRequetsQueryGroupBy = group by 1,2,3 having count(distinct xmr.id) > 0 \

TeamMemberAnalyticsMDFRequetsSearchConditions = and (xup.email_id  ilike '%searchKey%' or xcp.company_name ilike '%searchKey%' or xup1.email_id  ilike '%searchKey%' ) \


allPartnersCountForTeamAnalytics = select cast(count(distinct p.partner_id) as text) as \"allPartnersCount\" \
from xt_partnership p \
left join xt_user_profile xup on xup.user_id=p.partner_id \
left join xt_user_profile xup1 on xup1.company_id=p.vendor_company_id \
where p.vendor_company_id = :vendorCompanyId \
and p.partner_id is not null and  p.status= 'approved' \

launchedCampaignCountForTeamAnalytics = select cast(count(distinct c.campaign_id) as text) as \"launchedCampaignCount\" \
from xt_campaign c \
left join xt_campaign p on c.campaign_id=p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id=c.customer_id \
where xup.company_id=:vendorCompanyId \
and c.is_launched = true \


shareLeadCountForVendorView = select cast(sum(a.\"Share Leads\") as text) as \"shareLeadCount\" from \
(SELECT distinct cast(count(DISTINCT xuu.user_id) as integer) AS \"Share Leads\" \
From xt_user_profile u \
left join xt_user_list xul on u.user_id = xul.assigned_by \
AND xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
where xul.assigned_company_id =:vendorCompanyId {dateFilter}\

shareLeadCountForVendorViewGroupBy = ) a 

allLeadCountQueryForVendorView = select distinct cast(count(distinct xl.id) as text) as \"leadCount\" \
from xt_lead xl \
left join xt_user_profile xup on xup.user_id =xl.created_by \
left join xt_company_profile xcp on xcp.company_id=xl.created_for_company_id \
where xl.created_for_company_id =:vendorCompanyId \
and xl.created_by_company_id =:vendorCompanyId \

allDealCountQueryForVendorView = select cast(count(distinct xd.id) as text) as \"dealCount\" \
 from xt_deal xd \
left join xt_user_profile xup on xup.user_id =xd.created_by \
where xd.created_for_company_id =:vendorCompanyId \
and xd.created_by_company_id =:vendorCompanyId \

allAssertsCountQueryForVendorView = select cast (count(distinct xdp.dam_id) as text) as \"assetCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
left join xt_user_profile xup on xup.user_id=xd.created_by \
where xp.vendor_company_id=:vendorCompanyId \

allTrackAndPlaybookCountQueryForVendorView = select distinct cast(count (distinct case when xlt.type = 'TRACK' and xlt.is_published = true then xlt.id end) as text) as \"trackCount\", \
cast(count(distinct case when xlt.type = 'PLAYBOOK' and xlt.is_published = true then xlt.id end) as text) as \"playbookCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup on xup.user_id= xltv.created_by \
where xlt.company_id=:vendorCompanyId \

allContactsQueryForVendorView = select cast(count(distinct uul.user_id) as text) as \"contactCount\" \
from xt_user_list ul \
left join xt_user_userlist uul on uul.user_list_id= ul.user_list_id \
left join xt_user_profile xup on xup.user_id=uul.user_id \
left join xt_team_member tm on tm.team_member_id=ul.customer_id \
left join xt_user_profile xup1 on xup1.user_id=ul.customer_id \
where ul.is_partner_userlist=false \
and uul.user_id is not null \
and ul.email_validation_ind=true \
and ul.module_name='CONTACTS' \
and ul.company_id =:vendorCompanyId \

allViewedAndNotViewedTrackCountsQueryForVendorView = select cast(sum(a."Interacted") as bigint) as \"openedCount\", cast(sum(a."Non Interacted") as bigint) as \"notOpenedCount\" from \
(select distinct on (xltv.learning_track_id) xltv.learning_track_id , xup1.user_id, \
count (distinct case when xltv.progress>0 then xlt.id end) as "Interacted", \
count (distinct case when coalesce(xltv.progress,0) =0 then xlt.id end) as "Non Interacted" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.created_by \
where xlt.type='TRACK' and xlt.is_published= true \
and xlt.company_id=:vendorCompanyId \

allViewedAndNotViewedTrackCountsQueryForVendorViewGroupBy = group by xlt.id,1,2)a 

allViewedAndNotViewedTrackDetailsQueryForVendor = select distinct xup1.email_id as \"emailId\",xup.email_id as \"partnerEmailId\",xlt.title as \"title\", \
case when xltv.progress>0 then 'Viewed' when coalesce(xltv.progress, 0)=0 then 'Not Viewed' end as \"status\", \
coalesce(xltv.progress, 0) as  \"progress\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.created_by \
left join xt_user_profile xup on xup.user_id=xltv.user_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \
and xup.status ='APPROVE' \


allTypeWiseTrackCountsQueryForVendor = select count(distinct case when xltcp.type='OPENED' then xlt.id end ) as \"openedCount\", \
count(distinct case when xltcp.type='VIEWED' then xlt.id end ) as \"viewedCount\", \
count(distinct case when xltcp.type='DOWNLOADED' then xlt.id end )  as \"downloadedCount\", \
count(distinct case when xltcp.type is null then xlt.id end) as \"notOpenedCount\", \
count(distinct case when xltcp.type ='SUBMITTED' then xltc.quiz_id end) as \"submittedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.created_by \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \
and xup1.status='APPROVE' and xcp.company_name_status='active' \


allTypeWiseTrackDetailsQueryForVendor = select distinct xup1.email_id  as \"emailId\", \
 concat(xup1.firstname , '  ' , xup1.lastname) as \"fullName\",xup.email_id as \"partnerEmailId\",xlt.title  as \"title\", \
(case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end )  as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
(case when xltcp.type is not null then cast(xltcp.type as text) \
when xltcp.type is null and xd.asset_type is null then cast('NOT SUBMITTED' as text) \
when xltc.quiz_id is null then cast('NOT OPENED' as text) end ) as \"status\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.created_by \
left join xt_user_profile xup on xup.user_id= xltv.user_id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xltc.quiz_id= xf.id \
where xlt.company_id =:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and xup1.status='APPROVE' and xup.status ='APPROVE' \

  
allTracksTeamMemberWiseCountsQueryForVendor = select  distinct xup.email_id as \"emailId\",concat(xup.firstname, ' ' ,xup.lastname) as \"fullName\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_partnership p on xltv.partnership_id = p.id \
left join xt_user_profile xup on xup.user_id=xltv.created_by \
where xlt.company_id =:vendorCompanyId  \
and xlt.type='TRACK' and xlt.is_published= true \

allTracksTeamMemberWiseCountsQueryForVendorGroupBy = group by 1,2

allPlaybooksTeamMemberWiseCountsQueryForVendor = select distinct xup.email_id as \"emailId\", concat(xup.firstname, ' ' ,xup.lastname) as \"fullName\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_partnership p on	 xltv.partnership_id = p.id \
left join xt_user_profile xup on xup.user_id=xltv.created_by \
where xlt.company_id =:vendorCompanyId \
and xlt.type='PLAYBOOK' and xlt.is_published= true \


allTrackAssetsQueryForVendor = select distinct xlt.title as \"title\", \
(case when xd.asset_type is null then 'QUIZ' \
when xd.asset_type is not null then xd.asset_type end ) as \"assetType\", \
(case when xd.asset_name is null then xf.form_name \
when xd.asset_name is not null then xd.asset_name end ) as \"assetName\", \
xd.created_time  as \"assetCreatedTime\", \
count(case when xltcp.type='OPENED' then xd.id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.created_by \
left join xt_form xf on xltc.quiz_id= xf.id \
where xlt.company_id=:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \
and xd.id is not null \


allPlaybookAssetsQueryForVendorTeamMember = select distinct xlt.title as \"title\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
xd.created_time as \"assetCreatedTime\", count(case when xltcp.type='OPENED' then xd.id end) as \"openedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id  \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.created_by \
where xlt.company_id=:vendorCompanyId \
and xlt.type='PLAYBOOK' and xlt.is_published= true \

allShareLeadDetailsQueryForVendorTeamMember = SELECT distinct u.email_id  as \"emailId\", concat(u.firstname , ' ' , u.lastname) as \"fullName\", \
xul.user_list_id  as \"userListId\", \
CASE WHEN sp.user_list_id IS NOT NULL THEN 'Assigned' \
ELSE 'Not Assigned' END AS \"status\", \
xul.user_list_name as \"listName\", xul.created_time as \"createdTime\", \
sp.created_time as \"assignedDate\", count(distinct xuu.user_id)  as \"shareLeadCount\" \
From xt_user_profile u \
left join xt_user_list xul on u.user_id = xul.assigned_by \
AND xul.module_name = 'SHARE LEADS' \
left join xt_user_userlist xuu on xul.user_list_id = xuu.user_list_id \
left join xt_sharelist_partner sp on sp.user_list_id = xul.user_list_id \
where xul.assigned_company_id =:vendorCompanyId \

allShareLeadDetailsSearchConditionsForVendorTeamMember = and (u.email_id  ilike '%searchKey%' or xul.user_list_name ilike '%searchKey%') \


allShareLeadDetailsGroupByForVendorTeamMember = group by 1,2,3,4,5,6,7


allLaunchedCampignDetailsForPieChartForVendorTeamMember = select count(distinct case when p.campaign_type = 'REGULAR' then  p.campaign_id end ) as \"regularCount\", \
count(distinct case when p.campaign_type = 'EVENT' then  p.campaign_id end ) as \"eventCount\", \
count(distinct case when p.campaign_type = 'VIDEO' then  p.campaign_id end ) as \"videoCount\", \
count(distinct case when p.campaign_type = 'SURVEY' then  p.campaign_id end ) as \"surveyCount\", \
count(distinct case when p.campaign_type = 'LANDINGPAGE' then  p.campaign_id end ) as \"pageCount\", \
count(distinct case when p.campaign_type = 'SOCIAL' then p.campaign_id end ) as \"socialCount\" \
from xt_campaign p \
left join xt_user_profile ud on(p.customer_id=ud.user_id) \
where ud.company_id=:vendorCompanyId  \
and p.is_launched=true and p.campaign_id is not null \

allLaunchedCampaignDetailsQueryForTeamMember = select distinct ud.email_id as \"emailId\", concat(ud.firstname , ' ' , ud.lastname) as \"fullName\", \
p.campaign_name as \"campaignName\", case when p.campaign_type = 'REGULAR' then 'EMAIL' \
else p.campaign_type end  as \"campaignType\", \
case when cast(p.campaign_schedule_type as text) = 'NOW' then 'LAUNCHED' \
else  cast(p.campaign_schedule_type as text) end as  \"campaignScheduleType\", p.launch_time  as \"launchDate\" \
from xt_campaign p \
left join xt_user_profile ud on(p.customer_id=ud.user_id) \
where ud.company_id=:vendorCompanyId \
and p.is_launched=true and p.campaign_id is not null \

allLaunchedCampaignDetailsQueryForTeamMemberOrderBy = order by p.launch_time

allLaunchedCampaignDetailsQuerySearchConditionsForVendorTeamMember = and (ud.email_id ilike '%searchKey%' or p.campaign_name ilike '%searchKey%' or cast(p.campaign_type as text) ilike '%searchKey%' or cast(p.campaign_schedule_type  as text) ilike '%searchKey%') \


allTeamMemberAnalyticsContactDetailsQuery = select xup1.email_id as \"emailId\", concat(xup1.firstname, ' ' , xup1.lastname ) as \"fullName\", \
ul.created_time as \"createdTime\", \
ul.user_list_name as \"userListName\",cast(count(distinct uul.user_id) as text) as \"contacts\" \
from xt_user_list ul \
left join xt_user_userlist uul on uul.user_list_id= ul.user_list_id \
left join xt_user_profile xup on xup.user_id=uul.user_id \
left join xt_team_member tm on tm.team_member_id=ul.customer_id \
left join xt_user_profile xup1 on xup1.user_id=ul.customer_id \
where ul.is_partner_userlist=false \
and uul.user_id is not null \
and ul.email_validation_ind=true \
and ul.module_name='CONTACTS' \
and ul.company_id =:vendorCompanyId \

allTeamMemberAnalyticsContactDetailsQueryGroupBy = group by 1,2,3,4

allTeamMemberAnalyticsContactDetailsSearchConditions = and (xup1.email_id ilike '%searchKey%' or ul.user_list_name ilike '%searchKey%') \

allTeamMemberAnalyticsallPartnersDetailsQuery = select distinct  xup1.email_id  as \"emailId\", concat(xup1.firstname,' ', xup1.lastname) as \"fullName\", \
xcp.company_name as \"partnerCompany\", \
xup.email_id as \"partnerEmailId\", concat(xup.firstname,' ', xup.lastname) as \"partnerName\", \
xup."status" as \"userStatus\",xup.created_time as \"onboardTime\" \
from xt_partnership p \
left join xt_user_profile xup on xup.user_id = p.partner_id \
left join xt_user_profile xup1 on xup1.user_id=p.vendor_id  \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
where p.vendor_company_id =:vendorCompanyId \
and xup.user_id is not null and  p.status= 'approved' \

allTeamMemberAnalyticsallPartnersDetailsSearchConditions =and (xup.email_id ilike '%searchKey%' or xup1.email_id ilike '%searchKey%' or xcp.company_name ilike '%searchKey%' or xup.firstname ilike '%searchKey%' or xup.lastname ilike '%searchKey%') \

redistributedCampaignsCountOrderByQuery = order by \"redistributedCampaignsCount\" desc limit 10

leadsCountOrderByQuery = order by \"leadsCount\" desc limit 10

leadsOrderByQuery = order by  2 desc limit 10

dealsOrderByQuery = order by 3 desc limit 10


allTeamMemberAnalyticsContactDetailsQueryForPartnerTeamMember = select distinct u.email_id as \"emailId\",concat(u.firstname, ' ' , u.lastname ) as \"fullName\", \
ul.created_time as \"createdTime\",ul.user_list_name as \"userListName\",cast(count(distinct uul.user_id) as text) as \"contacts\" \
from xt_user_list ul \
left join xt_user_userlist uul on uul.user_list_id= ul.user_list_id and ul.module_name='CONTACTS' \
and ul.is_partner_userlist= false \
left join xt_user_profile xup on xup.user_id=uul.user_id \
left join xt_team_member tm on tm.team_member_id=ul.customer_id \
left join xt_user_profile u on u.user_id= ul.customer_id \
where uul.user_id is not null and ul.email_validation_ind= true \
and ul.company_id =:partnerCompanyId \

allTeamMemberAnalyticsContactDetailsForPartnerSearchConditions = and (u.email_id ilike '%searchKey%' or ul.user_list_name ilike '%searchKey%') \


allLeadDetailsQueryForVendorTeamMember = select  distinct  xup.email_id as \"createdByEmail\",concat(xup.firstname, xup.lastname)  as \"createdByName\", \
concat(xl.first_name, xl.last_name)  as  \"fullName\", \
xl.email  \"email\", xl.phone  \"phone\",  xl.company \"company\", xps1.stage_name as \"currentStageName\",xl.created_time \"createdDate\" \
from xt_lead xl \
left join xt_user_profile xup on xup.user_id =xl.created_by \
left join xt_pipeline_stage xps1 on xl.pipeline_stage_id =xps1.id \
left join xt_company_profile xcp on xcp.company_id=xl.created_for_company_id \
where xl.created_for_company_id =:vendorCompanyId \
and xl.created_by_company_id =:vendorCompanyId \

allDealDetailsQueryForVendorTeamMember = select distinct xup.email_id as \"createdByEmail\",xcp.company_name  as \"createdByCompanyName\",concat(xup.firstname, xup.lastname)  as \"createdByName\", \
xps.stage_name as \"currentStageName\",xd.deal_type as \"dealType\", \
xd.amount as \"amount\",  xd.title as "title", xd.created_time as \"createdDate\" \
from xt_deal xd \
left join xt_pipeline_stage xps on xps.id =xd.pipeline_stage_id \
left join xt_user_profile xup on xd.created_by=xup.user_id \
left join xt_company_profile xcp on xd.created_for_company_id=xcp.company_id \
where xd.created_for_company_id =:vendorCompanyId \
and xd.created_by_company_id=:vendorCompanyId  \

allVendorteamMemberAnalyticsMDFQuery = with a as (select distinct xp.vendor_company_id, xp.partner_id, xup.user_id,xup.email_id, \
concat(xup.firstname , ' ' , xup.lastname) as fullName,sum(case when xmdh.mdf_amount_type='FUND_ADDED' then xmdh.mdf_amount else 0 end) - sum(case when xmdh.mdf_amount_type='FUND_REMOVED' \
then xmdh.mdf_amount else 0 end) as mdf_amount \
from xt_partnership xp \
left join xt_mdf_details xmd on xmd.partnership_id = xp.id \
left join xt_mdf_details_history xmdh on xmdh.mdf_details_id = xmd.id \
left join xt_user_profile xup on xmd.created_by= xup.user_id \
group by 1,2,3,4),b as (select distinct xp.vendor_company_id,xuu.contact_company as "PartnerCompanyName",xp.partner_id, \
coalesce(sum(xmrh.reimburse_amount), 0) reimburse_amount,coalesce(sum(xmrh.allocation_amount),0) allocation_amount \
from xt_partnership xp \
left join xt_mdf_request xmr on xp.id = xmr.partnership_id \
left join xt_mdf_request_history xmrh on xmrh.request_id = xmr.id \
left join xt_user_profile xup on xup.user_id = xp.partner_id \
left join xt_user_userlist xuu on xup.user_id = xuu.user_id \
left join xt_user_list xul on xul.user_list_id = xuu.user_list_id and xul.company_id = xp.vendor_company_id \
where xul.is_partner_userlist = true and xul.is_default_partnerlist = true \
group by 1,2,3) \
select distinct a.email_id as \"emailId\" , coalesce(a.mdf_amount,0) as \"totalBalance\" ,a.fullName as "fullName", \
coalesce(b.reimburse_amount,0) as \"usedBalance\", \
(coalesce(a.mdf_amount,0)-coalesce(b.allocation_amount,0)) + (coalesce(allocation_amount,0)-coalesce(b.reimburse_amount,0)) as "availableBalance" \
from a left join b on a.vendor_company_id= b.vendor_company_id and a.partner_id = b.partner_id \
where a.vendor_company_id=:vendorCompanyId \
and a.user_id is not null \


allMDFAmountForTeamAnalytics = select cast(round(cast(COALESCE(sum(case when xmdh.mdf_amount_type='FUND_ADDED' \
then xmdh.mdf_amount else 0 end) - sum(case when xmdh.mdf_amount_type='FUND_REMOVED' \
then xmdh.mdf_amount else 0 end),0) as BIGINT ),0)as text) as \"mdfAmount\" \
from xt_partnership xp \
left join xt_mdf_details xmd on xmd.partnership_id = xp.id \
left join xt_mdf_details_history xmdh on xmdh.mdf_details_id = xmd.id \
left join xt_user_profile xup on xup.user_id=xmd.created_by \
where xp.vendor_company_id=:vendorCompanyId \
and xp.status = 'approved' and xup.user_id is not null \

allVendorteamMemberAssetsCountQuery = select xup.email_id as \"emailId\",concat(xup.firstname, ' ' ,xup.lastname) as \"fullName\",  \
count(distinct xd.id) as \"assetCount\"  \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
left join xt_user_profile xup on xup.user_id=xd.created_by \
where xd.company_id=:vendorCompanyId \

allAssetsCountSearchConditionsForTeamMember = and xup.email_id ilike '%searchKey%' \

allVendorteamMemberAssetsCountGroupBy = group by 1,2

allVendorteamMemberAssetsDetailsQuery = select distinct xup.email_id as \"emailId\", \
concat(xup.firstname ,' ', xup.lastname ) as \"fullName\", \
xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
xd.created_time as \"assetCreatedTime\", xd.published_time as \"publishedOn\"  \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id  \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id  \
left join xt_user_profile xup on xup.user_id=xd.created_by \
where xd.company_id=:vendorCompanyId \
and xd.id is not null \

allAssetsDetailsSearchConditionsForTeamMember =  and (xup.email_id ilike '%searchKey%' or xd.asset_name ilike '%searchKey%') \


allCompanyQuery = select cast(count(distinct xc.id) as text) as \"companyCount\" \
from xt_company xc \
where xc.company_id=:partnerCompanyId \ 

allTeamMemberAnalyticsCompanyDetailsQuery = select distinct xup.email_id as \"emailId\", concat(xup.firstname, ' ' ,xup.lastname) as \"fullName\", \
c.name as \"company\", \
 xul.user_list_name as \"userListName\", cast(count(xuul.id) as text) as \"contacts\"  \
from xt_company c \
left join xt_user_list xul on xul.associated_company_id= c.id \
left join xt_user_userlist xuul on xuul.user_list_id=xul.user_list_id \
left join xt_user_profile xup on xup.user_id=c.created_by \
where xul.company_id =:partnerCompanyId \

allTeamMemberAnalyticsCompanyDetailsSearchConditions = and (xup.email_id ilike '%searchKey%' or c.name ilike '%searchKey%' or xul.user_list_name ilike '%searchKey%') \

allTeamMemberAnalyticsCompanyDetailsQueryGroupBy = group by 1,2,3,4

#*** END OF XNFR-511 ***


#*** XNFR-578 ***

partnerJourneyPlayBookUserWiseCountsQuery = select distinct xup1.email_id as \"emailId\", \
xup1.firstname as \"firstName\", xup1.lastname as \"lastName\", \
cast(count(distinct xlt.id) as text) as \"trackCount\" \
 from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id=xlt.id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id where xlt.type='PLAYBOOK' \
and xlt.is_published= true \
and xlt.company_id=:vendorCompanyId and xup1.company_id=:partnerCompanyId  

partnerJourneyPlayBookUserWiseGroupBy = group by 1,2,3

partnerJourneyCampaignToLeadConversionQuery = select xup1.email_id as "TeamMemberEmailId",cast(extract(year from p.launch_time)as text) as "year", \
cast(count(distinct xcuul.user_id) as decimal) as "contactsCount",cast(count(distinct xl.id) as decimal ) as "leadsCount" \
from xt_campaign c \
left join xt_campaign p on c.campaign_id=p.parent_campaign_id \
left join xt_campaign_user_userlist xcuul on xcuul.campaign_id=p.campaign_id \
left join xt_lead xl on xcuul.campaign_id=xl.campaign_id \
and xcuul.user_id= xl.associated_user_id \
left join xt_user_profile xup on c.customer_id=xup.user_id \
left join xt_user_profile xup1 on xup1.user_id=p.customer_id \
where xup1.company_id=:partnerCompanyId and xup.company_id=:vendorCompanyId \
and p.campaign_id is not null and p.is_launched = true and xcuul.user_id is not null  


partnerJourneyCampaignToLeadConversionGroupBy = group by 1, 2

#*** END OF XNFR-578 ***


#*** XNFR-649 - Query Leads  ***

leadResponseDtoSQLQuery= SELECT xl.id AS \"id\", xl.first_name AS \"firstName\", xl.last_name AS \"lastName\", xl.email AS \"email\", xl.company AS \"company\", \
				    xl.phone AS \"phone\", xl.created_by_company_id AS \"createdByCompanyId\", xl.created_for_company_id AS \"createdForCompanyId\", \
				    xcp.company_name AS \"createdForCompanyName\", xl.campaign_id AS \"campaignId\", xc.campaign_name AS \"campaignName\", \
				    COALESCE(xpc.campaign_id, xc.campaign_id) AS \"parentCampaignId\", COALESCE(xpc.campaign_name, xc.campaign_name) AS \"parentCampaignName\", \
				    xl.crm_reference_id AS \"referenceId\", xcp1.company_name AS \"createdByCompanyName\", CONCAT(xup.firstname, ' ', xup.lastName) AS \"createdByName\", \
				    xup.email_id AS \"createdByEmail\", cast(xl.created_time as text) AS \"createdTime\", xps.stage_name AS \"currentStageName\", \
				    xd.id AS \"associatedDealId\", CAST(xl.approval_status AS text) AS \"leadApprovalStatusType\", xcp.lead_approval_status AS \"leadApprovalOrRejection\", \
				    CASE WHEN xl.created_for_company_id = xl.created_by_company_id THEN true ELSE false END AS \"selfLead\", CASE WHEN xl.created_by_company_id = :companyId AND xd.id IS NULL THEN true \
				    ELSE false END AS \"canRegisterDeal\", 

enableRegisterDealButtonQuery = CASE WHEN xp.status = 'approved' THEN true WHEN xl.created_for_company_id = xl.created_by_company_id THEN true ELSE false END AS \"enableRegisterDealButton\", 

showRegisterDealQuery = COALESCE(xi.deal_by_partner, true) AS \"dealByPartner\", COALESCE(xi.deal_by_vendor, false) AS \"dealByVendor\", COALESCE(xi.deal_by_self_lead, true) AS \"dealBySelfLead\", 

checkAssociatedCampaignDeletedQuery = CASE WHEN xl.campaign_id IS NULL THEN false WHEN xl.campaign_id IS NOT NULL AND xc.campaign_id IS NULL THEN true WHEN xc.parent_campaign_id IS NOT NULL AND xc.parent_campaign_id > 0 AND xpc.campaign_id IS NULL THEN true \
				    	    WHEN xc.parent_campaign_id IS NULL AND xl.created_for_company_id != xl.created_by_company_id THEN true ELSE false END AS \"isAssociatedCampaignDeleted\", 

canUpdateQuery = CASE WHEN ur.user_id IS NOT NULL OR xl.created_by = :loggedInUserId THEN true ELSE false END AS \"canUpdate\", \
COALESCE(xi.can_partner_edit_lead, true) AS "partnerEditLead", \
COALESCE(xi.can_partner_delete_lead, true) AS "partnerDeleteLead",

unReadChatCountQuery = COALESCE(uc.unread_count, 0) AS \"unReadChatCount\" 

leadFROMClause = FROM xt_lead xl LEFT JOIN xt_user_profile xup ON xl.created_by = xup.user_id \
				LEFT JOIN xt_company_profile xcp ON xcp.company_id = xl.created_for_company_id \
				LEFT JOIN xt_company_profile xcp1 ON xcp1.company_id = xl.created_by_company_id \
				LEFT JOIN xt_campaign xc ON xc.campaign_id = xl.campaign_id \
				LEFT JOIN xt_campaign xpc ON xc.parent_campaign_id = xpc.campaign_id \
				left join xt_pipeline_stage xps ON xps.id = xl.pipeline_stage_id \
				join xt_pipeline xp1 on xp1.company_id= xl.created_for_company_id and xps.pipeline_id =xp1.id \
				LEFT JOIN xt_deal xd ON xl.id = xd.associated_lead_id 
				
enableRegisterDealButtonJoinCondition = LEFT JOIN xt_partnership xp ON xp.vendor_company_id = xl.created_for_company_id AND xp.partner_company_id = xl.created_by_company_id 
				
showRegisterDealJoinCondition = LEFT JOIN xt_integration xi ON xl.created_for_company_id = xi.company_id AND xi.company_id = xl.created_for_company_id AND xi.active 

canUpdateJoinCondition = LEFT JOIN (SELECT DISTINCT ur.user_id FROM xt_user_role ur JOIN xt_user_profile up ON ur.user_id = up.user_id JOIN xt_lead xl ON up.company_id = xl.created_by_company_id \
				    WHERE ur.role_id IN (2, 13, 19, 18, 20, 12, 9) AND up.company_id = xl.created_for_company_id) ur ON ur.user_id = :loggedInUserId 
			
unReadChatCountJoinCondition = LEFT JOIN (SELECT dc.lead_id, COUNT(*) AS unread_count FROM xt_campaign_deal_comments dc LEFT JOIN xt_deal d ON dc.deal_id = d.id \
				    LEFT JOIN (SELECT lead_id, MAX(comment_id) AS max_comment_id FROM xt_campaign_deal_comments_statistics WHERE created_by = :loggedInUserId \
				    GROUP BY 1 ) cs ON cs.lead_id = dc.lead_id WHERE dc.created_by != :loggedInUserId AND dc.id > COALESCE(cs.max_comment_id, 0) GROUP BY dc.lead_id) uc ON uc.lead_id = xl.id 

orderLeadsBy = ORDER BY 1 DESC 

#*** XNFR-649 - END - Query Leads  ***

# XNFR-650 - Query Deals
dealResponseDtoQuery = select xd.id as \"id\", xd.title as \"title\", xd.crm_reference_id as \"referenceId\", xcp.company_name as \"createdForCompanyName\", \
    					xcp1.company_name as \"createdByCompanyName\", xc.campaign_name as \"campaignName\", xc.campaign_id as \"campaignId\", \
    					coalesce(xpc.campaign_id, xc.campaign_id) as \"parentCampaignId\", coalesce(xpc.campaign_name, xc.campaign_name) as \"parentCampaignName\", \
    					concat(xup.firstname, ' ', xup.lastname) as \"createdByName\", xup.email_id as \"createdByEmail\", cast(xd.created_time as text) as \"createdTime\", \
    					xps.stage_name as \"currentStageName\", xps.is_non_interactive as \"isOnNonInteractiveStage\", xps.id as \"pipelineStageId\", xd.pipeline_id as \"pipelineId\", 

showDealActionsQuery = case when xi.id is not null and xd.created_by_company_id != xd.created_for_company_id then xi.deal_by_partner else true end as \"showDealActions\", 

showEditDealStageQuery = case when xi.id is not null then xi.show_deal_pipeline_stage else true end as \"showEditDealStage\", 

canUpdateDealQuery = case when ur.user_id is not null or xd.created_by = :loggedInUserId then true else false end as \"canUpdate\", 

dealUnreadChatCountQuery = coalesce(uc.unreadchatcount, 0) as \"unReadChatCount\", 

dealUnreadPropertyChatCountQuery = coalesce(upc.unreadpropertychatcount, 0) as \"unReadPropertyChatCount\" 

dealFROMClause = from xt_deal xd \
			left join xt_company_profile as xcp on xd.created_for_company_id = xcp.company_id \
			left join xt_company_profile as xcp1 on xd.created_by_company_id = xcp1.company_id \
			left join xt_campaign as xc on xd.campaign_id = xc.campaign_id \
			left join xt_campaign as xpc on xc.parent_campaign_id = xpc.campaign_id \
			left join xt_user_profile as xup on xd.created_by = xup.user_id \
			left join  xt_pipeline_stage xps ON xps.id=xd.pipeline_stage_id \
			join xt_pipeline xp1 on xp1.company_id= xd.created_for_company_id and xps.pipeline_id =xp1.id 

showDealActionsAndEditDealStageJoinCondition = left join xt_integration as xi on xd.created_for_company_id = xi.company_id and xi.active 

canUpdateDealJoinCondition = left join (select distinct ur.user_id, up.company_id \
								from xt_user_role ur \
								join xt_user_profile up on up.user_id = ur.user_id \
								where ur.role_id in (2, 13, 19, 18, 20, 12, 9)) ur on ur.user_id = :loggedInUserId \
								and ur.company_id = xd.created_by_company_id 

dealUnreadChatCountJoinCondition = left join (select  dc.deal_id, count(*) as unreadchatcount from xt_campaign_deal_comments dc \
								left join xt_deal d on dc.lead_id = d.associated_lead_id \
								left join xt_campaign_deal_comments_statistics dcs on dc.deal_id = dcs.deal_id and dcs.created_by = :loggedInUserId \
								where dc.created_by != :loggedInUserId and dc.id > coalesce(dcs.comment_id, 0) \
								group by 1) uc on xd.id = uc.deal_id 

dealUnreadPropertyChatCountJoinQuery = left join (select  xdp.deal_id,  count(*) as unreadpropertychatcount \
						from  xt_campaign_deal_comments xdc join xt_campaign_deal_properties xdp on xdc.property_id = xdp.id \
						left join xt_campaign_deal_comments_statistics dcs on xdp.id = dcs.property_id and dcs.created_by = :loggedInUserId \
						where xdc.id > coalesce(dcs.comment_id, 0) group by  1) upc on xd.id = upc.deal_id 

orderDealsBy = order by  xd.id desc

# XNFR-649

leadTileCountsQuery = select cast(count(DISTINCT xl.id) AS int) AS \"totalLeads\", \
				 cast(count(DISTINCT CASE WHEN xps.is_won = true THEN xl.id END) AS INT) AS \"wonLeads\", \
				 cast(count(DISTINCT CASE WHEN xps.is_lost = true THEN xl.id END) AS INT) AS \"lostLeads\", \
				 cast(count(DISTINCT CASE WHEN xd.associated_lead_id = xl.id THEN xl.id END) AS INT) AS \"convertedLeads\" \
				 FROM xt_company_profile xcp left join xt_lead xl ON xl.created_for_company_id = xcp.company_id \
				 left join xt_deal xd ON xd.created_for_company_id = xcp.company_id \
				 left join xt_pipeline_stage xps ON xps.id = xl.pipeline_stage_id
				 
dealTileCountsQuery = select cast(count(distinct xd.id) AS INT) AS \"totalDeals\", \
               cast(count(distinct CASE WHEN xps.is_won = true THEN xd.id END) AS INT) AS \"wonDeals\", \
               cast(count(distinct CASE WHEN xps.is_lost = true THEN xd.id END) AS INT) AS \"lostDeals\" \
               FROM xt_company_profile xcp \
               LEFT JOIN xt_deal xd ON xcp.company_id = xd.created_by_company_id \
               LEFT JOIN xt_pipeline_stage xps ON xps.id = xd.pipeline_stage_id
 
               
allLeadDetailsOrderByVendorTeamMember = order by xl.created_time desc

allDealDetailsOrderByTeamMember = order by xd.created_time desc


allTrackAssetsCountQuery = select distinct CAST(COUNT(DISTINCT CASE WHEN xd.id IS NOT NULL THEN xd.id \
WHEN xf.id IS NOT NULL THEN xf.id ELSE NULL END ) AS TEXT )  as "assets" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id \
left join xt_form xf on xf.id = xltc.quiz_id \
left join xt_partnership xp on xp.id= xltv.partnership_id \
where xlt.company_id=:vendorCompanyId and xp.vendor_company_id =:vendorCompanyId \
and xlt.type='TRACK' and xlt.is_published= true and xp.status={status} \

partnerJourneyAssetDetailsQuery = select distinct xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", \
xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", cast(cat.name as text) as \"folderName\", \
max(xdp.published_time)  as \"publishedOn\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by \
left join xt_category_module cm on cm.dam_id = xd.id \
left join xt_category cat on cat.id = cm.category_id  \
left join xt_user_profile xup1 on xup1.user_id=xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
where xd.company_id= :vendorCompanyId \
and xcp.company_id is not null \



partnerJourneyAssetDetailsQuery = select distinct on (xd.id) xcp.company_name as \"companyName\",xcp.company_id as \"companyId\", \
xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", cast(cat.name as text) as \"folderName\", \
max(xdp.published_time)  as \"publishedOn\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
left join xt_user_profile xup1 on xup1.user_id=xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by  \
left join xt_category_module cm on cm.dam_id = xd.id \
left join xt_category cat on cat.id = cm.category_id  \
where xd.company_id= :vendorCompanyId \
and xcp."company_name_status" ='active' \
{myPartnerFilter}{partnerFilter}{searchKey}{dateFilter} \
group by xd.id,1,2,3,4,5,6 \
union \
select distinct on (xd.id) xcp.company_name as \"companyName\",xcp.company_id as \"companyId\",  \
xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", cast(cat.name as text) as \"folderName\", \
max(xdp.published_time)  as \"publishedOn\" \
from xt_dam_partner xdp  \
join xt_dam xd on xdp.dam_id =xd.id  \
join xt_partnership p on p.id = xdp.partnership_id  \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id =xdp.id  \
left join xt_user_profile xup1 on xup1.user_id=dpgm.user_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by  \
left join xt_category_module cm on cm.dam_id =xd.id \
left join xt_category cat on cat.id = cm.category_id  \
where xd.company_id= :vendorCompanyId \
{myPartnerFilter}{partnerFilter}{searchKey}{dateFilter} \
group by xd.id,1,2,3,4,5,6 \
order by 7 desc \

partnerJourneyAssetDetailsSearchQuery = AND (CONCAT(a.\"firstName\", ' ', a.\"lastName\") ILIKE :searchKey OR a.\"emailId\" ILIKE :searchKey OR \
a.\"assetName\" ILIKE :searchKey OR a.\"assetType\" ILIKE :searchKey OR a.\"createdByName\" ILIKE :searchKey)

assetDetailsSearchQuery = AND (a.\"assetName\" ILIKE :searchKey OR a.\"companyName\" ILIKE :searchKey OR \
a.\"assetType\" ILIKE :searchKey OR a.\"createdByName\" ILIKE :searchKey )
  
assetDetailsDetailedQuery = select distinct xup1.firstname as \"firstName\", xup1.lastname as \"lastName\",xup1.email_id as \"emailId\" ,xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", cast(cat.name as text) as \"folderName\", \
max(xdp.published_time)  as \"publishedOn\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
left join xt_user_profile xup1 on xup1.user_id=xdpm.partner_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by \
left join xt_category_module cm on cm.dam_id = xd.id \
left join xt_category cat on cat.id = cm.category_id \
where xd.company_id= :vendorCompanyId \
and xup1.company_id= :partnerCompanyId \
{teamMemberFilter}{searchKey}{dateFilter} \
group by 1,2,3,4,5,6,7 \
union \
select distinct xup1.firstname as \"firstName\", xup1.lastname as \"lastName\",xup1.email_id as \"emailId\",xd.asset_name as \"assetName\", xd.asset_type as \"assetType\",  \
concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", cast(cat.name as text) as \"folderName\", \
max(xdp.published_time)  as \"publishedOn\" \
from xt_dam_partner xdp  \
join xt_dam xd on xdp.dam_id = xd.id \
join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id =xdp.id  \
left join xt_user_profile xup1 on xup1.user_id=dpgm.user_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by \
left join xt_category_module cm on cm.dam_id = xd.id \
left join xt_category cat on cat.id = cm.category_id \
where xd.company_id= :vendorCompanyId \
and xup1.company_id= :partnerCompanyId \
{teamMemberFilter}{searchKey}{dateFilter} \
group by 1,2,3,4,5,6,7 \
order by 8 desc 

assetDetailsViewAndDownloadedDetailedQuery = select a.* from (select distinct xup1.firstname as \"firstName\", \
xup1.lastname as \"lastName\",	xup1.email_id as \"emailId\" , xd.asset_name as \"assetName\", xd.id as \"assetId\", \
xd.asset_type as \"assetType\",xdp.dam_id as \"id\",xdpm.dam_partner_id as \"partnerId\",\
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\",max(xdp.published_time) as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
where xd.company_id = :vendorCompanyId \
and xup1.company_id = :partnerCompanyId \
{teamMemberFilter}{dateFilter} \
group by 1,2,3,4,5,6,7,8,9 union select \
distinct xup1.firstname as \"firstName\",xup1.lastname as \"lastName\",xup1.email_id as \"emailId\", \
xd.asset_name as \"assetName\", xd.id as \"assetId\", xd.asset_type as \"assetType\", \
xdp.dam_id as \"id\",dpgm.dam_partner_id as \"partnerId\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\",max(xdp.published_time) as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xdp.dam_id = xd.id \
left join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id = xdp.id \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
where xd.company_id = :vendorCompanyId \
and xup1.company_id = :partnerCompanyId \
{teamMemberFilter}{dateFilter} \
group by 1,2,3,4,5,6,7,8,9)a where 1 = 1 \


# XNFR-781
adminUserIdsByCompanyIdQuery  = select distinct u.user_id from xt_user_profile u, xt_user_role ur \
where u.user_id = ur.user_id and u.company_id  = :companyId and ur.role_id in (adminRoleIdsString)


dashboardButtonsToPartner = SELECT  xdb.id AS \"id\", xdb.title AS \"buttonTitle\",  xdb.link AS \"buttonLink\", \
                          xdb.timestamp AS \"createdTime\" FROM xt_dashboard_buttons xdb JOIN \
                         xt_dashboard_buttons_partner_group_mapping xdbgm ON xdb.id = xdbgm.dashboard_button_id JOIN \
                      xt_user_userlist xuul  ON xdbgm.user_user_list_id = xuul.id WHERE \
	               xuul.user_list_id = :userListId AND NOT EXISTS ( SELECT 1  FROM xt_dashboard_buttons_partner_group_mapping xdbgm2 \
				  JOIN xt_user_userlist xuul2 ON xdbgm2.user_user_list_id = xuul2.id WHERE \
				  xdbgm2.dashboard_button_id = xdb.id  replaceuserUserListId ) searchkey \
				GROUP BY xdb.id UNION SELECT xdb.id AS \"id\",xdb.title AS \"buttonTitle\", xdb.link AS \"buttonLink\", \
				xdb.timestamp AS \"createdTime\" FROM  xt_dashboard_buttons xdb \
				LEFT JOIN xt_dashboard_buttons_partner_group_mapping xdbpgm  ON xdbpgm.dashboard_button_id = xdb.id \
				LEFT JOIN  xt_dashboard_buttons_partner_company_mapping xdbpcm ON xdbpcm.dashboard_button_id = xdb.id \
				WHERE   xdb.vendor_company_id = :companyId searchkey GROUP BY xdb.id, xdb.title, xdb.timestamp \
				HAVING  COUNT(xdbpgm.id) + COUNT(xdbpcm.id) = 0 \
				ORDER BY  sortcolumn ,1 DESC
				
dashboardButtonsPartnerGroups = select distinct xdb.id as \"id\", xdb.title as \"buttonTitle\", \
			 		xdb.link as \"buttonLink\", xdb.timestamp as \"createdTime\" \
			 		from xt_dashboard_buttons xdb left join xt_dashboard_buttons_partner_group_mapping xdbp \
			 		on xdb.id = xdbp.dashboard_button_id left join xt_user_userlist xuul \
			 		on xdbp.user_user_list_id = xuul.id left join xt_dashboard_buttons_partner_company_mapping xdbpcm \
			 		on xdb.id = xdbpcm.dashboard_button_id left join xt_user_userlist xuul2 \
			 		on xuul2.user_list_id =:userListId left join xt_dashboard_buttons_partner_group_mapping xdbp2 \
			 		on xuul2.id = xdbp2.user_user_list_id \
			 		and xdbp2.dashboard_button_id = xdb.id \
			 		left join ( select xdbp4.dashboard_button_id from xt_user_userlist xuul4 \
			 		left join xt_dashboard_buttons_partner_group_mapping xdbp4  on xuul4.id = xdbp4.user_user_list_id \
			 		where xuul4.user_list_id =:userListId group by xdbp4.dashboard_button_id having \
			 		count(xdbp4.user_user_list_id) = (select count(*)  from xt_user_userlist  \
			 		where user_list_id =:userListId) ) a on a.dashboard_button_id = xdb.id where \
			 		xdb.vendor_company_id =:companyId and xdbpcm.dashboard_button_id is null and (xuul.user_list_id is null  or \
			 		xdbp2.dashboard_button_id is not null) \
			 		and a.dashboard_button_id is null searchkey  order by sortcolumn
			 		

allTrackAssetQueryForTeamMember =  select CAST(COUNT(DISTINCT CASE WHEN xd.id IS NOT NULL THEN xd.id \
WHEN xf.id IS NOT NULL THEN xf.id ELSE NULL END ) AS TEXT )  as \"assets\"  \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_user_profile xup1 on xup1.user_id=xltv.user_id  \
left join xt_form xf on xf.id = xltc.quiz_id \
where xup1.company_id= :partnerCompanyId \
and xlt.type='TRACK' and xlt.is_published= true \


allTrackAssetQueryForVendorTeamMember = select CAST(COUNT(DISTINCT CASE WHEN xd.id IS NOT NULL THEN xd.id  \
WHEN xf.id IS NOT NULL THEN xf.id ELSE NULL END ) AS TEXT )  as "assets" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_dam xd on xd.id = xltc.dam_id \
left join xt_form xf on xf.id = xltc.quiz_id \
left join xt_user_profile xup on xup.user_id=xd.created_by \
where xlt.company_id= :vendorCompanyId  \
and xlt.type='TRACK' and xlt.is_published= true \


allAssetDetailsQueryForTeamMember = select distinct xcp.company_name as "vendorCompany",xup.email_id as "vendorTeamMemberEmailId", \
xup1.email_id as "emailId",xd.asset_name as "assetName", xd.asset_type as "assetType", \
max(xdp.published_time)  as "publishedOn" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id=xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id=xdp.id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
left join xt_user_profile xup1 on xup1.user_id=xdpm.partner_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by \
left join xt_company_profile xcp on xcp.company_id= xup.company_id \
left join xt_category_module cm on cm.dam_id = xd.id  \
left join xt_category cat on cat.id = cm.category_id \
where xup1.company_id= :partnerCompanyId \
{teamMemberFilter}{vendorFilter}{vanityFilter}{dateFilter}{searchKey} \
group by 1,2,3,4,5 \
union \
select distinct xcp.company_name as "vendorCompany",xup.email_id as "vendorTeamMemberEmailId",xup1.email_id as "emailId", \
xd.asset_name as "assetName", xd.asset_type as "assetType",  \
max(xdp.published_time)  as "publishedOn" \
from xt_dam_partner xdp  \
join xt_dam xd on xdp.dam_id = xd.id \
join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id =xdp.id  \
left join xt_user_profile xup1 on xup1.user_id=dpgm.user_id \
left join  xt_user_profile xup on xup.user_id=xd.created_by \
left join xt_company_profile xcp on xcp.company_id= xup.company_id \
left join xt_category_module cm on cm.dam_id = xd.id \
left join xt_category cat on cat.id = cm.category_id \
where xup1.company_id= :partnerCompanyId \
{teamMemberFilter}{vendorFilter}{vanityFilter}{dateFilter}{searchKey} \
group by 1,2,3,4,5 \
order by 6 desc \

allAssetDetailsSearchQuery = and (xup.email_id ilike '%searchKey%'  or xd.asset_name ilike '%searchKey%' or xd.asset_type  ilike '%searchKey%'  \
or xcp.company_name ilike '%searchKey%' or xup1.email_id  ilike '%searchKey%'  ) \  

damStatusCountQuery = select cast(count(distinct case when d.approval_status = 'APPROVED' then id end) as integer) as "approvedCount", \
cast(count(distinct case when d.approval_status = 'REJECTED' then id end) as integer) as "rejectedCount", \
cast(count(distinct case when d.approval_status = 'CREATED' then id end) as integer) as "pendingCount", \
cast(count(distinct case when d.approval_status = 'DRAFT' then id end) as integer) as "draftCount", \
cast(count(distinct id) as integer) as "totalCount" from xt_dam d where d.company_id = :companyId \

orderByQuery = ORDER BY "createdTime" desc

allStatusListQuery = select  \
    cast(sum(a."approvedCount") as integer) as "approvedCount", \
    cast(sum(a."rejectedCount") as integer) as "rejectedCount", \
    cast(sum(a."pendingCount") as integer) as "pendingCount", \
    cast(sum(a."totalCount") as integer) as "totalCount", \
    cast(sum(a."draftCount") as integer) as "draftCount" \
from ( {allStatusListString} )a \

trackStatusCountQuery = select  cast(count(distinct case when xlt.approval_status = 'APPROVED' then id end) as integer) as "approvedCount", \
cast(count(distinct case when xlt.approval_status = 'REJECTED' then id end) as integer) as "rejectedCount", \
cast(count(distinct case when xlt.approval_status = 'CREATED' then id end) as integer) as "pendingCount", \
cast(null as int) as "draftCount", cast(count(distinct id) as integer) as "totalCount"  \
from xt_learning_track xlt where type='TRACK' \
and xlt.company_id = :companyId \

damApprovalListQuery = select distinct  d.id as "id", d.asset_name as "name", cast(d.asset_type as text) as "slug", \
CASE WHEN (xup.firstname IS NULL OR TRIM(xup.firstname) = '') AND (xup.lastname IS NULL OR TRIM(xup.lastname) = '') \
THEN xup.email_id ELSE TRIM(CONCAT(xup.firstname, ' ', xup.lastname)) END AS "createdBy", \
cast('Asset' as text) as "type",d.is_bee_template as "beeTemplate",d.video_id as "videoId" , \
cast(cat.name as text) as "folder", \
cast(d.approval_status as text) as "status",cast(d.created_by as int) as "createdById", xup.company_id as "createdByCompanyId", \
d.created_time AS "createdTime",d.alias as "alias",false as "published",\
cast(v.view_by as text) as "viewBy",cast(v.alias as text) as "videoAlias", \
cast(d.version as text) as "templateVersion",false as "hasVisibility", d.approval_reference_id as \"approvalReferenceId\", \
cast(null as text) AS \"expireDate\", d.asset_path as \"assetPath\", d.is_partner_signature_required as \"partnerSignatureRequired\", d.is_vendor_signature_required as \"vendorSignatureRequired\" \
from xt_dam d \
left join  xt_user_profile xup on xup.user_id=d.created_by \
left join xt_category_module cm on cm.dam_id = d.id  \
left join xt_category cat on cat.id = cm.category_id  \
lEFT JOIN  xt_video_files v on v.id =d.video_id  \
where d.company_id = :companyId \
{searchQueryString} \


trackApprovalListQuery = select distinct on(xlt.id)xlt.id as "id" , title as "name" , cast(slug as text) as "slug", \
case when (xup.firstname IS NULL OR TRIM(xup.firstname) = '') and (xup.lastname IS NULL OR TRIM(xup.lastname) = '') then xup.email_id \
else concat(xup.firstname, ' ' , xup.lastname, ' ' ,xup.middle_name) end as "createdBy", \
cast('Track' as text) as "type",false as "beeTemplate", cast(null as int) as "videoId", \
cast(cat.name as text) as "folder", \
cast(xlt.approval_status as text) "status",cast(xlt.created_by as int) "createdById",xup.company_id as "createdByCompanyId", \
xlt.created_time AS "createdTime",cast(null as text) as "alias",xlt.is_published as "published", \
cast(null as text) as "viewBy",cast(null as text) as "videoAlias", \
cast(null as text) as "templateVersion", CASE  WHEN EXISTS (SELECT 1 FROM xt_learning_track_visibility xltv WHERE \
xltv.learning_track_id = xlt.id ) THEN TRUE ELSE FALSE END AS "hasVisibility", cast(null as int) as \"approvalReferenceId\",  \
TO_CHAR(expire_date, 'MM/DD/YYYY HH12:MI AM') AS \"expireDate\", cast(null as text) AS \"assetPath\", cast(false as boolean) AS \"partnerSignatureRequired\", cast(false as boolean) AS \"vendorSignatureRequired\" \
from xt_learning_track xlt  \
left join xt_learning_track_visibility xltv  on xltv.learning_track_id=xlt.id  \
left join xt_user_profile xup on xup.user_id= xlt.created_by  \
left JOIN xt_category_module cm ON xlt.id = cm.learning_track_id \
left join xt_category cat on cat.id = cm.category_id \
where type='TRACK' \
and xlt.company_id = :companyId \
{searchQueryString} \ 


playBookApprovalListQuery = select distinct on(xlt.id)xlt.id as "id" , title as "name" , cast(slug as text) as "slug", \
case when (xup.firstname IS NULL OR TRIM(xup.firstname) = '') and (xup.lastname IS NULL OR TRIM(xup.lastname) = '') then xup.email_id \
else concat(xup.firstname, ' ' , xup.lastname, ' ' ,xup.middle_name) end as "createdBy", \
cast('PlayBook' as text) as "type",false as "beeTemplate", cast(null as int) as "videoId", \
cast(cat.name as text) as "folder", \
cast(xlt.approval_status as text) "status",cast(xlt.created_by as int) "createdById",xup.company_id as "createdByCompanyId", \
xlt.created_time AS "createdTime",cast(null as text) as "alias",xlt.is_published as "published", \
cast(null as text) as "viewBy",cast(null as text) as "videoAlias",  \
cast(null as text) as "templateVersion", CASE  WHEN EXISTS (SELECT 1 FROM xt_learning_track_visibility xltv WHERE \
xltv.learning_track_id = xlt.id ) THEN TRUE ELSE FALSE END AS "hasVisibility", cast(null as int) as \"approvalReferenceId\", \
TO_CHAR(expire_date, 'MM/DD/YYYY HH12:MI AM') AS \"expireDate\", cast(null as text) AS \"assetPath\", cast(false as boolean) AS \"partnerSignatureRequired\", cast(false as boolean) AS \"vendorSignatureRequired\" \
from xt_learning_track xlt  \
left join xt_learning_track_visibility xltv  on xltv.learning_track_id=xlt.id  \
left join xt_user_profile xup on xup.user_id= xlt.created_by  \
left JOIN xt_category_module cm ON xlt.id = cm.learning_track_id \
left join xt_category cat on cat.id = cm.category_id \
where type='PLAYBOOK' \
and xlt.company_id = :companyId \
{searchQueryString} \ 

playBookStatusCountQuery = select  cast(count(distinct case when xlt.approval_status = 'APPROVED' then id end) as integer) as "approvedCount", \
cast(count(distinct case when xlt.approval_status = 'REJECTED' then id end) as integer) as "rejectedCount", \
cast(count(distinct case when xlt.approval_status = 'CREATED' then id end) as integer) as "pendingCount", \
cast(null as int) as "draftCount", cast(count(distinct id) as integer) as "totalCount"  \
from xt_learning_track xlt where type='PLAYBOOK' \
and xlt.company_id = :companyId \

createdOnOrderByQuery = ORDER BY a."createdTime"   \

nameColumnOrderByQuery = ORDER BY a."name"   \

allApprovalListQuery = select  * \
from ( {allApprovalListString} )as a \

#XNFR-821
sql.query.update.approval.company.settings = update xt_company_profile set is_approval_required_for_assets = :assetApprovalEnabledForCompany, \
is_approval_required_for_tracks = :tracksApprovalEnabledForCompany, is_approval_required_for_playbooks = :playbooksApprovalEnabledForCompany \
where company_id = :companyId

sql.query.update.approval.team.member.settings = update xt_team_member set is_asset_approver = :assetApprover, \
is_track_approver = :trackApprover, is_playbook_approver = :playbookApprover \
where team_member_id in (:teamMemberIds) and company_id = :companyId

sql.query.list.team.member.approval.control.management = select xup.user_id as \"id\", CONCAT(xup.firstname, ' ',xup.lastname) as \"firstName\", xup.email_id as \"emailId\", \
			case when xtm.is_second_admin then 'second_admin' when xtm.is_second_admin = 'false' then 'team_member' else 'admin' end as \"role\", case \
			when xtm.is_second_admin is null then true else xtm.is_asset_approver \
			end as \"assetApprover\", case when xtm.is_second_admin is null then true \
			else xtm.is_track_approver end as \"trackApprover\", case when xtm.is_second_admin is null then true \
			else xtm.is_playbook_approver end as \"playbookApprover\", \
			case when exists(select 1 from xt_user_role xur where xur.user_id = xup.user_id and xur.role_id = 22) \
			then true else false end as \"hasDamRole\", case when exists(select 1 from xt_user_role xur where xur.user_id = xup.user_id and xur.role_id = 23) \
			then true else false end as \"hasTrackRole\", case when exists(select 1 from xt_user_role xur where xur.user_id = xup.user_id and xur.role_id = 24) \
			then true else false end as \"hasPlaybookRole\", CASE WHEN (CASE WHEN xtm.is_second_admin IS NULL THEN true ELSE xtm.is_asset_approver END) OR \
			(CASE WHEN xtm.is_second_admin IS NULL THEN true ELSE xtm.is_track_approver END) OR \
			(CASE WHEN xtm.is_second_admin IS NULL THEN true ELSE xtm.is_playbook_approver END) \
			THEN TRUE ELSE FALSE END AS \"anyApprover\", CASE WHEN EXISTS (SELECT 1 FROM xt_user_role xur WHERE xur.user_id = xup.user_id AND xur.role_id in (2, 13, 18, 20, 9, 12)) \
			THEN true ELSE false END AS \"anyAdminOrSupervisor\" from xt_user_profile xup left join \
			xt_team_member xtm on xup.user_id = xtm.team_member_id \
			where xup.company_id = :companyId AND ((xtm.is_second_admin IS NULL AND xup.status = 'APPROVE') OR (xtm.is_second_admin IS NOT NULL AND xtm.status = 'APPROVE')) ${approvalManagementSearchQuery}

sql.search.query.list.team.member.approval.control.management = and (LOWER(xup.email_id) like LOWER('%${searchKey}%') OR LOWER(xup.firstname) like LOWER('%${searchKey}%') OR LOWER(xup.lastname) like LOWER('%${searchKey}%') \
			OR REPLACE(LOWER(xup.firstname || xup.lastname), ' ', '') like REPLACE(LOWER('%${searchKey}%'), ' ', '') OR REPLACE(LOWER(xup.lastname || xup.firstname), ' ', '') like REPLACE(LOWER('%${searchKey}%'), ' ', ''))  



sql.shared.asset.details.query = SELECT CAST(cat.name AS TEXT)  AS \"categoryName\",CASE  WHEN (TRIM(u.firstname) IS NULL OR TRIM(u.firstname) = '') \
AND (TRIM(u.lastname) IS NULL OR TRIM(u.lastname) = '') THEN u.email_id  ELSE \
COALESCE(TRIM(u.firstname), '') || ' ' || COALESCE(TRIM(u.lastname), '') END AS \"displayName\", \
c.company_name AS \"vendorCompanyName\",u2.profile_image AS \"loggedInUserProfileImage\" ,\
CASE  WHEN dp.shared_asset_path IS NOT NULL AND d.asset_path IS NOT NULL THEN dp.shared_asset_path \
WHEN dp.shared_asset_path IS NOT NULL THEN dp.shared_asset_path ELSE d.asset_path \
END AS \"sharedAssetPath\", \
d.asset_name as \"assetName\",dp.published_time as \"publishedTime\" ,d.asset_type as \"assetType\" FROM \
xt_dam d LEFT JOIN xt_dam_partner dp ON dp.dam_id = d.id LEFT JOIN xt_partnership p \
ON p.id = dp.partnership_id LEFT JOIN xt_user_profile u ON u.user_id = dp.published_by LEFT JOIN \
xt_user_profile u2 ON u2.user_id = :loggedInUserId LEFT JOIN xt_company_profile c \
ON c.company_id =p.vendor_company_id LEFT JOIN xt_category_module cm ON cm.dam_id = d.id LEFT JOIN xt_category cat \
ON cat.id = cm.category_id WHERE dp.id = :damId LIMIT 1; 


sql.oliver.chat.history.partner.query = SELECT thread_id  AS \"threadId\",vector_store_id  AS \"vectorStoreId\", id as \"chatHistoryId\", is_global_search_done as \"isGlobalSearchDone\" \
FROM xt_oliver_chat_history och where och.partner_dam_id = :id and och.user_id = :loggedInUserId \


sql.oliver.chat.history.vendor.query = SELECT thread_id  AS \"threadId\",vector_store_id  AS \"vectorStoreId\", id as \"chatHistoryId\", is_global_search_done as \"isGlobalSearchDone\" \
FROM xt_oliver_chat_history och where och.vendor_dam_id = :id and och.user_id = :loggedInUserId \

sql.oliver.chat.history.folder.query = SELECT id as \"chatHistoryId\", thread_id  AS \"threadId\",vector_store_id  AS \"vectorStoreId\", is_global_search_done as \"isGlobalSearchDone\" \
FROM xt_oliver_chat_history och where och.category_id = :id and och.user_id = :loggedInUserId \

sql.oliver.chat.history.call.query = SELECT id as \"chatHistoryId\", thread_id  AS \"threadId\",vector_store_id  AS \"vectorStoreId\", is_global_search_done as \"isGlobalSearchDone\" \
FROM xt_oliver_chat_history och where och.call_id = :id and och.user_id = :loggedInUserId and och.contact_id = :contactId and och.userlist_id = :userListId \

sql.folder.asset.details.query = SELECT distinct CAST(cat.name AS TEXT)  AS \"name\", cat.created_time as \"createdTime\", xcp.company_name as \"companyName\", \
CASE  WHEN dp.shared_asset_path IS NOT NULL AND d.asset_path IS NOT NULL THEN dp.shared_asset_path \
WHEN dp.shared_asset_path IS NOT NULL THEN dp.shared_asset_path ELSE d.asset_path END AS \"assetPath\", \
CASE  WHEN (TRIM(xup.firstname) IS NULL OR TRIM(xup.firstname) = '') \
AND (TRIM(xup.lastname) IS NULL OR TRIM(xup.lastname) = '') THEN xup.email_id  ELSE \
COALESCE(TRIM(xup.firstname), '') || ' ' || COALESCE(TRIM(xup.lastname), '') END AS \"createdBy\", \
CAST(COUNT(*) OVER () AS int) AS "count",d.asset_name as "assetName", d.id as \"id\" \
from xt_dam_partner dp \
left join xt_dam d on d.id = dp.dam_id  \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = dp.id  \
left join xt_partnership xp on xp.id = dp.partnership_id and d.company_id = xp.vendor_company_id  \
left join xt_category_module cm on cm.dam_id = d.id  \
left join xt_category cat on cat.id = cm.category_id  \
left join xt_user_profile xup on xup.user_id= cat.created_user_id \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id  \
where xp.partner_id= :userId \
and  cm.category_id= :categoryId \


sql.folder.details.query = select  d.id, CAST(cat.name AS TEXT)  AS "name",cat.created_time as "createdTime", \
xcp.company_name as "companyName", d.asset_path AS "assetPath",CASE  WHEN (TRIM(xup.firstname) IS NULL OR TRIM(xup.firstname) = '')  \
AND (TRIM(xup.lastname) IS NULL OR TRIM(xup.lastname) = '') THEN xup.email_id  ELSE \
COALESCE(TRIM(xup.firstname), '') || ' ' || COALESCE(TRIM(xup.lastname), '') END AS "createdBy", \
CAST(COUNT(*) OVER () AS int) AS "count",d.asset_name as "assetName",d.video_id as "videoId" \
from xt_dam d \
left join xt_user_profile xup on xup.user_id = d.created_by \
left join xt_category_module cm on cm.dam_id = d.id \
left join xt_company_profile xcp on xcp.company_id = xup.company_id \
left join xt_category cat on cat.id = cm.category_id \
where d.company_id= :companyId \
and  cm.category_id= :categoryId and d.disable_access_for_oliver = false \

manageCampaignWithAnalyticsQuery = with a as \
(SELECT DISTINCT xc.is_archived as \"archived\", xc.campaign_id AS \"campaignId\",  \
xc.to_partner as \"toPartner\", xc.end_time as \"endDate\", xc.updated_time as \"updatedDateTime\", \
xc.end_time as \"endTimeDate\", xc.is_nurture_campaign as \"nurtureCampaign\", \
    (CASE  WHEN xc.is_nurture_campaign = true THEN xc.campaign_name \
        ELSE xc.campaign_name  \
    END) AS \"Campaign_name\",     \
    xc.campaign_schedule_type AS \"Campaign Schedule Type\",     \
    xc.one_click_launch AS \"One click\",     \
    xc.is_email_notification as \"emailNotification\", \
    xc.launch_time_in_utc_string as \"launchTimeInUtcString\", \
    xc.is_public AS \"is_public\",    \
    xc.end_date as \"endDateTime\", \
	CASE  WHEN (TRIM(xup.firstname) IS NULL OR TRIM(xup.firstname) = '') \
	AND (TRIM(xup.lastname) IS NULL OR TRIM(xup.lastname) = '') THEN xup.email_id  ELSE  \
	COALESCE(TRIM(xup.firstname), '') || ' ' || COALESCE(TRIM(xup.lastname), '') END   AS "By",  \
    xma.name AS \"Folder\", \
    xvc.company_name AS \"Originated By\", \
    xc.created_time AS \"Created On\", \
    xc.launch_time AS \"Launched On\", \
    xc.is_archived as \"Archived\", \
    CAST(xc.campaign_type AS TEXT) AS \"Campaign Type\", \
    xc.campaign_email_notifications_status, xc.is_channel_campaign, xc.is_launched as \"Is Launched\", \
xc.is_regular_email as \"IsRegularEmail\", xc.is_detailed_analytics_shared as \"IsDetailedAnalyticsShared\", \
xc.start_time as \"Start Time\", xc.customer_id as \"Customer Id\", xc.is_data_share as \"IsDataShare\", \
xc.parent_campaign_id as \"ParentCampaignId\", xc.archived_time as \"ArchivedTime\", \
xc.gdpr_status as \"GdprStatus\", xc.enable_co_branding_logo as \"enableCobrandingLogo\", \
xc.vendor_organization_id as \"VendorOrganizationId\", xc.time_zone as \"Timezone\", xc.updated_time  as \"Updated Time\", \
xc.description as \"Description\", xc.is_white_labeled as \"IsWhiteLabeled\",     \
xc.campaign_user_list_status as \"campaignUserListStatus\", xc.campaign_partner_status as \"campaignPartnerStatus\", \
xet.start_time as \"eventStartDateTime\", xet.end_time as \"eventEndDateTime\", \
case when xc.campaign_type != 'EVENT' then false else xet.is_all_day end as \"allDay\", xc.created_for_company as \"createdForCompanyId\" \
FROM xt_user_profile xup \
JOIN xt_campaign xc  ON xc.customer_id = xup.user_id CREATED_FOR_COMPANY_CONDITION_FOR_VENDOR \
LEFT JOIN xt_company_profile xvc ON VENDOR_COMPANY_CONDITION  \
LEFT JOIN xt_category_module xcmm  ON xcmm.campaign_id = xc.campaign_id  \
LEFT JOIN xt_category xca  ON xma.id = xcmm.category_id \
left join xt_campaign_event_time xet on xc.campaign_id = xet.campaign_id \
LEFT JOIN xt_campaign_event_cancellation xec ON xec.id = xc.campaign_id  WHERE_AND_ORDER_BY_STRING ), \
c as  \
(SELECT  \
    DISTINCT xc.campaign_id AS id, \
    xcp.company_name AS \"From\", \
    COUNT(DISTINCT xcuu.user_id) AS \"Total Recipients\", \
    COUNT(DISTINCT ceh.user_id) AS \"Total Emails Sent\", \
    COUNT(DISTINCT CASE WHEN xup1.is_email_valid = false THEN xcuu.user_id ELSE NULL END) AS \"Soft Bounce\", \
    COUNT(DISTINCT xuu.id) AS \"Unsubscribed\" \
FROM  \
    xt_user_profile xup \
JOIN xt_campaign xc  \
    ON xc.customer_id = xup.user_id CREATED_FOR_COMPANY_CONDITION_FOR_VENDOR \
JOIN xt_company_profile xcp  \
    ON xup.company_id = xcp.company_id \
LEFT JOIN xt_campaign_user_userlist xcuu  \
    ON xcuu.campaign_id = xc.campaign_id and xc.is_launched = true \
LEFT JOIN xt_user_profile xup1  \
    ON xcuu.user_id = xup1.user_id \
LEFT JOIN xt_campaign_emails_history ceh  \
    ON ceh.campaign_id = xc.campaign_id AND ceh.user_id = xcuu.user_id \
LEFT JOIN xt_unsubscribed_user xuu  \
    ON xuu.customer_company_id = xcp.company_id AND xcuu.user_id = xuu.user_id \
LEFT JOIN xt_user_list xul  \
    ON xul.user_list_id = xcuu.user_list_id \
LEFT JOIN xt_user_role xur  \
    ON xur.user_id = xup.user_id \
GROUP BY 1,2) \
  select distinct a.\"archived\" as \"archived\", a.\"toPartner\" as \"toPartner\", cast(a.\"endDate\" as varchar) as \"endDate\", a.\"updatedDateTime\" as \"updatedDateTime\", a.\"endDateTime\" as \"endDateTime\", a.\"campaignId\" as \"campaignId\",a.\"Campaign_name\" as \"campaignName\", cast(a.\"Campaign Schedule Type\" as varchar) as \"scheduleType\", a.\"nurtureCampaign\" as \"nurtureCampaign\",  \
a.\"One click\" as \"oneClickLaunch\", a.\"emailNotification\" as \"emailNotification\", a.\"launchTimeInUtcString\" as \"launchTimeInUtcString\", a.\"is_public\" as \"publicEventCampaign\",  \
cast(a.\"By\" as varchar) as \"createdBy\", cast(a.\"Folder\" as varchar) as \"categoryName\",a.\"Originated By\" as \"vendorOrganizationName\", a.\"Created On\" as \"createdDateTime\",  \
a.\"Launched On\" as \"launchTime\", cast(a.campaign_email_notifications_status as varchar) as \"campaignEmailNotificationStatusInString\", a.is_channel_campaign as \"channelCampaign\",  \
a.\"Is Launched\" as \"launched\",a.\"IsRegularEmail\" as \"regularEmail\",a.\"IsDetailedAnalyticsShared\" as \"detailedAnalyticsShared\", a.\"Start Time\" as \"startDateTime\",a.\"Customer Id\" as \"userId\", \
a.\"IsDataShare\" as \"dataShare\",a.\"ParentCampaignId\" as \"parentCampaignId\", a.\"ArchivedTime\"  as \"archivedDateTime\", a.\"GdprStatus\" as \"gdprStatus\", a.\"enableCobrandingLogo\" as \"enableCoBrandingLogo\", \
a.\"VendorOrganizationId\" as \"vendorOrganizationId\",a.\"Timezone\" as \"timeZoneId\", cast(a.\"Description\" as varchar) as \"description\",a.\"IsWhiteLabeled\" as \"whiteLabeled\", \
a.\"Campaign Type\" as \"campaignTypeInString\", cast(a.\"campaignUserListStatus\" as varchar) as \"campaignUserListStatus\", cast(a.\"campaignPartnerStatus\" as varchar) as \"campaignPartnerStatus\", \
case when a.\"Campaign Type\"= 'EVENT'  and a.\"eventStartDateTime\" is not null then a.\"eventStartDateTime\" \
when a.\"Campaign Type\"= 'EVENT'  and a.\"eventStartDateTime\" is null then null \
when a.\"Campaign Type\" != 'EVENT' then null end as \"eventStartDateTime\", \
case when a.\"Campaign Type\"= 'EVENT' and a.\"eventEndDateTime\" is not null then a.\"eventEndDateTime\" \
when a.\"Campaign Type\"= 'EVENT'  and a.\"eventEndDateTime\" is null then null \
when a.\"Campaign Type\" != 'EVENT' then null end as \"eventEndDateTime\", \
c.\"From\" as \"companyName\", \
cast(c.\"Total Recipients\" as varchar) as \"totalRecipients\", cast(c.\"Total Emails Sent\" as varchar) as \"totalEmailsSent\",  cast(c.\"Unsubscribed\" as varchar) as \"unsubscribed\", cast(c.\"Soft Bounce\" as varchar) as \"softBounce\", a.\"allDay\", a.\"createdForCompanyId\" as \"createdForCompanyId\" \
from a  join  \
c on a.\"campaignId\"= c.id 


sql.folder.assets.query = select  d.id, CAST(cat.name AS TEXT)  AS "name",cat.created_time as "createdTime", \
xcp.company_name as "companyName", d.asset_path AS "assetPath",CASE  WHEN (TRIM(xup.firstname) IS NULL OR TRIM(xup.firstname) = '')  \
AND (TRIM(xup.lastname) IS NULL OR TRIM(xup.lastname) = '') THEN xup.email_id  ELSE \
COALESCE(TRIM(xup.firstname), '') || ' ' || COALESCE(TRIM(xup.lastname), '') END AS "createdBy", \
CAST(COUNT(*) OVER () AS int) AS "count",d.asset_name as "assetName",d.open_ai_file_id as "openAiFileId",d.id as "assetId" \
from xt_dam d \
left join xt_user_profile xup on xup.user_id = d.created_by \
left join xt_category_module cm on cm.dam_id = d.id \
left join xt_company_profile xcp on xcp.company_id = xup.company_id \
left join xt_category cat on cat.id = cm.category_id \
where d.company_id= :id \
and  cm.category_id  in ( :categoryIds ) and d.disable_access_for_oliver = false \


sql.folder.assets.partner.query = SELECT distinct CAST(cat.name AS TEXT)  AS \"name\",cat.created_time as \"createdTime\", xcp.company_name as \"companyName\", \
CASE  WHEN dp.shared_asset_path IS NOT NULL AND d.asset_path IS NOT NULL THEN dp.shared_asset_path \
WHEN dp.shared_asset_path IS NOT NULL THEN dp.shared_asset_path ELSE d.asset_path END AS \"assetPath\",d.open_ai_file_id as \"openAiFileId\",d.id as \"damId\", \
CAST(COUNT(*) OVER () AS int) AS "count",d.asset_name as "assetName" \
from xt_dam_partner dp \
left join xt_dam d on d.id = dp.dam_id  \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = dp.id  \
left join xt_partnership xp on xp.id = dp.partnership_id and d.company_id = xp.vendor_company_id  \
left join xt_category_module cm on cm.dam_id = d.id  \
left join xt_category cat on cat.id = cm.category_id  \
left join xt_user_profile xup on xup.user_id= cat.created_user_id \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id  \
where xp.partner_id= :id \
and  cm.category_id in ( :categoryIds ) and d.disable_access_for_oliver = false \

all.partners.contacts.upload.management.query = SELECT DISTINCT xcp.company_id AS \"companyId\", xcp.company_name AS \"companyName\", \
xup.email_id AS \"emailId\", xup.firstname AS \"firstName\", xup.lastname AS \"lastName\", \
CAST(p.contacts_limit AS int) AS \"contactUploadLimit\", CAST(COUNT(DISTINCT xuul.user_id) AS int) AS \"contactsUploadedCount\", \
CAST(CASE WHEN COUNT(DISTINCT xuul.user_id) > p.contacts_limit THEN COUNT(DISTINCT xuul.user_id) - p.contacts_limit ELSE 0 END AS int) AS \"exceededContactUploadLimit\", \
CAST(CASE WHEN COUNT(DISTINCT xuul.user_id) < p.contacts_limit THEN p.contacts_limit - COUNT(DISTINCT xuul.user_id) ELSE 0 END AS int) AS \"unusedContactUploadLimit\" \
FROM xt_partnership p \
LEFT JOIN xt_user_profile xup ON p.partner_id = xup.user_id \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id \
LEFT JOIN xt_user_list xul ON xup.company_id = xul.company_id \
LEFT JOIN xt_user_userlist xuul ON xuul.user_list_id = xul.user_list_id and xul.module_name = 'CONTACTS' \
INNER JOIN xt_module_custom xmc on xmc.partnership_id = p.id \
and xmc.module_id = 3 and xmc.can_partner_access_module = true \
WHERE p.vendor_company_id = :companyId ${allPartnersContactsSearchReplaceKey} \
GROUP BY xcp.company_id, xcp.company_name, xup.email_id, xup.firstname, xup.lastname, p.contacts_limit

all.partners.contacts.upload.management.search.query = AND (LOWER(xup.email_id) LIKE LOWER('%${searchKey}%') OR \
LOWER(xcp.company_name) LIKE LOWER('%${searchKey}%') OR \
LOWER(xup.firstname) LIKE LOWER('%${searchKey}%') OR \
LOWER(xup.lastname) LIKE LOWER('%${searchKey}%') OR \
REPLACE(LOWER(xup.firstname || xup.lastname), ' ', '') LIKE REPLACE(LOWER('%${searchKey}%'), ' ', '') OR \
REPLACE(LOWER(xup.lastname || xup.firstname), ' ', '') LIKE REPLACE(LOWER('%${searchKey}%'), ' ', '')) 

contact.count.uploaded.by.all.partners.query = select cast(sum(a."Contacts") as int) from \
(select distinct xcp.company_id, count(distinct xuul.user_id) as "Contacts" from xt_partnership p \
left join  xt_user_profile xup  on p.partner_id= xup.user_id \
left join xt_company_profile xcp on xcp.company_id= xup.company_id \
left join xt_user_list xul on xup.company_id= xul.company_id \
left join xt_user_userlist xuul on xuul.user_list_id=xul.user_list_id and xul.module_name = 'CONTACTS' \
INNER JOIN xt_module_custom xmc on xmc.partnership_id = p.id \
and xmc.module_id = 3 and xmc.can_partner_access_module = true \
where p.vendor_company_id= :companyId group by 1) a 

total.contacts.subscription.used.by.company = SELECT CAST(SUM(a."Contacts") as int) FROM ( \
SELECT xcp.company_id, COUNT(DISTINCT xuul.user_id) AS "Contacts" \
FROM xt_partnership p \
LEFT JOIN xt_user_profile xup ON p.partner_id = xup.user_id \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id \
LEFT JOIN xt_user_list xul ON xup.company_id = xul.company_id \
LEFT JOIN xt_user_userlist xuul ON xuul.user_list_id = xul.user_list_id AND xul.module_name = 'CONTACTS' \
INNER JOIN xt_module_custom xmc on xmc.partnership_id = p.id \
and xmc.module_id = 3 and xmc.can_partner_access_module = true \
WHERE p.vendor_company_id = :companyId \
GROUP BY xcp.company_id \
UNION \
SELECT xul.company_id, COUNT(DISTINCT xuul.user_id) AS "Contacts" \
FROM xt_user_profile xup \
LEFT JOIN xt_user_role xur ON xur.user_id = xup.user_id \
LEFT JOIN xt_user_list xul ON xup.user_id = xul.customer_id \
LEFT JOIN xt_user_userlist xuul ON xuul.user_list_id = xul.user_list_id \
WHERE xul.module_name = 'CONTACTS' \
AND xul.company_id = :companyId \
AND (xur.role_id = 2 OR xur.role_id = 18) \
GROUP BY xul.company_id \
) a

completedPlaybookUsersQueryForCompanies = select distinct ${workflow.xup.projections} \
from xt_user_profile xup \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xup.user_id in (:userIds) \
and xcp.company_name is not null \
and xlt.type='PLAYBOOK'and xlt.is_published = true and xltv.progress=100 \
and xlt.published_time  >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

notCompletedPlaybookUsersQueryForCompanies = select distinct ${workflow.xup.projections} \
from xt_user_profile xup \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xup.user_id in (:userIds) \
and xcp.company_name is not null \
and xlt.type='PLAYBOOK'and xlt.is_published = true and coalesce(xltv.progress,0)<100 \
and xlt.published_time  >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

viewedPlaybookUsersQueryForCompanies = select distinct ${workflow.xup.projections} \
from xt_user_profile xup \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xup.user_id in (:userIds) \
and xlt.type='PLAYBOOK' and xlt.is_published= true \
and xcp.company_name is not null \
and xlt.published_time >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 


notViewedPlaybookUsersQueryForCompanies = select distinct ${workflow.xup.projections} \
from xt_user_profile xup \
left join xt_partnership p on p.partner_id=xup.user_id \
left join xt_company_profile xcp on xcp.company_id=xup.company_id \
left join xt_learning_track_visibility xltv on xltv.partnership_id = p.id \
left join xt_learning_track xlt on xltv.learning_track_id=xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id=xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id=xltv.id \
and xltcp.learning_track_content_id =xltc.id \
where xup.user_id in (:userIds) \
and xlt.type='PLAYBOOK' and xlt.is_published= true \
and xcp.company_name is not null \
and xlt.published_time >= :minTimePhrase \
and xlt.published_time < :maxTimePhrase 

playbookIdCondition = and xlt.id = :playbookId

allPartnersDetailsListQuery=SELECT a.* FROM \
( with engaged_company as ( SELECT DISTINCT xup.company_id as partner_company_id FROM xt_lead l \
LEFT JOIN xt_user_profile xup ON l.created_by = xup.user_id WHERE l.created_for_company_id = :companyId \
AND l.created_for_company_id != l.created_by_company_id AND xup.company_id IS NOT NULL \
UNION \
SELECT DISTINCT xup.company_id FROM xt_deal d \
LEFT JOIN xt_user_profile xup ON d.created_by = xup.user_id \
WHERE d.created_for_company_id = :companyId AND d.created_for_company_id != d.created_by_company_id \
AND xup.company_id IS NOT NULL UNION SELECT DISTINCT p.partner_company_id FROM xt_learning_track_visibility xltv \
LEFT JOIN xt_learning_track xlt ON xltv.learning_track_id = xlt.id \
LEFT JOIN xt_partnership p ON p.vendor_company_id = xlt.company_id AND xltv.partnership_id = p.id \
WHERE p.vendor_company_id = :companyId AND p.partner_company_id IS NOT NULL AND xlt.type in ('TRACK', 'PLAYBOOK') \
AND xlt.is_published = TRUE AND xltv.progress > 0 UNION SELECT DISTINCT xp.partner_company_id \
FROM xt_dam_partner xdp LEFT JOIN xt_dam xd ON xd.id = xdp.dam_id \
LEFT JOIN xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_mapping_fk_id = xdpm.id \
LEFT JOIN xt_partnership xp ON xp.id = xdp.partnership_id AND xd.company_id = xp.vendor_company_id \
WHERE xp.vendor_company_id = :companyId AND xp.partner_company_id IS NOT NULL AND xda.action_type = 'VIEW' \
UNION SELECT DISTINCT p.partner_company_id FROM xt_dam_partner dp JOIN xt_dam d ON dp.dam_id = d.id \
JOIN xt_partnership p ON p.id = dp.partnership_id AND d.company_id = p.vendor_company_id \
JOIN xt_company_profile c ON p.partner_company_id = c.company_id \
JOIN xt_dam_partner_group_mapping dpgm ON dp.id = dpgm.dam_partner_id \
LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = dp.id \
WHERE p.vendor_company_id = :companyId AND xda.action_type = 'VIEW' \
UNION \
SELECT DISTINCT xup.company_id FROM xt_campaign c \
LEFT JOIN xt_campaign p ON c.campaign_id = p.parent_campaign_id \
LEFT JOIN xt_user_profile up ON up.user_id = c.customer_id \
LEFT JOIN xt_user_profile xup ON xup.user_id = p.customer_id \
WHERE up.company_id = :companyId AND p.vendor_organization_id = :companyId \
AND p.is_launched = TRUE AND p.is_nurture_campaign = TRUE AND p.campaign_id IS NOT NULL \
AND xup.company_id IS NOT NULL), base as (select distinct xcp.company_name as \"companyName\", \
xup.email_id as \"emailId\", cast(xup.password as text) as \"password\", xup.company_id as \"companyId\", \
xp.created_time as \"onboardedOn\", xup.user_id as \"partnerId\", xup.firstname as \"firstName\", \
xup.lastname as \"lastName\", cast(xup.datelastlogin as timestamp) as \"dateLastLogin\", \
CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = '' THEN 'No Region' \
ELSE INITCAP(LOWER(TRIM(xuul.region))) END as \"region\", xma.vanity_url_domain as \"vanityUrlDomain\", \
xp.partner_company_id, xcp.company_name_status, xp.status as \"partnershipStatus\", xup.status as \"userStatus\", \
xup.company_id as \"userCompanyId\", un.id as \"unsubscribed\" from xt_partnership xp \
left join xt_user_list xul on xul.company_id = xp.vendor_company_id \
left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id and xp.partner_id = xuul.user_id \
left join xt_user_profile xup on xuul.user_id = xup.user_id \
left join xt_company_profile xcp on xcp.company_id = xup.company_id \
left join xt_module_access xma on xma.company_id = xul.company_id \
left join xt_unsubscribed_user un ON xuul.user_id = un.user_id AND un.customer_company_id = xp.vendor_company_id \
where xul.company_id = :companyId and xp.status in('approved', 'deactivated') and xul.is_default_partnerlist = true) select distinct \"companyName\", \"emailId\", \"password\", \"onboardedOn\", \"partnerId\", \"firstName\", \"lastName\", \"dateLastLogin\", \"region\", \
CASE WHEN ((company_name_status = 'inactive' AND \"userStatus\" = 'APPROVE') OR (\"userCompanyId\" IS NULL AND \"userStatus\" = 'APPROVE') \
OR (\"userStatus\" = 'UnApproved' AND \"partnershipStatus\" = 'approved') ) \
THEN \"vanityUrlDomain\" ELSE 'false' END AS \"vanityUrlDomain\", \
case when (company_name_status = 'inactive' or \"userCompanyId\" is null ) \
and \"userStatus\" = 'APPROVE' and \"partnershipStatus\" = 'approved' then 'IncompleteCompanyProfile' \
when \"partnershipStatus\" = 'deactivated' then 'Deactivated' when \"userStatus\" = 'UnApproved' and \"partnershipStatus\" = 'approved' then 'Pending Signup' \
when \"partnershipStatus\" = 'approved' and company_name_status = 'active' and a.partner_company_id is not null then 'Active' \
when \"partnershipStatus\" = 'approved' and company_name_status = 'active' and a.partner_company_id is null then 'Dormant' end as \"status\" , \
case when b.\"unsubscribed\" is null and \"partnershipStatus\" = 'approved' or \"partnershipStatus\" = 'deactivated' then 'False' when \"unsubscribed\" is not null and \"partnershipStatus\" = 'approved' or \"partnershipStatus\" = 'deactivated' \
then 'True' end as \"unsubscribed\" from engaged_company a right join base b on b.partner_company_id = a.partner_company_id) a where 1=1 \

#allPartnersDetailsListQuery=SELECT a.* FROM ( WITH engaged_company AS ( SELECT DISTINCT xup.company_id AS partner_company_id FROM xt_lead l LEFT JOIN xt_user_profile xup ON l.created_by = xup.user_id \
#WHERE l.created_for_company_id = :companyId AND l.created_for_company_id != l.created_by_company_id AND xup.company_id IS NOT NULL \
#UNION \
#SELECT DISTINCT xup.company_id FROM xt_deal d LEFT JOIN xt_user_profile xup ON d.created_by = xup.user_id \
#WHERE d.created_for_company_id = :companyId AND d.created_for_company_id != d.created_by_company_id AND xup.company_id IS NOT NULL \
#UNION \
#SELECT DISTINCT p.partner_company_id FROM xt_learning_track_visibility xltv JOIN xt_learning_track xlt ON xltv.learning_track_id = xlt.id JOIN xt_partnership p ON p.vendor_company_id = xlt.company_id AND xltv.partnership_id = p.id \
#WHERE p.vendor_company_id = :companyId AND p.partner_company_id IS NOT NULL AND xlt.type IN (\'TRACK\', \'PLAYBOOK\') AND xlt.is_published = TRUE AND xltv.progress > 0 \
#UNION \
#SELECT DISTINCT xp.partner_company_id FROM xt_dam_partner xdp JOIN xt_dam xd ON xd.id = xdp.dam_id JOIN xt_partnership xp ON xp.id = xdp.partnership_id AND xd.company_id = xp.vendor_company_id JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = xdp.id \
#WHERE xp.vendor_company_id = :companyId AND xp.partner_company_id IS NOT NULL AND xda.action_type = \'VIEW\' UNION SELECT DISTINCT p.partner_company_id FROM xt_dam_partner dp JOIN xt_dam d ON dp.dam_id = d.id JOIN xt_partnership p ON p.id = dp.partnership_id AND d.company_id = p.vendor_company_id JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = dp.id \
#WHERE p.vendor_company_id = :companyId AND xda.action_type = \'VIEW\' UNION SELECT DISTINCT xup.company_id FROM xt_campaign c JOIN xt_campaign p ON c.campaign_id = p.parent_campaign_id JOIN xt_user_profile up ON up.user_id = c.customer_id JOIN xt_user_profile xup ON xup.user_id = p.customer_id WHERE up.company_id = :companyId AND p.vendor_organization_id = :companyId AND p.is_launched = TRUE AND p.is_nurture_campaign = TRUE AND p.campaign_id IS NOT NULL AND xup.company_id IS NOT NULL ),\
#base AS ( SELECT DISTINCT xcp.company_name AS \"companyName\", xup.email_id AS \"emailId\", CAST(xup.password AS TEXT) AS \"password\", xp.created_time AS \"onboardedOn\", xup.user_id AS \"partnerId\", xup.firstname AS \"firstName\", xup.lastname AS \"lastName\", CAST(xup.datelastlogin AS TIMESTAMP) AS \"dateLastLogin\", CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' ELSE INITCAP(LOWER(TRIM(xuul.region))) END AS \"region\", xma.vanity_url_domain AS \"vanityUrlDomain\", xp.partner_company_id, xcp.company_name_status, xp.status AS \"partnershipStatus\", xup.status AS \"userStatus\", xup.company_id AS \"userCompanyId\" \
#FROM xt_partnership xp LEFT JOIN xt_user_list xul ON xul.company_id = xp.vendor_company_id LEFT JOIN xt_user_userlist xuul ON xul.user_list_id = xuul.user_list_id AND xp.partner_id = xuul.user_id LEFT JOIN xt_user_profile xup ON xuul.user_id = xup.user_id LEFT JOIN xt_module_access xma ON xma.company_id = xul.company_id LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id WHERE xp.vendor_company_id = :companyId AND xul.is_default_partnerlist = TRUE AND xup.user_id IS NOT NULL ) \
#SELECT DISTINCT \"companyName\", \"emailId\", \"password\", \"onboardedOn\", \"partnerId\", \"firstName\", \"lastName\", \"dateLastLogin\", \"region\", \"vanityUrlDomain\", CASE WHEN (company_name_status = \'inactive\' AND \"userStatus\" = \'APPROVE\') OR (\"userCompanyId\" IS NULL AND \"userStatus\" = \'APPROVE\') THEN \'IncompleteCompanyProfile\' WHEN \"userStatus\" = \'UnApproved\' AND \"partnershipStatus\" = \'approved\' THEN \'Pending Signup\' WHEN \"partnershipStatus\" = \'deactivated\' THEN \'Deactivated\' WHEN engaged_company.partner_company_id IS NULL THEN \'Dormant\' WHEN \"partnershipStatus\" = \'approved\' AND company_name_status = \'active\' THEN \'Active\' END AS \"status\" FROM base LEFT JOIN engaged_company ON base.partner_company_id = engaged_company.partner_company_id ) \
#a WHERE 1=1 \

#allPartnersDetailsListQuery = SELECT a.* FROM ( select distinct xcp.company_name as \"companyName\", xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\", xp.created_time  as \"onboardedOn\", xup.user_id as \"partnerId\", xup.firstname as \"firstName\" , xup.lastname as \"lastName\" , \
#CAST(NULL AS timestamp) as \"dateLastLogin\",CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'IncompleteCompanyProfile\' as \"status\",xma.vanity_url_domain AS \"vanityUrlDomain\" \
#from  xt_user_list xul left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id \
#left join xt_user_profile xup on xup.user_id= xuul.user_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#left join xt_company_profile xcp on xcp.company_id= xup.company_id \
#left join xt_partnership xp on xp.partner_company_id= xup.company_id \
#where  xul.company_id = :companyId \
#and xul.is_default_partnerlist = true and xul.module_name = \'PARTNERS\' AND ((xcp.company_name_status = \'inactive\' AND xup.status = \'APPROVE\') \
#OR (xup.company_id IS NULL AND xup.status = \'APPROVE\')) \
#union \
#select distinct xcp.company_name as \"companyName\", \
#xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\" ,  xp.created_time as \"onboardedOn\",xup.user_id as \"partnerId\", xup.firstname as \"firstName\" , \
#xup.lastname as \"lastName\" ,CAST(NULL AS timestamp) as \"dateLastLogin\",CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' \
#ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'Pending Signup\' as \"status\",xma.vanity_url_domain AS \"vanityUrlDomain\" \
#from  xt_user_list xul left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id \
#left join xt_user_profile xup on xup.user_id= xuul.user_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#left join xt_company_profile xcp on xcp.company_id= xup.company_id \
#left join xt_partnership xp on xp.partner_company_id= xup.company_id \
#where  xul.company_id = :companyId and  xul.is_default_partnerlist = true and xul.module_name =\'PARTNERS\' and  xup.status=\'UnApproved\'  \
#union  all \
#(select distinct xcp.company_name as \"companyName\", \
#xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\" ,  xp.created_time as \"onboardedOn\",xup.user_id as \"partnerId\", xup.firstname as \"firstName\" , xup.lastname as \"lastName\" , \
#CAST(xup.datelastlogin AS timestamp) as \"dateLastLogin\" , CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' \
#ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'Active\' as \"status\",false AS \"vanityUrlDomain\" \
#from   xt_partnership xp \
#left join  xt_user_list xul on xul.company_id = xp.vendor_company_id left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id and xp.partner_id = xuul.user_id \
#left join xt_user_profile xup on xuul.user_id = xup.user_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#left join  xt_company_profile xcp on xcp.company_id = xup.company_id \
#where  xp.vendor_company_id = :companyId and xul.is_default_partnerlist = true and xup.company_id is not null \
#and xp.status = \'approved\' and xcp.company_name_status = \'active\' and xp.partner_company_id in ( select distinct xup.company_id from xt_lead l left join xt_user_profile xup on l.created_by = xup.user_id \
#where l.created_for_company_id = :companyId and l.created_for_company_id != l.created_by_company_id \
#and xup.company_id is not null \
#union \
#select distinct xup.company_id from xt_deal d left join xt_user_profile xup on d.created_by = xup.user_id \
#where d.created_for_company_id = :companyId and d.created_for_company_id != d.created_by_company_id and xup.company_id is not null \
#union \
#select distinct p.partner_company_id from xt_learning_track_visibility xltv \
#left join xt_learning_track xlt on xltv.learning_track_id = xlt.id left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id \
#left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id left join xt_user_profile xup on xup.company_id= p.partner_company_id where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'TRACK\' and xlt.is_published = true and xltv.progress > 0 union select distinct p.partner_company_id from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id = xlt.id \
#left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'PLAYBOOK\' and xlt.is_published = true and xltv.progress > 0 \
#union \
#select distinct xp.partner_company_id from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
#left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id left join xt_partnership xp on xp.id = xdp.partnership_id and xd.company_id = xp.vendor_company_id \
#left join xt_user_profile xup on xup.company_id = xp.partner_company_id where xp.vendor_company_id = :companyId and xp.partner_company_id is not null \
#and xda.action_type = \'VIEW\' \
#union \
#select distinct p.partner_company_id from xt_dam_partner dp join xt_dam d on dp.dam_id = d.id join xt_partnership p on p.id = dp.partnership_id and d.company_id = p.vendor_company_id \
#join xt_company_profile c on p.partner_company_id = c.company_id join xt_dam_partner_group_mapping dpgm on dp.id = dpgm.dam_partner_id \
#left join xt_dam_analytics xda on xda.dam_partner_fk_id = dp.id left join xt_user_profile xup on xup.company_id = p.partner_company_id \
#where p.vendor_company_id = :companyId and xda.action_type = \'VIEW\' \
#union \
#select distinct xup.company_id from xt_campaign c left join xt_campaign p on (c.campaign_id = p.parent_campaign_id) \
#left join xt_user_profile up on (up.user_id = c.customer_id) left join xt_user_profile xup on (xup.user_id = p.customer_id) where up.company_id = :companyId \
#and p.vendor_organization_id = :companyId and p.is_launched = true and p.is_nurture_campaign = true and p.campaign_id is not null \
#and xup.company_id is not null) \
#union all \
#(select distinct xcp.company_name as \"companyName\", \
#xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\",  xp.created_time as \"onboardedOn\",xup.user_id as \"partnerId\",xup.firstname as \"firstName\" , xup.lastname as \"lastName\" , CAST(xup.datelastlogin AS timestamp) as \"dateLastLogin\", \
#CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'Dormant\' as \"status\", false as \"vanityUrlDomain\" \
#from xt_partnership xp left join xt_user_list xul on xul.company_id = xp.vendor_company_id \
#left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id and xp.partner_id = xuul.user_id \
#left join xt_user_profile xup on xuul.user_id = xup.user_id \
#left join xt_company_profile xcp on xcp.company_id = xup.company_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#where xp.vendor_company_id =  :companyId and xul.is_default_partnerlist = true and xup.company_id is not null \
#and xp.status = \'approved\' and xcp.company_name_status = \'active\' and xp.partner_company_id not in ( select distinct xup.company_id from xt_lead l \
#left join xt_user_profile xup on l.created_by = xup.user_id where l.created_for_company_id = :companyId and l.created_for_company_id != l.created_by_company_id \
#and xup.company_id is not null \
#union \
#select distinct xup.company_id from xt_deal d left join xt_user_profile xup on d.created_by = xup.user_id \
#where d.created_for_company_id = :companyId and d.created_for_company_id != d.created_by_company_id \
#and xup.company_id is not null \
#union \
#select distinct p.partner_company_id from xt_learning_track_visibility xltv \
#left join xt_learning_track xlt on xltv.learning_track_id = xlt.id \
#left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id \
#left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id \
#where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'TRACK\' and xlt.is_published = true and xltv.progress > 0 \
#union \
#select distinct p.partner_company_id \
#from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id = xlt.id \
#left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id \
#left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id \
#where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'PLAYBOOK\' and xlt.is_published = true and xltv.progress > 0 \
#union \
#select distinct xp.partner_company_id from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
#left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
#left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
#left join xt_partnership xp on xp.id = xdp.partnership_id and xd.company_id = xp.vendor_company_id \
#left join xt_user_profile xup on xup.company_id= xp.partner_company_id \
#where xp.vendor_company_id = :companyId and xp.partner_company_id is not null \
#and xda.action_type = \'VIEW\' \
#union \
#select distinct p.partner_company_id from xt_dam_partner dp join xt_dam d on dp.dam_id = d.id \
#join xt_partnership p on p.id = dp.partnership_id and d.company_id = p.vendor_company_id join xt_company_profile c on p.partner_company_id = c.company_id join xt_dam_partner_group_mapping dpgm on dp.id = dpgm.dam_partner_id \
#left join xt_dam_analytics xda on xda.dam_partner_fk_id = dp.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id \
#where p.vendor_company_id = :companyId and xda.action_type = \'VIEW\' \
#union \
#select distinct xup.company_id from xt_campaign c left join xt_campaign p on (c.campaign_id = p.parent_campaign_id) \
#left join xt_user_profile up on (up.user_id = c.customer_id) \
#left join xt_user_profile xup on (xup.user_id = p.customer_id) \
#where up.company_id =  :companyId and p.vendor_organization_id = :companyId and p.is_launched = true and p.is_nurture_campaign = true \
#and p.campaign_id is not null and xup.company_id is not null) )) ) a WHERE 1 = 1 \

#allPartnersDetailsListQueryAndTeamMemberLoginQuery = SELECT a.* FROM ( select distinct xcp.company_name as \"companyName\", xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\",  xp.created_time as \"onboardedOn\", xup.user_id as \"partnerId\", xup.firstname as \"firstName\" , xup.lastname as \"lastName\" , \
#CAST(NULL AS timestamp) as \"dateLastLogin\",CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'IncompleteCompanyProfile\' as \"status\",xma.vanity_url_domain AS \"vanityUrlDomain\" \
#from  xt_user_list xul left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id \
#left join xt_user_profile xup on xup.user_id= xuul.user_id \
#left join xt_company_profile xcp on xcp.company_id= xup.company_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#left join xt_partnership xp on xp.partner_company_id= xup.company_id \
#where  xul.company_id = :companyId \
#and xul.is_default_partnerlist = true and xul.module_name = \'PARTNERS\' AND ((xcp.company_name_status = \'inactive\' AND xup.status = \'APPROVE\') \
#OR (xup.company_id IS NULL AND xup.status = \'APPROVE\')) and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xcp.company_name as \"companyName\", \
#xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\", xp.created_time as \"onboardedOn\",xup.user_id as \"partnerId\", xup.firstname as \"firstName\" , \
#xup.lastname as \"lastName\" ,CAST(NULL AS timestamp) as \"dateLastLogin\",CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' \
#ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'Pending Signup\' as \"status\" , xma.vanity_url_domain AS \"vanityUrlDomain\" \
#from  xt_user_list xul left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id \
#left join xt_user_profile xup on xup.user_id= xuul.user_id \
#left join xt_company_profile xcp on xcp.company_id= xup.company_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#left join xt_partnership xp on xp.partner_company_id= xup.company_id \
#where  xul.company_id = :companyId and  xul.is_default_partnerlist = true and xul.module_name =\'PARTNERS\' and  xup.status=\'UnApproved\' and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union  all \
#(select distinct xcp.company_name as \"companyName\", \
#xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\", xp.created_time as \"onboardedOn\",xup.user_id as \"partnerId\", xup.firstname as \"firstName\" , xup.lastname as \"lastName\" , \
#CAST(xup.datelastlogin AS timestamp) as \"dateLastLogin\" , CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' \
#ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'Active\' as \"status\",false AS \"vanityUrlDomain\"  \
#from   xt_partnership xp \
#left join  xt_user_list xul on xul.company_id = xp.vendor_company_id left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id and xp.partner_id = xuul.user_id \
#left join xt_user_profile xup on xuul.user_id = xup.user_id \
#left join  xt_company_profile xcp on xcp.company_id = xup.company_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#where  xp.vendor_company_id = :companyId and xul.is_default_partnerlist = true and xup.company_id is not null \
#and xp.status = \'approved\' and xcp.company_name_status = \'active\' and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') and xp.partner_company_id in ( select distinct xup.company_id from xt_lead l left join xt_user_profile xup on l.created_by = xup.user_id \
#where l.created_for_company_id = :companyId and l.created_for_company_id != l.created_by_company_id \
#and xup.company_id is not null and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xup.company_id from xt_deal d left join xt_user_profile xup on d.created_by = xup.user_id \
#where d.created_for_company_id = :companyId and d.created_for_company_id != d.created_by_company_id and xup.company_id is not null and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct p.partner_company_id from xt_learning_track_visibility xltv \
#left join xt_learning_track xlt on xltv.learning_track_id = xlt.id left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id \
#left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id left join xt_user_profile xup on xup.company_id= p.partner_company_id where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'TRACK\' and xlt.is_published = true and xltv.progress > 0 and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct p.partner_company_id from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id = xlt.id \
#left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'PLAYBOOK\' and xlt.is_published = true and xltv.progress > 0 and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xp.partner_company_id from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
#left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id left join xt_partnership xp on xp.id = xdp.partnership_id and xd.company_id = xp.vendor_company_id \
#left join xt_user_profile xup on xup.company_id = xp.partner_company_id \
#where xp.vendor_company_id = :companyId and xp.partner_company_id is not null \
#and xda.action_type = \'VIEW\' and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct p.partner_company_id from xt_dam_partner dp join xt_dam d on dp.dam_id = d.id join xt_partnership p on p.id = dp.partnership_id and d.company_id = p.vendor_company_id \
#join xt_company_profile c on p.partner_company_id = c.company_id join xt_dam_partner_group_mapping dpgm on dp.id = dpgm.dam_partner_id \
#left join xt_dam_analytics xda on xda.dam_partner_fk_id = dp.id \
#left join xt_user_profile xup on xup.company_id = p.partner_company_id \
#where p.vendor_company_id = :companyId and xda.action_type = \'VIEW\' and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xup.company_id from xt_campaign c left join xt_campaign p on (c.campaign_id = p.parent_campaign_id) \
#left join xt_user_profile up on (up.user_id = c.customer_id) \
#left join xt_user_profile xup on (xup.user_id = p.customer_id) where up.company_id = :companyId \
#and p.vendor_organization_id = :companyId and p.is_launched = true and p.is_nurture_campaign = true and p.campaign_id is not null \
#and xup.company_id is not null) and xup.company_id in (SELECT DISTINCT p.partner_company_id \
#FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
#LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
#LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
#WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union all \
#(select distinct xcp.company_name as \"companyName\", \
#xup.email_id as \"emailId\", CAST(xup.password AS TEXT) AS \"password\", xp.created_time as \"onboardedOn\",xup.user_id as \"partnerId\",xup.firstname as \"firstName\" , xup.lastname as \"lastName\" , CAST(xup.datelastlogin AS timestamp) as \"dateLastLogin\", \
#CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = \'\' THEN \'No Region\' ELSE  INITCAP(LOWER(TRIM(xuul.region)))  END AS \"region\" , \'Dormant\' as \"status\",false AS \"vanityUrlDomain\" \
#from xt_partnership xp left join xt_user_list xul on xul.company_id = xp.vendor_company_id \
#left join xt_user_userlist xuul on xul.user_list_id = xuul.user_list_id and xp.partner_id = xuul.user_id \
#left join xt_user_profile xup on xuul.user_id = xup.user_id \
#left join xt_company_profile xcp on xcp.company_id = xup.company_id \
#left join xt_module_access xma  on xma.company_id= xul.company_id \
#where xp.vendor_company_id =  :companyId and xul.is_default_partnerlist = true and xup.company_id is not null \
#and xp.status = \'approved\' and xcp.company_name_status = \'active\' and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') and xp.partner_company_id not in ( select distinct xup.company_id from xt_lead l \
#left join xt_user_profile xup on l.created_by = xup.user_id where l.created_for_company_id = :companyId and l.created_for_company_id != l.created_by_company_id \
#and xup.company_id is not null and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xup.company_id from xt_deal d left join xt_user_profile xup on d.created_by = xup.user_id \
#where d.created_for_company_id = :companyId and d.created_for_company_id != d.created_by_company_id \
#and xup.company_id is not null and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct p.partner_company_id from xt_learning_track_visibility xltv \
#left join xt_learning_track xlt on xltv.learning_track_id = xlt.id left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id \
#left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'TRACK\' and xlt.is_published = true and xltv.progress > 0 and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct p.partner_company_id from xt_learning_track_visibility xltv left join xt_learning_track xlt on xltv.learning_track_id = xlt.id \
#left join xt_partnership p on p.vendor_company_id = xlt.company_id and xltv.partnership_id = p.id left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id where p.vendor_company_id = :companyId and p.partner_company_id is not null \
#and xlt.type = \'PLAYBOOK\' and xlt.is_published = true and xltv.progress > 0 and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xp.partner_company_id from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
#left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
#left join xt_partnership xp on xp.id = xdp.partnership_id and xd.company_id = xp.vendor_company_id left join xt_user_profile xup on xup.company_id= xp.partner_company_id where xp.vendor_company_id = :companyId and xp.partner_company_id is not null \
#and xda.action_type = \'VIEW\' and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct p.partner_company_id from xt_dam_partner dp join xt_dam d on dp.dam_id = d.id \
#join xt_partnership p on p.id = dp.partnership_id and d.company_id = p.vendor_company_id join xt_company_profile c on p.partner_company_id = c.company_id join xt_dam_partner_group_mapping dpgm on dp.id = dpgm.dam_partner_id \
#left join xt_dam_analytics xda on xda.dam_partner_fk_id = dp.id \
#left join xt_user_profile xup on xup.company_id= p.partner_company_id \
#where p.vendor_company_id = :companyId and xda.action_type = \'VIEW\' \
#and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') \
#union \
#select distinct xup.company_id from xt_campaign c left join xt_campaign p on (c.campaign_id = p.parent_campaign_id) \
#left join xt_user_profile up on (up.user_id = c.customer_id) \
#left join xt_user_profile xup on (xup.user_id = p.customer_id) \
#where up.company_id =  :companyId and p.vendor_organization_id = :companyId and p.is_launched = true and p.is_nurture_campaign = true \
#and p.campaign_id is not null and xup.company_id is not null) \
#and xup.company_id in (SELECT DISTINCT p.partner_company_id FROM xt_team_member t LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
#LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
#LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
#WHERE t.team_member_id = :userId AND p.partner_id IS NOT NULL AND p.status = \'approved\') )) ) a WHERE 1 = 1 \

allPartnersDetailsListQueryAndTeamMemberLoginQuery=SELECT a.* FROM ( \
with engaged_company as ( \
    SELECT DISTINCT xup.company_id as partner_company_id \
    FROM xt_lead l \
    LEFT JOIN xt_user_profile xup ON l.created_by = xup.user_id \
    WHERE l.created_for_company_id = :companyId \
      AND l.created_for_company_id != l.created_by_company_id \
      AND xup.company_id IS NOT null \
      and xup.company_id in ( \
          SELECT DISTINCT p.partner_company_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated')) \
    UNION \
    SELECT DISTINCT xup.company_id \
    FROM xt_deal d \
    LEFT JOIN xt_user_profile xup ON d.created_by = xup.user_id \
    WHERE d.created_for_company_id = :companyId \
      AND d.created_for_company_id != d.created_by_company_id \
      AND xup.company_id IS NOT null \
      and xup.company_id in ( \
          SELECT DISTINCT p.partner_company_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated')) \
    UNION \
    SELECT DISTINCT p.partner_company_id \
    FROM xt_learning_track_visibility xltv \
    LEFT JOIN xt_learning_track xlt ON xltv.learning_track_id = xlt.id \
    LEFT JOIN xt_partnership p ON p.vendor_company_id = xlt.company_id AND xltv.partnership_id = p.id \
    LEFT JOIN xt_user_profile xup ON xup.company_id = p.partner_company_id \
    WHERE p.vendor_company_id = :companyId \
      AND p.partner_company_id IS NOT NULL \
      AND xlt.type in ('TRACK', 'PLAYBOOK') \
      AND xlt.is_published = TRUE \
      AND xltv.progress > 0 \
      and xup.company_id in ( \
          SELECT DISTINCT p.partner_company_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated')) \
    UNION \
    SELECT DISTINCT xp.partner_company_id \
    FROM xt_dam_partner xdp \
    LEFT JOIN xt_dam xd ON xd.id = xdp.dam_id \
    LEFT JOIN xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
    LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_mapping_fk_id = xdpm.id \
    LEFT JOIN xt_partnership xp ON xp.id = xdp.partnership_id AND xd.company_id = xp.vendor_company_id \
    LEFT JOIN xt_user_profile xup ON xup.company_id = xp.partner_company_id \
    WHERE xp.vendor_company_id = :companyId \
      AND xp.partner_company_id IS NOT NULL \
      AND xda.action_type = 'VIEW' \
      and xup.company_id in ( \
          SELECT DISTINCT p.partner_company_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated')) \
    UNION \
    SELECT DISTINCT p.partner_company_id \
    FROM xt_dam_partner dp \
    JOIN xt_dam d ON dp.dam_id = d.id \
    JOIN xt_partnership p ON p.id = dp.partnership_id AND d.company_id = p.vendor_company_id \
    JOIN xt_company_profile c ON p.partner_company_id = c.company_id \
    JOIN xt_dam_partner_group_mapping dpgm ON dp.id = dpgm.dam_partner_id \
    LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = dp.id \
    LEFT JOIN xt_user_profile xup ON xup.company_id = p.partner_company_id \
    WHERE p.vendor_company_id = :companyId \
      AND xda.action_type = 'VIEW' \
      and xup.company_id in ( \
          SELECT DISTINCT p.partner_company_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated')) \
    UNION \
    SELECT DISTINCT xup.company_id \
    FROM xt_campaign c \
    LEFT JOIN xt_campaign p ON c.campaign_id = p.parent_campaign_id \
    LEFT JOIN xt_user_profile up ON up.user_id = c.customer_id \
    LEFT JOIN xt_user_profile xup ON xup.user_id = p.customer_id \
    WHERE up.company_id = :companyId \
      AND p.vendor_organization_id = :companyId \
      AND p.is_launched = TRUE \
      AND p.is_nurture_campaign = TRUE \
      AND p.campaign_id IS NOT NULL \
      AND xup.company_id IS NOT null \
      and xup.company_id in ( \
          SELECT DISTINCT p.partner_company_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated'))), \
base as ( \
    SELECT DISTINCT xcp.company_name as \"companyName\", xup.email_id as \"emailId\", \
           cast(xup.password as text) as \"password\", xup.company_id as \"companyId\", \
           xp.created_time as \"onboardedOn\", xup.user_id as \"partnerId\", xup.firstname as \"firstName\", \
           xup.lastname as \"lastName\", cast(xup.datelastlogin as timestamp) as \"dateLastLogin\", \
           CASE WHEN xuul.region IS NULL OR TRIM(xuul.region) = '' THEN 'No Region' \
                ELSE INITCAP(LOWER(TRIM(xuul.region))) END as \"region\", \
           xma.vanity_url_domain as \"vanityUrlDomain\", xp.partner_company_id, xcp.company_name_status, \
           xp.status as \"partnershipStatus\", xup.status as \"userStatus\", xup.company_id as \"userCompanyId\", \
           un.id as \"unsubscribed\" \
    FROM xt_partnership xp \
    LEFT JOIN xt_user_list xul ON xul.company_id = xp.vendor_company_id \
    LEFT JOIN xt_user_userlist xuul ON xul.user_list_id = xuul.user_list_id AND xp.partner_id = xuul.user_id \
    LEFT JOIN xt_user_profile xup ON xuul.user_id = xup.user_id \
    LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id \
    LEFT JOIN xt_module_access xma ON xma.company_id = xul.company_id \
    LEFT JOIN xt_unsubscribed_user un ON xuul.user_id = un.user_id AND un.customer_company_id = xp.vendor_company_id \
    WHERE xul.company_id = :companyId and xp.status in('approved', 'deactivated') \
      AND xul.is_default_partnerlist = true \
      AND xup.user_id in ( \
          SELECT DISTINCT p.partner_id \
          FROM xt_team_member t \
          LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
          LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
          LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
          WHERE t.team_member_id = :userId \
          AND p.partner_id IS NOT NULL \
          AND p.status in( 'approved', 'deactivated'))) \
SELECT DISTINCT \"companyName\", \"emailId\", \"password\", \"onboardedOn\", \"partnerId\", \"firstName\", \"lastName\", \
       \"dateLastLogin\", \"region\", \
       CASE WHEN ((company_name_status = 'inactive' AND \"userStatus\" = 'APPROVE') OR \
                  (\"userCompanyId\" IS NULL AND \"userStatus\" = 'APPROVE') OR \
                  (\"userStatus\" = 'UnApproved' AND \"partnershipStatus\" = 'approved')) \
            THEN \"vanityUrlDomain\" ELSE 'false' END AS \"vanityUrlDomain\", \
       CASE WHEN (company_name_status = 'inactive' or \"userCompanyId\" is null) AND \"userStatus\" = 'APPROVE' AND \"partnershipStatus\" = 'approved' \
            THEN 'IncompleteCompanyProfile' \
            WHEN \"partnershipStatus\" = 'deactivated' THEN 'Deactivated' \
            WHEN \"userStatus\" = 'UnApproved' \
                 AND \"partnershipStatus\" = 'approved' THEN 'Pending Signup' \
            WHEN \"partnershipStatus\" = 'approved' AND company_name_status = 'active' AND a.partner_company_id IS NOT NULL \
                 THEN 'Active' \
            WHEN \"partnershipStatus\" = 'approved' AND company_name_status = 'active' AND a.partner_company_id IS NULL \
                 THEN 'Dormant' END AS \"status\", \
       CASE WHEN b.\"unsubscribed\" IS NULL AND \"partnershipStatus\" = 'approved' OR \"partnershipStatus\" = 'deactivated' \
            THEN 'False' \
            WHEN \"unsubscribed\" IS NOT NULL AND \"partnershipStatus\" = 'approved' OR \"partnershipStatus\" = 'deactivated' \
            THEN 'True' END AS \"unsubscribed\" \
FROM engaged_company a \
RIGHT JOIN base b ON b.partner_company_id = a.partner_company_id)a where 1=1  \

playbookExpiryDateConditionQuery = and (xlt.expire_date is null or xlt.expire_date > now())

partnerJourneyAssetDetailsViewAndDetailedCountQuery = select a.* from (select distinct \
xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", xd.asset_name as \"assetName\", xd.id as \"assetId\", xd.asset_type as \"assetType\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xdp.dam_id as \"id\", xdpm.dam_partner_id as \"partnerId\", max(xdp.published_time) as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
join xt_partnership p on p.id = xdp.partnership_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
where xd.company_id = :vendorCompanyId and xcp.\"company_name_status\" = 'active'  and p.status={status} \
{myPartnerFilter}{partnerFilter}{dateFilter} \
group by xd.id, 1, 2,3, 4,5,6,7,8 union select distinct xcp.company_name as \"companyName\", \
xcp.company_id as \"companyId\", xd.asset_name as \"assetName\", xd.id as \"assetId\",xd.asset_type as \"assetType\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xdp.dam_id as \"id\",dpgm.dam_partner_id as \"partnerId\",max(xdp.published_time) as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp join xt_dam xd on xdp.dam_id = xd.id join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id left join xt_dam_analytics xda on  xda.dam_partner_fk_id = xdp.id \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_user_profile xup on xup.user_id = xd.created_by where xd.company_id = :vendorCompanyId and p.status={status} \
{myPartnerFilter}{partnerFilter}{dateFilter} \
group by xd.id, 1,2,3,4,5,6,7,8)a where 1 = 1 \

partnerJourneyAssetNames = select distinct on (xd.id)  xd.id as \"assetId\",xd.asset_name as \"assetName\"  \
from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_partnership p on p.id = xdp.partnership_id \
where xd.company_id = :vendorCompanyId and xcp.\"company_name_status\" = 'active' and p.status = {status} \
union select distinct on (xd.id) xd.id as \"assetId\", xd.asset_name as \"assetName\" from \
xt_dam_partner xdp join xt_dam xd on xdp.dam_id = xd.id join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on  xda.dam_partner_fk_id = xdp.id where xd.company_id = :vendorCompanyId and p.status={status} \


partnerJourneyEmailIds = SELECT DISTINCT xup1.email_id AS \"emailId\" \
FROM xt_dam_partner xdp \
JOIN xt_dam xd ON xd.id = xdp.dam_id \
LEFT JOIN xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
LEFT JOIN xt_user_profile xup1 ON xup1.user_id = xdpm.partner_id \
WHERE xd.company_id = :vendorCompanyId AND xup1.company_id = :partnerCompanyId AND xup1.email_id IS NOT NULL \
UNION SELECT DISTINCT xup1.email_id AS \"emailId\" \
FROM xt_dam_partner xdp \
JOIN xt_dam xd ON xdp.dam_id = xd.id \
JOIN xt_dam_partner_group_mapping dpgm ON xdp.id = dpgm.dam_partner_id \
JOIN xt_user_profile xup1 ON xup1.user_id = dpgm.user_id \
WHERE xd.company_id = :vendorCompanyId AND xup1.company_id = :partnerCompanyId AND xup1.email_id IS NOT NULL; 

assetJourneyAssetDetails = select a.* from \
(select distinct on(xd.id)xd.id as \"assetId\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
xd.published_time as \"publishedOn\",  case when xup.firstname is null and  xup.lastname  is null then xup.email_id \
else concat(xup.firstname, ' ' , xup.lastname) end   as \"createdByName\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id = xdp.dam_id \
join xt_partnership p on p.id = xdp.partnership_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
left join xt_user_profile xup1 on xup1.user_id= xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id=xup1.company_id \
where xd.company_id = :vendorCompanyId and xcp.company_name_status=\'active\' and p.status={status} \
group by 1,2,3,4,5 \
union select distinct on(d.id)d.id as \"assetId\", d.asset_name as \"assetName\", d.asset_type  as \"assetType\", \
d.published_time as \"publishedOn\",  case when xup.firstname is null and  xup.lastname  is null then xup.email_id \
else concat(xup.firstname, ' ' , xup.lastname) end  as \"createdByName\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner dp join xt_dam d on dp.dam_id = d.id \
join xt_partnership p on p.id = dp.partnership_id \
join xt_dam_partner_group_mapping dpgm on dp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id = dp.id \
left join xt_user_profile xup on xup.user_id = d.created_by \
where d.company_id = :vendorCompanyId and p.status={status} \
group by 1,2,3,4,5)a  where 1 = 1 \


assetJourneyAssetDetailsSearchQuery = and (a.\"assetName\" ILIKE CONCAT('%searchKey%') OR a.\"assetType\" ILIKE CONCAT('%searchKey%') OR \
a.\"createdByName\" ILIKE CONCAT('%searchKey%') )

partnerDetailedAnalyticsJourneyAssetNames = select distinct on (xd.id) xd.id as \"assetId\", xd.asset_name as \"assetName\" \
from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on	xcp.company_id = xup1.company_id \
where xd.company_id = :vendorCompanyId and xup1.company_id = :partnerCompanyId \
and xcp."company_name_status" = 'active' union select distinct on (xd.id) xd.id as \"assetId\", xd.asset_name as \"assetName\" \
from xt_dam_partner xdp join xt_dam xd on xdp.dam_id = xd.id join xt_partnership p on \
p.id = xdp.partnership_id join xt_dam_partner_group_mapping dpgm on	xdp.id = dpgm.dam_partner_id \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id = xdp.id \
where xd.company_id = :vendorCompanyId and xup1.company_id = :partnerCompanyId
	

notViewedPlaybookUsersQueryv2 = select \
	a."userId", a."emailId", a."firstName", a."lastName", a.address, a.city, a.country, a.state, a."zipCode", a."mobileNumber", a."contactCompany" \
from \
	( \
	select \
		distinct xup.user_id as "userId", \
		xup.email_id as "emailId", \
		xup.firstname as "firstName", \
		xup.lastname as "lastName", \
		xup.address, \
		xup.city, \
		xup.country, \
		xup.state, \
		xup.zip as "zipCode", \
		xup.mobile_number as "mobileNumber", \
		xcp.company_name as "contactCompany", \
		xlt.published_time as "published_on", \
		xlt.id , \
		xltv.progress as "progress" \
	from \
		xt_user_profile xup \
	left join xt_company_profile xcp on \
		xcp.company_id = xup.company_id \
	left join xt_learning_track_visibility xltv on \
		xltv.user_id = xup.user_id \
	left join xt_learning_track xlt on \
		xltv.learning_track_id = xlt.id \
	where \
		xlt.id = :playbookId \
		and (xlt.expire_date is null or xlt.expire_date > now()) \
		and (xltv.progress is null \
			or xltv.progress = 0) \
		and xlt.type = 'PLAYBOOK' \
		and xlt.is_published = true)a \
where \
	now() - CAST(:noOfDays || ' day' AS INTERVAL) >= a."published_on" \


viewedPlaybookUsersQueryv2 = select \
	a."userId", a."emailId", a."firstName", a."lastName", a.address, a.city, a.country, a.state, a."zipCode", a."mobileNumber", a."contactCompany" \
from \
	( \
	select \
		distinct xup.user_id as "userId", \
		xup.email_id as "emailId", \
		xup.firstname as "firstName", \
		xup.lastname as "lastName", \
		xup.address, \
		xup.city, \
		xup.country, \
		xup.state, \
		xup.zip as "zipCode", \
		xup.mobile_number as "mobileNumber", \
		xcp.company_name as "contactCompany", \
		xlt.published_time, \
		xltcp.type, \
		xlt.id, \
		MIN(case when xltcp.type = 'VIEWED' then xltcp.created_time end)  \
		over (partition by xup.user_id) as "firstViewed", \
		xltv.progress as "progress" \
	from \
		xt_user_profile xup \
	left join xt_company_profile xcp on \
		xcp.company_id = xup.company_id \
	left join xt_learning_track_visibility xltv on \
		xltv.user_id = xup.user_id \
	left join xt_learning_track xlt on \
		xltv.learning_track_id = xlt.id \
	left join xt_learning_track_content xltc on \
		xltc.learning_track_id = xlt.id \
	left join xt_learning_track_content_partner_activity xltcp on \
		xltcp.learning_track_visibility_id = xltv.id \
		and xltcp.learning_track_content_id = xltc.id \
	where \
		xlt.id = :playbookId \
		and (xlt.expire_date is null or xlt.expire_date > now()) \
		and xlt.type = 'PLAYBOOK' \
		and xlt.is_published = true )a \
where \
	now() - CAST(:noOfDays || ' day' AS INTERVAL) >= a."firstViewed" \
group by 1,2,3,4,5,6,7,8,9,10,11 \
having \
	count(distinct case when a.type = 'VIEWED' then a.id end )!= 0 \


completedPlaybookUsersQueryv2 = select \
	a."userId", a."emailId", a."firstName", a."lastName", a.address, a.city, a.country, a.state, a."zipCode", a."mobileNumber", a."contactCompany" \
from \
	( \
	select \
		distinct xup.user_id as "userId", \
		xup.email_id as "emailId", \
		xup.firstname as "firstName", \
		xup.lastname as "lastName", \
		xup.address, \
		xup.city, \
		xup.country, \
		xup.state, \
		xup.zip as "zipCode", \
		xup.mobile_number as "mobileNumber", \
		xcp.company_name as "contactCompany", \
		xlt.published_time, \
		xltcp.type, \
		xlt.id, \
		MAX(case when xltcp.type = 'VIEWED' then xltcp.created_time end)  \
		over (partition by xup.user_id) as "lastViewed", \
		xltv.progress as "progress" \
	from \
		xt_user_profile xup \
	left join xt_company_profile xcp on \
		xcp.company_id = xup.company_id \
	left join xt_learning_track_visibility xltv on \
		xltv.user_id = xup.user_id \
		and xltv.progress = 100 \
	left join xt_learning_track xlt on \
		xltv.learning_track_id = xlt.id \
	left join xt_learning_track_content xltc on \
		xltc.learning_track_id = xlt.id \
	left join xt_learning_track_content_partner_activity xltcp on \
		xltcp.learning_track_visibility_id = xltv.id \
		and xltcp.learning_track_content_id = xltc.id \
	where \
		xlt.id = :playbookId \
		and (xlt.expire_date is null or xlt.expire_date > now()) \
		and xlt.type = 'PLAYBOOK' \
		and xlt.is_published = true)a \
where \
	now() - CAST(:noOfDays || ' day' AS INTERVAL) > "lastViewed" \
group by 1,2,3,4,5,6,7,8,9,10,11 \
having \
	count(distinct case when a.type = 'VIEWED' then a.id end )!= 0 \


notCompletedPlaybookUsersQueryv2 = select \
	a."userId", a."emailId", a."firstName", a."lastName", a.address, a.city, a.country, a.state, a."zipCode", a."mobileNumber", a."contactCompany" \
from \
	( \
	select \
		distinct xup.user_id as "userId", \
		xup.email_id as "emailId", \
		xup.firstname as "firstName", \
		xup.lastname as "lastName", \
		xup.address, \
		xup.city, \
		xup.country, \
		xup.state, \
		xup.zip as "zipCode", \
		xup.mobile_number as "mobileNumber", \
		xcp.company_name as "contactCompany", \
		xlt.published_time, \
		xltcp.type, \
		xlt.id, \
		MIN(case when xltcp.type = 'VIEWED' then xltcp.created_time end)  \
		over (partition by xup.user_id) as "firstViewed", \
		xltv.progress as "progress" \
	from \
		xt_user_profile xup \
	left join xt_company_profile xcp on \
		xcp.company_id = xup.company_id \
	left join xt_learning_track_visibility xltv on \
		xltv.user_id = xup.user_id \
		and xltv.progress >0 \
		and xltv.progress <100 \
	left join xt_learning_track xlt on \
		xltv.learning_track_id = xlt.id \
	left join xt_learning_track_content xltc on \
		xltc.learning_track_id = xlt.id \
	left join xt_learning_track_content_partner_activity xltcp on \
		xltcp.learning_track_visibility_id = xltv.id \
		and xltcp.learning_track_content_id = xltc.id \
	where \
		xlt.id = :playbookId \
		and (xlt.expire_date is null or xlt.expire_date > now()) \
		and xlt.type = 'PLAYBOOK' \
		and xlt.is_published = true)a \
where \
	now() - CAST(:noOfDays || ' day' AS INTERVAL) > "firstViewed" \
group by 1,2,3,4,5,6,7,8,9,10,11 \
having \
	count(distinct case when a.type = 'VIEWED' then a.id end )!= 0 \

partnerJourneyAssetNamesForTeamMemberLogin = select distinct on (xd.id)xd.id as \"assetId\", xd.asset_name as \"assetName\" \
from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_partnership p on p.id = xdp.partnership_id \
where xd.company_id = :vendorCompanyId and xcp.\"company_name_status\" = \'active\' and p.status= {status} \
and xup1.company_id in ( \
SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status}) \
union select distinct on (xd.id) xd.id as \"assetId\", xd.asset_name as \"assetName\" from \
xt_dam_partner xdp join xt_dam xd on xdp.dam_id = xd.id join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on  xda.dam_partner_fk_id = xdp.id \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id \
where xd.company_id = :vendorCompanyId \
and xup1.company_id in \
(SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status}) \

partnerJourneyAssetDetailsForTeamMemberLogin = select a.* from (select distinct \
xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", xd.asset_name as \"assetName\", xd.id as \"assetId\", xd.asset_type as \"assetType\", \
concat(xup.firstname, ' ' , xup.lastname) as \"createdByName\", \
xdp.dam_id as \"id\", xdpm.dam_partner_id as \"partnerId\", max(xdp.published_time) as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
where xd.company_id = :vendorCompanyId and xcp."company_name_status" = 'active' \
{myPartnerFilter}{partnerFilter}{dateFilter} \
and xup1.company_id in ( \
SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
WHERE t.team_member_id = :teamMemberUserId AND p.partner_id IS NOT NULL AND p.status ={status}) \
group by xd.id, 1, 2,3, 4,5,6,7,8 \
union \
select distinct xcp.company_name as \"companyName\", \
xcp.company_id as \"companyId\", xd.asset_name as \"assetName\", xd.id as \"assetId\",xd.asset_type as \"assetType\", \
concat(xup.firstname, ' ' , xup.lastname) as \"createdByName\", \
xdp.dam_id as \"id\",dpgm.dam_partner_id as \"partnerId\",max(xdp.published_time) as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp join xt_dam xd on xdp.dam_id = xd.id join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on  xda.dam_partner_fk_id = xdp.id \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_user_profile xup on xup.user_id = xd.created_by where xd.company_id = :vendorCompanyId \
{myPartnerFilter}{partnerFilter}{dateFilter} \
and xup1.company_id in ( \
SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
WHERE t.team_member_id = :teamMemberUserId AND p.partner_id IS NOT NULL AND p.status ={status}) \
group by xd.id, 1,2,3,4,5,6,7,8)a where 1 = 1 \

assetJourneyAssetDetailsForTeamMemberLogin = select a.* from \
(select distinct on(xd.id)xd.id as \"assetId\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\", \
xd.published_time as \"publishedOn\", concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
where xd.company_id = :vendorCompanyId \
and xup1.company_id in ( \
SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status ={status}) \
group by 1,2,3,4,5 \
union \
select distinct on(d.id)d.id as \"assetId\", d.asset_name as \"assetName\", d.asset_type  as \"assetType\", \
d.published_time as \"publishedOn\", concat(xup.firstname,' ' , xup.lastname) as \"createdByName\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner dp join xt_dam d on dp.dam_id = d.id \
join xt_dam_partner_group_mapping dpgm on dp.id = dpgm.dam_partner_id \
left join xt_dam_analytics xda on xda.dam_partner_fk_id = dp.id \
left join xt_user_profile xup on xup.user_id = d.created_by \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id \
where d.company_id = :vendorCompanyId \
and xup1.company_id in \
(SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT JOIN xt_partnership p ON ptgm.partnership_id = p.id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status ={status}) \
group by 1,2,3,4,5)a  where 1 = 1 \

playbookJourneyInteractionQuery = select a.* from(select distinct xlt.id as \"id\", \
xlt.title as \"playbookName\",max(xltv.published_on) as \"publishedOn\", \
case when xup.firstname is null and xup.lastname is null then xup.email_id \
else concat(xup.firstname, ' ', xup.lastname) end as \"createdByName\", \
coalesce(cnt.\"viewedCount\", 0) as \"viewedCount\", \
coalesce(cnt.\"completedCount\", 0) as \"completedCount\", \
max(case when xltcp.type='VIEWED' then xltcp.created_time end ) as \"viewedTime\", \
max( case when xltcp.type='DOWNLOADED' then xltcp.created_time end) as \"downloadedTime\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id = xlt.id \
left join xt_user_profile xup on xup.user_id = xlt.created_by \
left join xt_learning_track_content xltc on xltc.learning_track_id = xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
and xltcp.learning_track_content_id = xltc.id \
left join xt_partnership xp on xp.id= xltv.partnership_id and xp.vendor_company_id= :vendorCompanyId \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join ( select v.learning_track_id, \
count( v.progress > 0) as \"viewedCount\", \
count(distinct case when coalesce(v.progress, 0) = 100 then v.user_id end) as \"completedCount\" \
from xt_learning_track_visibility v \
group by 1) cnt on cnt.learning_track_id = xlt.id \
where xlt.company_id = :vendorCompanyId \
and xlt.type = 'PLAYBOOK' and xlt.is_published = true and xp.status= {status} group by 1,2,4,5,6)a where 1 = 1 \

totalPartnerInteractionQuery = select a.* from (select distinct  xlt.id as \"id\", \
xlt.title as \"playbookName\", \
case when xup.firstname is null and xup.lastname is null then xup.email_id \
else concat(xup.firstname, ' ', xup.lastname) end as \"createdByName\", \
xcp.company_name as \"partnerCompanyName\", \
xup1.email_id as \"partnerEmailId\", \
concat(xup1.firstname, ' ', xup1.lastname) as \"partnerFullName\", \
count(distinct case when xltcp.type='VIEWED' or xltcp.type='DOWNLOADED' then xltv.user_id end) as \"viewedCount\", \
count(distinct case when coalesce(xltv.progress, 0) = 100 then xltv.user_id end) as \"completedCount\", \
max(case when xltcp.type='VIEWED' then xltcp.created_time end ) as \"viewedTime\", \
max( case when xltcp.type='DOWNLOADED' then xltcp.created_time end) as \"downloadedTime\", \
max(xltv.published_on) as \"publishedOn\", \
max(xltv.progress) as \"progress\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id = xlt.id \
left join xt_user_profile xup on xup.user_id = xlt.created_by \
left join xt_user_profile xup1 on xup1.user_id= xltv.user_id \
left join xt_partnership p on p.id=xltv.partnership_id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
left join xt_company_profile xcp  on xcp.company_id= xup1.company_id \
where xlt.company_id = :vendorCompanyId and xlt.type = 'PLAYBOOK' and xlt.is_published = true and xcp.company_name is not null and p.status= {status} \
group by 1,2,3,4,5,6 order by 7 desc) a where 1 = 1 \
 
totalPartnerTeamMemberInteractionQuery = select a.* from( select distinct  xlt.id as \"id\", \
xlt.title as \"playbookName\", \
case when xup.firstname is null and xup.lastname is null then xup.email_id \
else concat(xup.firstname, ' ', xup.lastname) end as \"createdByName\", \
xcp.company_name as \"partnerCompanyName\", \
xup1.email_id as \"partnerEmailId\", \
concat(xup1.firstname, ' ', xup1.lastname) as \"partnerFullName\", \
count(distinct case when xltcp.type='VIEWED' or xltcp.type='DOWNLOADED' then xltv.user_id end) as \"viewedCount\", \
count(distinct case when coalesce(xltv.progress, 0) = 100 then xltv.user_id end) as \"completedCount\", \
max(case when xltcp.type='VIEWED' then xltcp.created_time end ) as \"viewedTime\", \
max( case when xltcp.type='DOWNLOADED' then xltcp.created_time end) as \"downloadedTime\", \
max(xltv.published_on) as \"publishedOn\", \
max(xltv.progress) as \"progress\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id = xlt.id \
left join xt_user_profile xup on xup.user_id = xlt.created_by \
left join xt_user_profile xup1 on xup1.user_id= xltv.user_id \
left join xt_partnership p on p.id=xltv.partnership_id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
left join xt_company_profile xcp  on xcp.company_id= xup1.company_id \
where xlt.company_id = :vendorCompanyId and xlt.type = 'PLAYBOOK' and xlt.is_published = true and xcp.company_name is not null and p.status ={status} \
and xup1.company_id in ( SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT OUTER JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT OUTER JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT OUTER JOIN xt_partnership p ON ptgm.partnership_id = p.id \
LEFT JOIN xt_campaign xc ON xc.customer_id = tgum.team_member_id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status}) \
group by 1,2,3,4,5,6 order by 11 desc )a where 1 = 1 \
 
 
playbookJourneyInteractionQueryForTeamMember = select a.* from (select distinct on(xlt.id)xlt.id as \"id\", \
xlt.title as \"playbookName\",max(xltv.published_on) as \"publishedOn\", \
case when xup.firstname is null and xup.lastname is null then xup.email_id \
else concat(xup.firstname, ' ', xup.lastname) end as \"createdByName\", \
count(distinct case when xltcp.type='VIEWED' or xltcp.type='DOWNLOADED' then xltv.user_id end) as \"viewedCount\", \
count(distinct case when coalesce(xltv.progress, 0) = 100 then xltv.user_id end) as \"completedCount\", \
max( case when xltcp.type='VIEWED' then xltcp.created_time end)  as \"viewedTime\", \
max( case when xltcp.type='DOWNLOADED' then xltcp.created_time end) as \"downloadedTime\" \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xltv.learning_track_id = xlt.id \
left join xt_user_profile xup on xup.user_id = xlt.created_by \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_learning_track_content xltc on xltc.learning_track_id = xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
and xltcp.learning_track_content_id = xltc.id \
left join xt_partnership p on p.id= xltv.partnership_id \
left join ( select distinct v.learning_track_id, v.partnership_id, \
count( v.progress > 0) as \"viewedCount\", \
count(distinct case when coalesce(v.progress, 0) = 100 then v.user_id end) as \"completedCount\" \
from xt_learning_track_visibility v \
group by 1,2) cnt on cnt.learning_track_id = xlt.id   and p.id= cnt.partnership_id \
where xlt.company_id = :vendorCompanyId and xlt.type = 'PLAYBOOK' and xlt.is_published = true \
and xup1.company_id in (select distinct p.partner_company_id \
from xt_team_member t \
left outer join xt_team_member_group_user_mapping tgum on t.id = tgum.team_member_id \
left outer join xt_partner_team_group_mapping ptgm on tgum.id = ptgm.team_member_group_user_mapping_id \
left outer join xt_partnership p on ptgm.partnership_id=p.id \
left join xt_campaign xc on xc.customer_id=tgum.team_member_id \
left join xt_company_profile xcp on xcp.company_id= p.partner_company_id \
where t.team_member_id = :teamMemberId \
and p.partner_id is not null and p.status={status}) \
group by 1,2,4)a where 1 = 1 \

playbookJourneyDetailsAnalytics =  select a.* from (select distinct xlt.id as \"id\", xup1.company_id as \"partnerCompanyId\", \
case when xup1.firstname is null and xup1.lastname is null then xup1.email_id \
else concat(xup1.firstname, ' ', xup1.lastname) end as \"firstName\", \
xup1.email_id as \"emailId\", xlt.title as \"playbookName\", xltv.published_on as \"publishedOn\", \
concat(xup.firstname, ' ', xup.lastname) as \"createdByName\", xltv.progress as \"progress\" , \
max( case when xltcp.type='VIEWED' then xltcp.created_time end)  as \"viewedTime\", \
max( case when xltcp.type='DOWNLOADED' then xltcp.created_time end) as \"downloadedTime\", \
count(distinct case when xltcp.type= 'VIEWED' or xltcp.type= 'DOWNLOADED' then xltv.user_id end ) as \"viewedCount\", \
count(distinct case when coalesce(xltv.progress, 0) = 100 then xltv.user_id end) as \"completedCount\" \
from xt_learning_track_visibility xltv \
left join xt_learning_track xlt on xltv.learning_track_id = xlt.id \
left join xt_learning_track_content xltc on xltc.learning_track_id = xlt.id \
left join xt_learning_track_content_partner_activity xltcp on xltcp.learning_track_visibility_id = xltv.id \
and xltcp.learning_track_content_id = xltc.id \
left join xt_user_profile xup on xup.user_id = xlt.created_by \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
where xlt.company_id = :vendorCompanyId and xup1.company_id = :partnerCompanyId \
{teamMemberFilterQuery} \
and xlt.type = 'PLAYBOOK' and xlt.is_published = true \
and xcp.company_id is not null group by 1,2,3,4,5,6,7,8)a where	1 = 1 \

partnerJourneyAssetInteractionDetailsForTeamMemberLogin = select a.* from \
(select xd.id  as \"assetId\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\",xcp.company_id as \"companyId\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xcp.company_name as \"companyName\", xup1.email_id as \"partnerEmailId\", \
concat(xup1.firstname,' ' , xup1.lastname) as \"partnerName\", \
xd.published_time as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
where xd.company_id = :vendorCompanyId and xcp.company_id is not null and xp.status={status} \
and xup1.company_id in (SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT OUTER JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT OUTER JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT OUTER JOIN xt_partnership p ON ptgm.partnership_id = p.id \
LEFT JOIN xt_campaign xc ON xc.customer_id = tgum.team_member_id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status}) \
{dateFilter} \
group by 1,2,3,4,5,6,7,8,9 union \
select distinct xd.id  as \"assetId\", xd.asset_name, xd.asset_type,xcp.company_id as \"companyId\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\",\
xcp.company_name, xup1.email_id, \ concat(xup1.firstname,' ' , xup1.lastname), \
xd.published_time, \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\",  \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\"  \
FROM xt_dam_partner dp \
JOIN xt_dam xd ON xd.id = dp.dam_id \
JOIN xt_partnership p ON p.id = dp.partnership_id  and p.vendor_company_id= :vendorCompanyId \
JOIN xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = dp.id \
JOIN xt_dam_partner_group_user_mapping dpgu ON dpgu.dam_partner_group_id = dpgm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
LEFT JOIN xt_team_member tm ON tm.id = dpgu.team_member_id \
LEFT JOIN xt_user_profile xup1 ON xup1.user_id = tm.team_member_id or xup1.user_id= dpgu.user_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = dp.id AND xda.action_performed_by = xup1.user_id \
WHERE xd.company_id = :vendorCompanyId  and xcp.company_id is not null  and p.status= {status} \
and xup1.company_id in (SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t LEFT OUTER JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT OUTER JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT OUTER JOIN xt_partnership p ON ptgm.partnership_id = p.id \
LEFT JOIN xt_campaign xc ON xc.customer_id = tgum.team_member_id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status} ) \
{dateFilter} \
group by 1,2,3,4,5,6,7,8,9) a where	1 = 1 \



partnerJourneyAssetInteractionDetailsViewAndDetailedCountQuery = select a.* from \
(select xd.id as \"assetId\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\",xcp.company_id as \"companyId\", case \
when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xcp.company_name as \"companyName\", xup1.email_id as \"partnerEmailId\", concat(xup1.firstname,' ' , xup1.lastname) as \"partnerName\", \
xd.published_time as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
JOIN xt_partnership p ON p.id = xdp.partnership_id  and p.vendor_company_id= :vendorCompanyId \
where xd.company_id = :vendorCompanyId and xcp.company_id is not null  and p.status={status} \
{dateFilter} \
group by 1,2,3,4,5,6,7,8,9 \
union \
select distinct xd.id  as \"assetId\", xd.asset_name, xd.asset_type,xcp.company_id as \"companyId\", case when xup.firstname \
is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xcp.company_name, xup1.email_id, \
concat(xup1.firstname,' ' , xup1.lastname)  as \"partnerName\", xd.published_time, max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end )  as \"downloadedCount\" \
FROM xt_dam_partner dp  \
JOIN xt_dam xd ON xd.id = dp.dam_id \
JOIN xt_partnership p ON p.id = dp.partnership_id  and p.vendor_company_id= :vendorCompanyId \
JOIN xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = dp.id \
JOIN xt_dam_partner_group_user_mapping dpgu ON dpgu.dam_partner_group_id = dpgm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
LEFT JOIN xt_team_member tm ON tm.id = dpgu.team_member_id \
LEFT JOIN xt_user_profile xup1 ON xup1.user_id = tm.team_member_id or xup1.user_id= dpgu.user_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = dp.id AND xda.action_performed_by = xup1.user_id \
WHERE xd.company_id = :vendorCompanyId  and xcp.company_id is not null and p.status={status} \
{dateFilter} \
group by 1,2,3,4,5,6,7,8,9) a where 1 = 1 \

partnerAssetInteractionDetailsQuery = select a.* from (select distinct \
xcp.company_name as \"companyName\", xcp.company_id as \"companyId\", xd.asset_name as \"assetName\", xd.id as \"assetId\", xd.asset_type as \"assetType\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xdp.dam_id as \"id\", xdpm.dam_partner_id as \"partnerId\", max(xdp.published_time) as \"publishedOn\", \
xup1.email_id as \"partnerEmailId\", concat(xup1.firstname,' ' , xup1.lastname) as \"partnerName\", \
max( case when xda.action_type= \'VIEW\' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= \'DOWNLOAD\' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\",  \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp left join xt_dam xd on xd.id = xdp.dam_id \
join xt_partnership p on p.id = xdp.partnership_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
where xd.company_id = :vendorCompanyId and xcp.company_name_status='active' and p.status={status} \
group by xd.id, 1,2,3, 4,5,6,7,8,10,11 union select distinct xcp.company_name as \"companyName\", \
xcp.company_id as \"companyId\", xd.asset_name as \"assetName\", xd.id as \"assetId\",xd.asset_type as \"assetType\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xdp.dam_id as \"id\",dpgm.dam_partner_id as \"partnerId\",max(xdp.published_time) as \"publishedOn\", \
xup1.email_id as \"partnerEmailId\", concat(xup1.firstname,' ' , xup1.lastname) as \"partnerName\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp join xt_dam xd on xdp.dam_id = xd.id join xt_partnership p on p.id = xdp.partnership_id \
join xt_dam_partner_group_mapping dpgm on xdp.id = dpgm.dam_partner_id left join xt_dam_analytics xda on  xda.dam_partner_fk_id = xdp.id \
left join xt_user_profile xup1 on xup1.user_id = dpgm.user_id left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_user_profile xup on xup.user_id = xd.created_by where xd.company_id = :vendorCompanyId and p.status={status} \
group by xd.id, 1,2,3,4,5,6,7,8,10,11)a where 1 = 1 \

assetInteractionDetailsForTeamMember = select a.* from \
(select xd.id  as \"assetId\", xd.asset_name as \"assetName\", xd.asset_type as \"assetType\",xcp.company_id as \"companyId\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\", \
xcp.company_name as \"companyName\", xup1.email_id as \"partnerEmailId\", \
concat(xup1.firstname,' ' , xup1.lastname) as \"partnerName\", \
xd.published_time as \"publishedOn\", \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\", \
count(distinct case when xda.action_type= 'VIEW' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= 'DOWNLOAD' then xda.id end ) as \"downloadedCount\" \
from xt_dam_partner xdp \
left join xt_dam xd on xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
left join xt_user_profile xup1 on xup1.user_id = xdpm.partner_id \
left join xt_company_profile xcp on xcp.company_id = xup1.company_id \
left join xt_partnership xp on xp.id=xdp.partnership_id and xd.company_id =xp.vendor_company_id \
where xd.company_id = :vendorCompanyId and xcp.company_id is not null and xp.status={status} \
and xup1.company_id in (SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t \
LEFT OUTER JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT OUTER JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT OUTER JOIN xt_partnership p ON ptgm.partnership_id = p.id \
LEFT JOIN xt_campaign xc ON xc.customer_id = tgum.team_member_id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status}) \
group by 1,2,3,4,5,6,7,8,9 union \
select distinct xd.id  as \"assetId\", xd.asset_name, xd.asset_type,xcp.company_id as \"companyId\", \
case when xup.firstname is null and  xup.lastname  is null then xup.email_id else concat(xup.firstname, ' ' , xup.lastname) end as \"createdByName\",\
xcp.company_name, xup1.email_id, \ concat(xup1.firstname,' ' , xup1.lastname), \
xd.published_time, \
max( case when xda.action_type= 'VIEW' then xda.action_time end ) as \"viewedTime\", \
max( case when xda.action_type= 'DOWNLOAD' then xda.action_time end ) as \"downloadedTime\",  \
count(distinct case when xda.action_type= \'VIEW\' then xda.id end ) as \"viewedCount\", \
count(distinct case when xda.action_type= \'DOWNLOAD\' then xda.id end ) as \"downloadedCount\"  \
FROM xt_dam_partner dp \
JOIN xt_dam xd ON xd.id = dp.dam_id \
JOIN xt_partnership p ON p.id = dp.partnership_id  and p.vendor_company_id= :vendorCompanyId \
JOIN xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = dp.id \
JOIN xt_dam_partner_group_user_mapping dpgu ON dpgu.dam_partner_group_id = dpgm.id \
left join xt_user_profile xup on xup.user_id = xd.created_by \
LEFT JOIN xt_team_member tm ON tm.id = dpgu.team_member_id \
LEFT JOIN xt_user_profile xup1 ON xup1.user_id = tm.team_member_id or xup1.user_id= dpgu.user_id \
left join xt_company_profile xcp on xcp.company_id= xup1.company_id \
LEFT JOIN xt_dam_analytics xda ON xda.dam_partner_fk_id = dp.id AND xda.action_performed_by = xup1.user_id \
WHERE xd.company_id = :vendorCompanyId  and xcp.company_id is not null  and p.status= {status} \
and xup1.company_id in (SELECT DISTINCT p.partner_company_id \
FROM xt_team_member t LEFT OUTER JOIN xt_team_member_group_user_mapping tgum ON t.id = tgum.team_member_id \
LEFT OUTER JOIN xt_partner_team_group_mapping ptgm ON tgum.id = ptgm.team_member_group_user_mapping_id \
LEFT OUTER JOIN xt_partnership p ON ptgm.partnership_id = p.id \
LEFT JOIN xt_campaign xc ON xc.customer_id = tgum.team_member_id \
WHERE t.team_member_id = :teamMemberId AND p.partner_id IS NOT NULL AND p.status = {status} ) \
group by 1,2,3,4,5,6,7,8,9) a where	1 = 1 \

###  Tracks counts

content.tracks.count = select cast(count(distinct id) as int) from xt_learning_track  where company_id=:companyId and type='TRACK'

content.tracks.published.count = select cast(count(distinct id) as int) from xt_learning_track  where company_id=:companyId and type='TRACK' and is_published= true

content.tracks.unpublished.count = select cast(count(distinct id ) as int) from xt_learning_track  where company_id=:companyId and type='TRACK' and is_published= false

content.tracks.manage.tarcks.folder.count = SELECT cast(count(distinct a.id)as int)  from xt_category a , xt_category_module cm  WHERE cm.category_id=a.id and a.company_id=:companyId and  cm.category_module_type='LEARNING_TRACK'

content.tracks.access.shared.tracks.folder = select cast(count(distinct cat.id)as int) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_category_module cm on xlt.id = cm.learning_track_id \
left join xt_category cat on cat.id = cm.category_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true ) \

content.tracks.shared.count = select cast(count(distinct xlt.id) as int) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true ) and xlt.is_published = true \

manage.shared.track.all.count = select count(distinct xlt.id) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.track.inprogress.count = select count(distinct case when xltv.progress>0 and progress!=100 then xlt.id end) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.track.completed.tracks.count = select count(distinct case when  progress=100 then xlt.id end) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.track.not.viewed.tracks.count = select count(distinct case when  coalesce(xltv.progress ,0)=0 then xlt.id end) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.folder.tracks.count = select count(distinct cat.id) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_category_module cm on xlt.id = cm.learning_track_id \
left join xt_category cat on cat.id = cm.category_id \
where xlt.type = 'TRACK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true ) \

###  Playbook counts

content.playbooks.count = select cast(count(distinct id) as int) from xt_learning_track  where company_id=:companyId and type='PLAYBOOK'

content.playbooks.published.count = select cast(count(distinct id) as int) from xt_learning_track where company_id=:companyId and type = 'PLAYBOOK' and is_published = true

content.playbooks.unpublished.count = select cast(count(distinct id) as int) from xt_learning_track where company_id=:companyId and type = 'PLAYBOOK' and is_published = false

content.playbook.manage.playbook.folder.count = SELECT cast(count(distinct a.id) as int) from xt_category a , xt_category_module cm  WHERE cm.category_id=a.id and a.company_id=:companyId and  cm.category_module_type='PLAY_BOOK'

content.playbook.access.shared.playbook.folder = select cast(count(distinct cat.id) as int) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_category_module cm on xlt.id = cm.learning_track_id \
left join xt_category cat on cat.id = cm.category_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true ) \

content.playbooks.shared.count = select cast(count(distinct xlt.id) as int) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true ) and xlt.is_published = true \

manage.shared.playbook.all.count = select count(distinct xlt.id) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.playbook.inprogress.count = select count(distinct case when xltv.progress>0 and progress!=100 then xlt.id end) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.playbook.completed.playbook.count = select count(distinct case when  progress=100 then xlt.id end) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.playbook.not.viewed.playbook.count = select count(distinct case when  coalesce(xltv.progress ,0)=0 then xlt.id end) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true) and xlt.is_published = true \

manage.shared.folder.playbbok.count = select count(distinct cat.id) \
from xt_learning_track xlt \
left join xt_learning_track_visibility xltv on xlt.id=xltv.learning_track_id \
left join xt_user_profile xup1 on xup1.user_id = xltv.user_id \
left join xt_category_module cm on xlt.id = cm.learning_track_id \
left join xt_category cat on cat.id = cm.category_id \
where xlt.type = 'PLAYBOOK' and (xup1.user_id =:loggedInUserId and xltv.is_published = true ) \


### Asset counts 

content.assets.count = select cast(count(distinct xd.id) as int) from  xt_dam xd where xd.company_id=:companyId and xd.parent_id  is null

content.asset.white.labeled.count = select  cast(count(distinct e.id) as int) \
from  xt_dam d left join xt_white_labeled_assets e on  d.company_id= e.shared_by_vendor_company_id \
where d.company_id=:companyId and d.parent_id  is null \

content.asset.design.count = select cast(count(distinct case when is_bee_template = true then id end) as int) \
from  xt_dam where company_id=:companyId and parent_id  is null \

content.asset.upload.count = select cast(count(distinct case when is_bee_template = false then id end) as int) \
from  xt_dam where company_id=:companyId and parent_id  is null

content.assets.published.count = select cast(count(distinct xd.id) as int) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_user_profile xup1 ON xup1.user_id = xdpm.partner_id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
where xd.company_id =:companyId and xd.parent_id is null and xd.created_for_company is null \

content.assets.unpublished.count = select count(distinct id) from \
(select distinct xd.id \
from  xt_dam xd where xd.company_id=:companyId and xd.parent_id is null and xd.created_for_company is null  \
except \
select distinct xd.id \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
where xd.company_id =:companyId and xd.parent_id is null and xd.created_for_company is null)a \

content.assets.manage.assets.folder.count = select cast(count(distinct xc.id) as int) \
from xt_category xc, xt_category_module xcm, xt_dam xd where xcm.category_id = xc.id \
and xc.company_id = xd.company_id and xcm.category_module_type = 'DAM' and xcm.dam_id = xd.id \
and xd.company_id = :companyId and xd.parent_id is null and xd.created_for_company is null \

content.assets.access.assets.folder = select cast(count(DISTINCT xc.id) as int) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
left join xt_category_module xcm on xcm.dam_id= xd.id \
left join xt_category xc on xc.id=xcm.category_id \
where p.partner_company_id=:companyId \
and category_module_type = 'DAM' \

content.assets.shared.count = select cast(count(distinct xd.id)as int) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_user_profile xup1 ON xup1.user_id = xdpm.partner_id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
where ((p.partner_company_id =:companyId AND dpgm.dam_partner_id IS NOT NULL) \
OR (xdpm.partner_id =:loggedInUserId and xdpm.dam_partner_id IS NOT NULL)) \

manage.shared.asset.all.count = select count(distinct xd.id) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_user_profile xup1 ON xup1.user_id = xdpm.partner_id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
where  (xup1.user_id = :loggedInUserId AND xdpm.dam_partner_id IS NOT NULL or (p.partner_company_id =:companyId AND dpgm.dam_partner_id IS NOT NULL) ) \

manage.shared.asset.interacted.count = select  count(distinct xd.id) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_user_profile xup1 ON xup1.user_id = xdpm.partner_id  \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id or xda.dam_partner_fk_id =xdp.id \
where   (xup1.user_id = :loggedInUserId  and xdpm.dam_partner_id IS NOT NULL  or (p.partner_company_id =:companyId AND dpgm.dam_partner_id IS NOT NULL ) ) \
and ( xda.action_type= 'VIEW' or  xda.action_type= 'DOWNLOAD') \


manage.shared.asset.non.interacted.count = select count(distinct xd.id) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_user_profile xup1 ON xup1.user_id = xdpm.partner_id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
left join xt_dam_analytics xda on xda.dam_partner_mapping_fk_id = xdpm.id or xda.dam_partner_fk_id =xdp.id \
where  (xup1.user_id = :loggedInUserId AND xdpm.dam_partner_id IS NOT NULL  or (p.partner_company_id =:companyId AND dpgm.dam_partner_id IS NOT NULL) ) \
and xda.id is null \

manage.shared.asset.folder.count = select count(DISTINCT xc.id) \
from xt_dam xd \
join xt_dam_partner xdp ON xd.id = xdp.dam_id \
left join xt_dam_partner_mapping xdpm ON xdpm.dam_partner_id = xdp.id \
left join xt_partnership p ON p.id = xdp.partnership_id \
left join xt_dam_partner_group_mapping dpgm ON dpgm.dam_partner_id = xdp.id \
left join xt_category_module xcm on xcm.dam_id= xd.id \
left join xt_category xc on xc.id=xcm.category_id \
where p.partner_company_id= :companyId \
and category_module_type = 'DAM' \

dam.ids.by.category.id.user.id.query = SELECT distinct d.id as \"id\" \
from xt_dam_partner dp \
left join xt_dam d on d.id = dp.dam_id  \
left join xt_dam_partner_mapping xdpm on xdpm.dam_partner_id = dp.id  \
left join xt_partnership xp on xp.id = dp.partnership_id and d.company_id = xp.vendor_company_id  \
left join xt_category_module cm on cm.dam_id = d.id  \
left join xt_category cat on cat.id = cm.category_id  \
left join xt_user_profile xup on xup.user_id= cat.created_user_id \
LEFT JOIN xt_company_profile xcp ON xcp.company_id = xup.company_id  \
where xp.partner_id= :userId \
and  cm.category_id= :categoryId \

dam.ids.by.category.id.company.id.query  = select  distinct d.id as \"id\" \
from xt_dam d \
left join xt_user_profile xup on xup.user_id = d.created_by \
left join xt_category_module cm on cm.dam_id = d.id \
left join xt_company_profile xcp on xcp.company_id = xup.company_id \
left join xt_category cat on cat.id = cm.category_id \
where d.company_id= :companyId \
and  cm.category_id= :categoryId and d.disable_access_for_oliver = false \


partner.details.list.query = SELECT uul.firstname as \"firstName\", uul.lastname as \"lastName\",up.company_id as \"companyId\", \
uul.country as \"country\", uul.city as \"city\", uul.address as \"address\", uul.contact_company as \"contactCompany\", \
uul.job_title as \"jobTitle\", up.email_id as \"emailId\", uul.mobile_number as \"mobileNumber\", \
uul.state as \"state\", uul.zip as \"zip\", uul.vertical as \"vertical\", uul.region as \"region\", \
uul.company_domain as \"companyDomain\", uul.website as \"website\", uul.country_code as \"countryCode\" \
FROM xt_user_list ul JOIN xt_user_userlist uul ON ul.user_list_id = uul.user_list_id  \
JOIN xt_user_profile up ON uul.user_id = up.user_id \
WHERE ul.company_id = :companyId and ul.module_name = 'PARTNERS' and ul.is_default_partnerlist \

manage.campagins.all.count.nonvanity =  select count(distinct c.campaign_id) \
from xt_campaign c  \
left join xt_campaign p on  c.campaign_id= p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id= c.customer_id \
 left join xt_user_profile xup1 on xup1.user_id= p.customer_id  \
where xup.company_id= :companyId and c.created_for_company is null \


manage.campagins.all.count.nonvanity.xamplifyPartner = 	select count(distinct xc.campaign_id) \
from xt_campaign xc \
left join xt_campaign c on c.parent_campaign_id = xc.campaign_id \
left join xt_user_profile xup on xc.customer_id = xup.user_id \
left join xt_company_profile xcp on (xup.company_id = xcp.company_id) left join xt_company_profile xvc on xc.vendor_organization_id = xvc.company_id \
left join xt_category_module xcmm on xcmm.campaign_id = xc.campaign_id \
left join xt_category xca on xma.id = xcmm.category_id \
left join xt_campaign_event_cancellation xec on xc.campaign_id = xec.id \
left join xt_campaign_event_time xet on xc.campaign_id = xet.campaign_id \
where xc.campaign_id = xcmm.campaign_id and xcmm.category_module_type = 'CAMPAIGN' \
and xc.customer_id in ( \
    select distinct user_id  \
    from xt_user_profile  \
    where company_id = :companyId ) \




#select count(distinct xc.campaign_id) \
#from  xt_campaign xc \
#left join xt_campaign c  on c.parent_campaign_id=xc.campaign_id \
#left join xt_user_profile xup on  xc.customer_id = xup.user_id  left join xt_category_module xcmm on xcmm.campaign_id=xc.campaign_id \
#left join xt_category xca on xma.id=xcmm.category_id \
#where xc.campaign_id = xcmm.campaign_id \
#and xc.is_archived= false \
#and xup.company_id= :companyId \
			
manage.campagins.all.count =  SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
    FROM xt_user_profile xup \
    JOIN xt_campaign xc \
      ON (xc.customer_id = xup.user_id AND vanity) \
    LEFT JOIN xt_campaign p  \
      ON xc.campaign_id = p.parent_campaign_id \
    WHERE ((xc.is_nurture_campaign = false \
    AND xc.created_for_company = :companyId \
         AND xc.parent_campaign_id IS NULL)) OR \
        (xc.is_nurture_campaign = true \
         AND xc.vendor_organization_id = :companyId \
         AND xc.parent_campaign_id IS NOT NULL) and xc.is_archived = false \


#SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
#FROM xt_campaign xc \
#JOIN xt_user_profile xup ON xc.customer_id = xup.user_id AND vanity \
#LEFT JOIN xt_category_module xcmm ON xcmm.campaign_id = xc.campaign_id \
#WHERE xc.campaign_id = xcmm.campaign_id \
#  AND xcmm.category_module_type = 'CAMPAIGN' \
#  AND ( \
#        (xc.is_nurture_campaign = false AND xc.created_for_company = :companyId AND xc.parent_campaign_id IS NULL)  OR \
#        (xc.is_nurture_campaign = true AND xc.vendor_organization_id = :companyId AND xc.parent_campaign_id IS NOT NULL))  AND xc.is_launched = true \
#      

 

#SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
#    FROM xt_user_profile xup \
#    JOIN xt_campaign xc \
#      ON (xc.customer_id = xup.user_id AND vanity) \
#    LEFT JOIN xt_campaign p  \
#      ON xc.campaign_id = p.parent_campaign_id \
#    WHERE ((xc.is_nurture_campaign = false \
#    AND xc.created_for_company = :companyId \
#         AND xc.parent_campaign_id IS NULL)) OR \
#        (xc.is_nurture_campaign = true \
#         AND xc.vendor_organization_id = :companyId \
#         AND xc.parent_campaign_id IS NOT NULL) and xc.is_archived = false \
    
              
                                      
manage.campagins.alll.count = select count(distinct c.campaign_id) \
from xt_campaign c \
left join xt_campaign p on  c.campaign_id= p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id= c.customer_id \
left join xt_user_profile xup1 on xup1.user_id= p.customer_id  \
where xup.company_id= :companyId  and c.created_for_company is null and c.is_nurture_campaign = false \


manage.campagins.all.nonVanity.partner = select count(distinct xc.campaign_id) \
from  xt_campaign xc \
left join xt_campaign c  on c.parent_campaign_id=xc.campaign_id \
left join xt_user_profile xup on  xc.customer_id = xup.user_id  left join xt_category_module xcmm on xcmm.campaign_id=xc.campaign_id \
left join xt_category xca on xma.id=xcmm.category_id \
where xc.campaign_id = xcmm.campaign_id \
and xc.is_archived= false \
and xup.company_id= :companyId \

	
manage.campagins.draftt.count =  SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
FROM xt_campaign xc \
JOIN xt_user_profile xup ON xc.customer_id = xup.user_id AND vanity \
LEFT JOIN xt_category_module xcmm ON xcmm.campaign_id = xc.campaign_id \
WHERE xc.campaign_id = xcmm.campaign_id \
  AND xcmm.category_module_type = 'CAMPAIGN' \
  AND ( \
        (xc.is_nurture_campaign = false AND xc.created_for_company = :companyId AND xc.parent_campaign_id IS NULL) OR \
        (xc.is_nurture_campaign = true AND xc.vendor_organization_id = :companyId AND xc.parent_campaign_id IS NOT NULL)) \
  AND campaign_schedule_type = 'SAVE' \


#SELECT count(DISTINCT xc.campaign_id) \
#    FROM xt_user_profile xup \
#    JOIN xt_campaign xc \
#      ON (xc.customer_id = xup.user_id AND vanity) \
#    WHERE  campaign_schedule_type = 'SAVE' and xc.is_launched = false and (xc.is_nurture_campaign = false \
#    AND xc.created_for_company = :companyId \
#         AND xc.parent_campaign_id IS NULL) \

manage.campagins.xamplifydraft.count = select count(distinct xc.campaign_id) \
from  xt_campaign xc \
left join xt_campaign c  on c.parent_campaign_id=xc.campaign_id \
left join xt_user_profile xup on  xc.customer_id = xup.user_id  left join xt_category_module xcmm on xcmm.campaign_id=xc.campaign_id \
left join xt_category xca on xma.id=xcmm.category_id \
where xc.campaign_id = xcmm.campaign_id \
and xc.campaign_schedule_type = 'SAVE' \
and xup.company_id= :companyId \

manage.campagins.draft.count = select count(distinct c.campaign_id) \
from xt_campaign c \
left join xt_campaign p on c.campaign_id = p.parent_campaign_id \
left join xt_user_profile xup  on xup.user_id  = c.customer_id \
left join xt_user_profile xup1 on xup1.user_id = p.customer_id \
where xup.company_id  = :companyId \
and (c.campaign_schedule_type = 'SAVE') 
	
	
manage.campagins.scheduled.count =  select count(distinct c.campaign_id) \
from xt_campaign c \
left join xt_campaign p on c.campaign_id = p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id = c.customer_id \
left join xt_user_profile xup1 on xup1.user_id = p.customer_id \
where xup.company_id = :companyId \
and c.campaign_schedule_type = 'SCHEDULE' and c.is_launched = false \

	
manage.campagins.launched.count.xamplify = SELECT count(DISTINCT c.campaign_id) \
FROM xt_campaign c \
left join xt_campaign p on c.campaign_id = p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id = c.customer_id  \
left join xt_user_profile xup1 on xup1.user_id = p.customer_id   \
left join xt_campaign_event_time xet on xet.campaign_id = c.campaign_id  \
left join xt_campaign_event_cancellation xec on c.campaign_id = xec.id \
   and ( xet.end_time < CURRENT_DATE \
        or (xet.is_all_day = TRUE and xet.start_time < CURRENT_DATE)) \
left join xt_campaign_event_cancellation xcec  \
    on xcec.id = c.campaign_id  \
   and xcec.iscancelled = TRUE  \
where xup.company_id = :companyId AND c.is_launched = TRUE   \
						  AND c.is_archived = FALSE   \
						  AND c.created_for_company IS NULL  \
						  AND ((c.campaign_type <> 'EVENT'  \
						         AND (c.end_date IS NULL OR c.end_date >= NOW())) \
						        OR ( (xec.iscancelled IS NULL OR xec.iscancelled = FALSE) \
						            AND (xet.end_time IS NULL OR xet.end_time >= NOW()) \
						            AND NOT (xet.is_all_day = TRUE AND xet.start_time < NOW()) \
						            AND (c.end_date IS NULL OR c.end_date >= NOW()) ))  \




manage.campagins.launched.count.vanity = SELECT count(DISTINCT c.campaign_id) \
FROM xt_campaign c \
left join xt_campaign p on c.campaign_id = p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id = c.customer_id  \
left join xt_user_profile xup1 on xup1.user_id = p.customer_id  \
left join xt_campaign_event_time xet on xet.campaign_id = c.campaign_id \
   and ( xet.end_time < CURRENT_DATE \
        or (xet.is_all_day = TRUE and xet.start_time < CURRENT_DATE)) \
left join xt_campaign_event_cancellation xcec  \
    on xcec.id = c.campaign_id \
   and xcec.iscancelled = TRUE \
where xup.company_id = :companyId  and c.is_nurture_campaign = false \
 and c.is_launched = true \
  and c.is_archived = FALSE \
  and c.created_for_company IS NULL \
  and NOT ( c.campaign_type = 'EVENT' and c.is_launched = TRUE \
    and ( xet.campaign_id IS NOT NULL  or xcec.id IS NOT NULL )) \
     AND  (c.end_date IS NULL or c.end_date >= NOW()) \
     
     
manage.campagins.launched.count.xamplify.partner = 	  select count(distinct xc.campaign_id) \
from xt_campaign xc \
left join xt_campaign c on c.parent_campaign_id = xc.campaign_id \
left join xt_user_profile xup on xc.customer_id = xup.user_id \
left join xt_company_profile xcp on (xup.company_id = xcp.company_id) \
left join xt_company_profile xvc on xc.vendor_organization_id = xvc.company_id \
left join xt_category_module xcmm on xcmm.campaign_id = xc.campaign_id \
left join xt_category xca on xma.id = xcmm.category_id \
left join xt_campaign_event_cancellation xec on xc.campaign_id = xec.id \
left join xt_campaign_event_time xet on xc.campaign_id = xet.campaign_id \
where     xc.campaign_id = xcmm.campaign_id  AND xc.created_for_company IS NULL \
  AND ((xc.campaign_type <> 'EVENT'  \
         AND (xc.end_date IS NULL OR xc.end_date >= NOW())) \
        OR ( (xec.iscancelled IS NULL OR xec.iscancelled = FALSE) \
            AND (xet.end_time IS NULL OR xet.end_time >= NOW()) \
            AND NOT (xet.is_all_day = TRUE AND xet.start_time < NOW()) \
            AND (xc.end_date IS NULL OR xc.end_date >= NOW()) ))  \
and xcmm.category_module_type = 'CAMPAIGN'  \
and xc.customer_id in ( \
    select distinct user_id  \
    from xt_user_profile  \
    where company_id = :companyId and xc.is_launched = true \
);



manage.campagins.launchedd.count = SELECT count(DISTINCT xc.campaign_id) AS "campaignId"  \
FROM xt_campaign xc  \
JOIN xt_user_profile xup ON xc.customer_id = xup.user_id AND vanity  \
LEFT JOIN xt_category_module xcmm ON xcmm.campaign_id = xc.campaign_id  \
left join xt_campaign_event_cancellation xec on xc.campaign_id = xec.id \
left join xt_campaign_event_time xet on xc.campaign_id = xet.campaign_id \
WHERE   xc.is_launched = TRUE and xc.campaign_id = xcmm.campaign_id  \
  AND xcmm.category_module_type = 'CAMPAIGN'  \
  AND ( \
        (xc.is_nurture_campaign = false AND xc.created_for_company = :companyId AND xc.parent_campaign_id IS NULL) \
	 OR  \
        (xc.is_nurture_campaign = true AND xc.vendor_organization_id = :companyId AND xc.parent_campaign_id IS NOT NULL)  \
	                            AND xc.is_archived = FALSE \
	                            AND xc.created_for_company IS NULL \
	                            AND ((xc.campaign_type <> 'EVENT'  \
	                          AND (xc.end_date IS NULL OR xc.end_date >= NOW()))  \
	                          OR ((xec.iscancelled IS NULL OR xec.iscancelled = FALSE)  \
	                         AND (xet.end_time IS NULL OR xet.end_time >= NOW()) \
	                          AND NOT (xet.is_all_day = TRUE AND xet.start_time < NOW())  AND (xc.end_date IS NULL OR xc.end_date >= NOW())))) \
  
  



# SELECT count(DISTINCT xc.campaign_id)  \
#    FROM xt_user_profile xup \
#    JOIN xt_campaign xc \
#      ON (xc.customer_id = xup.user_id AND vanity) \
#    WHERE xc.is_launched = true and ((xc.is_nurture_campaign = false \
#    AND xc.created_for_company = :companyId \
#         AND xc.parent_campaign_id IS NULL)) \
         
manage.campagins.folders.count =  SELECT \
    count(distinct id) AS count \
FROM \
    xt_campaign_category_view \
WHERE \
    count > 0 \
    AND company_id = :companyId \



#SELECT count(distinct xc.id) AS count \
#FROM xt_category xc \
#JOIN xt_category_module xcm ON xcm.category_id = xc.id \
#LEFT JOIN xt_user_profile xup ON xup.company_id = xc.company_id \
#LEFT JOIN xt_user_profile xup1 ON xup1.company_id = xc.company_id \
#WHERE xcm.category_module_type = 'CAMPAIGN' \
#AND xc.company_id = xcm.company_id \
#AND xc.company_id = :companyId \


manage.campagins.folders.vanity.partner.count =  SELECT count(DISTINCT cat.id) \
FROM xt_category cat \
JOIN xt_category_module cm  \
    ON cm.category_id = cat.id  \
   AND cm.company_id = cat.company_id \
WHERE cm.campaign_id IN ( \
          SELECT campaign_id FROM xt_campaign \
          WHERE customer_id IN (:loggedInUserId) \
            AND vendor_organization_id = :companyId \
      ) \
  AND cm.category_module_type = 'CAMPAIGN' \

manage.campagins.cancelled.count = select count(distinct case when xet.end_time< current_date then c.campaign_id  \
when is_all_day = true and xet.start_time<current_date then c.campaign_id end ) \
from xt_campaign c  \
left join xt_campaign_event_time xet on xet.campaign_id= c.campaign_id \
left join xt_campaign_event_cancellation xcec on xcec.id = c.campaign_id \
left join xt_user_profile xup on xup.user_id= c.customer_id \
left join xt_user_profile xup1 on xup1.user_id= c.customer_id \
where xup.company_id= :companyId \
and c.campaign_type= 'EVENT' and c.is_launched = true  and c.is_archived = false \



manage.campagins.archived.count = select count(distinct c.campaign_id) \
from xt_campaign c \
left join xt_campaign p  \
on c.campaign_id = p.parent_campaign_id \
left join xt_user_profile xup  \
on xup.user_id = c.customer_id \
left join xt_user_profile xup1  \
on xup1.user_id = p.customer_id where xup.company_id  = :companyId \
and c.is_archived = true \


manage.campagins.archived.nonvanity.count = select count(distinct p.campaign_id) \
from xt_campaign c  \
left join xt_campaign p on  c.campaign_id= p.parent_campaign_id \
left join xt_user_profile xup on xup.user_id= p.customer_id \
left join xt_user_profile xup1 on xup1.user_id= p.customer_id \
where xup.company_id= :companyId \
and p.is_archived = true \



manage.campagins.archived.vanity.partner.count =  	SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
    FROM xt_user_profile xup  \
    JOIN xt_campaign xc \
      ON (xc.customer_id = xup.user_id AND vanity)  \
    LEFT JOIN xt_campaign p   \
      ON xc.campaign_id = p.parent_campaign_id  \
    WHERE ((xc.is_nurture_campaign = false  \
    AND xc.created_for_company = :companyId AND xc.parent_campaign_id IS NULL) OR \
        (xc.is_nurture_campaign = true \
         AND xc.vendor_organization_id = :companyId \
         AND xc.parent_campaign_id IS NOT NULL)) \
		 and xc.is_archived = true  \


#
#SELECT count(DISTINCT xc.campaign_id)  \
#    FROM xt_user_profile xup \
#    JOIN xt_campaign xc  \
#      ON (xc.customer_id = xup.user_id AND vanity) \
#    WHERE xc.is_launched = true and ((xc.is_nurture_campaign = false  \
#    AND xc.created_for_company = :companyId  \
#         AND xc.parent_campaign_id IS NULL))  and xc.is_archived = true \
#

#manage.campagins.partnercampaigns.count = select  count(distinct campaign_id)  \
#from xt_campaign c  \
#where c.created_for_company = :companyId and parent_campaign_id is  null \

manage.campagins.ended.count = select count(distinct c.campaign_id) \
from xt_campaign c \
left join xt_campaign p \
    on c.campaign_id = p.parent_campaign_id \
left join xt_user_profile xup  \
    on xup.user_id = c.customer_id \
left join xt_user_profile xup1  \
    on xup1.user_id = p.customer_id \
where \
xup.company_id  = :companyId \
and c.end_date < current_date  and c.is_archived = false \


manage.campagins.ended.count.xamplify.partner = SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
FROM xt_campaign xc \
JOIN xt_user_profile xup ON xc.customer_id = xup.user_id AND vanity \
LEFT JOIN xt_category_module xcmm ON xcmm.campaign_id = xc.campaign_id \
WHERE xc.campaign_id = xcmm.campaign_id \
  AND xcmm.category_module_type = 'CAMPAIGN' \
  AND ( \
        (xc.is_nurture_campaign = false AND xc.created_for_company = :companyId AND xc.parent_campaign_id IS NULL) OR \
        (xc.is_nurture_campaign = true AND xc.vendor_organization_id = :companyId AND xc.parent_campaign_id IS NOT NULL) ) \
  AND  xc.end_date < current_date \


#manage.campagins.scheduled.count = SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
#    FROM xt_user_profile xup \
#    JOIN xt_campaign xc \
#      ON (xc.customer_id = xup.user_id AND  vanity) \
#    LEFT JOIN xt_campaign p  ON xc.campaign_id = p.parent_campaign_id  \
#     WHERE xc.campaign_schedule_type = 'SCHEDULE'  \
#    AND xc.created_for_company = :companyId  \
#         AND xc.parent_campaign_id IS NULL OR  \
#        (xc.is_nurture_campaign = true  \
#         AND xc.vendor_organization_id = :companyId \
#         AND xc.parent_campaign_id IS NOT NULL)  \
         
  manage.campagins.folders.count.xamplify.partner  = SELECT COUNT(DISTINCT id) AS total_count \
FROM xt_campaign_category_view \
WHERE count > 0 \
  AND company_id = :companyId   \
  
  
manage.campagins.cancelled.count.xamplify.partner =  SELECT count(DISTINCT xc.campaign_id) AS "campaignId" \
FROM xt_campaign xc  \
JOIN xt_user_profile xup ON xc.customer_id = xup.user_id AND vanity \
LEFT JOIN xt_category_module xcmm ON xcmm.campaign_id = xc.campaign_id  \
left join xt_campaign_event_cancellation xec on xc.campaign_id = xec.id \
left join xt_campaign_event_time xet on xc.campaign_id = xet.campaign_id \
WHERE xc.campaign_id = xcmm.campaign_id  \
  AND xcmm.category_module_type = 'CAMPAIGN' \
  AND (  \
        (xc.is_nurture_campaign = false AND xc.created_for_company = :companyId AND xc.parent_campaign_id IS NULL) OR \
        (xc.is_nurture_campaign = true AND xc.vendor_organization_id = :companyId  AND xc.parent_campaign_id IS NOT NULL)) \
	  AND xc.campaign_type = 'EVENT' AND xc.is_launched = true  and xc.is_archived = false  AND (xet.end_time < NOW() OR (xet.is_all_day = TRUE AND xet.start_time < NOW()) OR xec.iscancelled = TRUE) \
																								 
			

         
		 
		 
		 
		 manage.campagins.partnercampaigns.count = select  count(distinct campaign_id)  \
from xt_campaign c  \
where c.created_for_company = :companyId and parent_campaign_id is  null  and c.is_launched = true \





