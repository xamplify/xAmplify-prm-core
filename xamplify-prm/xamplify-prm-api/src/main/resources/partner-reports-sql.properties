
#PARTNER COMPANY WISE TOTAL CAMPAIGNS AND LEADS   
---------------------------------------------------
partner.redistributedCampaignsAndLeadsBarChartQuery =with a as (select  xl.created_by_company_id,cast(count(distinct xl.id) as int) as leads from public.xt_lead xl left join \
xt_company_profile xuc on xl.created_by_company_id = xuc.company_id left join xt_user_profile xup on xl.created_by = xup.user_id left join xt_user_role xur on \
xur.user_id = xup.user_id and xur.user_id = xl.created_by where created_for_company_id = ${getCompanyIdByUserIdQuery} and xur.role_id !=2 group by 1), b as (select distinct xcp1.company_name \
as \"partnerCompanyName\",xcp1.company_id as "partner_company",cast(count (distinct xc1.campaign_id) as int) as \"redistributedCampaignsCount\" from public.xt_campaign xc left join \
xt_user_profile xup on (xc.customer_id=xup.user_id)left join xt_user_role xur on (xur.user_id=xup.user_id) left join public.xt_company_profile xcp on \
(xup.company_id=xcp.company_id) left join public.xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id)left join public.xt_user_profile xup1 ON \
(xc1.customer_id = xup1.user_id) left join public.xt_company_profile xcp1 ON (xup1.company_id = xcp1.company_id)where xup.company_id= ${getCompanyIdByUserIdQuery} and \
xc1.vendor_organization_id is not null and xc1.is_launched= true and  xc1.is_nurture_campaign =  true and xc1.parent_campaign_id is not null \
and xur.role_id !=2 and xcp.company_id != xcp1.company_id group by 1,2 order by 2 desc) select b.\"partnerCompanyName\",b.\"redistributedCampaignsCount\",case when a.leads is null then 0 else a.leads end as \"leadsCount\" \
from b left join a on a.created_by_company_id = b.partner_company

partner.redistributedCampaignsCountOrderByQuery = order by b.\"redistributedCampaignsCount\" desc limit 10

partner.leadsCountOrderByQuery = order by \"leadsCount\" desc limit 10

partner.redistributedCampaignsAndLeadsBarChartTeamMemberFilterQuery =with a as (select  xl.created_by_company_id,cast(count(distinct xl.id) as int) as leads from public.xt_lead xl left join \
xt_company_profile xuc on xl.created_by_company_id = xuc.company_id left join xt_user_profile xup on xl.created_by = xup.user_id left join xt_user_role xur on \
xur.user_id = xup.user_id and xur.user_id = xl.created_by where created_for_company_id = :companyId and xur.role_id !=2 group by 1), b as (select distinct xcp1.company_name \
as \"partnerCompanyName\",xcp1.company_id as "partner_company",cast(count (distinct xc1.campaign_id) as int) as \"redistributedCampaignsCount\" from public.xt_campaign xc left join \
xt_user_profile xup on (xc.customer_id=xup.user_id)left join xt_user_role xur on (xur.user_id=xup.user_id) left join public.xt_company_profile xcp on \
(xup.company_id=xcp.company_id) left join public.xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id)left join public.xt_user_profile xup1 ON \
(xc1.customer_id = xup1.user_id) left join public.xt_company_profile xcp1 ON (xup1.company_id = xcp1.company_id)where xup.company_id= :companyId and \
xc1.vendor_organization_id is not null and xc1.is_launched= true and  xc1.is_nurture_campaign =  true and xc1.parent_campaign_id is not null \
and xur.role_id !=2 and xcp.company_id != xcp1.company_id and xcp1.company_id in (:partnerCompanyIds) group by 1,2 order by 2 desc) select b.\"partnerCompanyName\",b.\"redistributedCampaignsCount\",case when a.leads is null then 0 else a.leads end as \"leadsCount\" \
from b left join a on a.created_by_company_id = b.partner_company and b.\"partner_company\" in (:partnerCompanyIds)

#PARTNER COMPANY WISE TOTAL CAMPAIGNS AND LEADS FOR PREVIOUS QUARTER  
--------------------------------------------------------------------
partner.redistributedCampaignsAndLeadsForPreviousQuarterBarChartQuery = with a as (select  xl.created_by_company_id,cast(count(distinct xl.id) as int) as leads \
from public.xt_lead xl left join xt_company_profile xuc on xl.created_by_company_id = xuc.company_id left join xt_user_profile xup on xl.created_by = xup.user_id left join xt_user_role xur on xur.user_id = xup.user_id \
and xur.user_id = xl.created_by where created_for_company_id = ${getCompanyIdByUserIdQuery} and xur.role_id !=2  and xl.created_time >= date_trunc('quarter',now())-interval '3 months'\
and xl.created_time < date_trunc('quarter',now()) group by 1),b as (select distinct xcp1.company_name as \"partnerCompanyName\",xcp1.company_id as "partner_company", \
cast(count (distinct xc1.campaign_id) as int) as \"redistributedCampaignsCount\" from public.xt_campaign xc left join xt_user_profile xup on (xc.customer_id=xup.user_id) \
left join xt_user_role xur on (xur.user_id=xup.user_id) left join public.xt_company_profile xcp on (xup.company_id=xcp.company_id) \
left join public.xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id) left join public.xt_user_profile xup1 ON (xc1.customer_id = xup1.user_id) \
left join public.xt_company_profile xcp1 ON (xup1.company_id = xcp1.company_id) where xup.company_id=${getCompanyIdByUserIdQuery} and xc1.vendor_organization_id is not null \
and xc1.is_launched= true and  xc1.is_nurture_campaign =  true and xc1.parent_campaign_id is not null and xc1.launch_time >= date_trunc('quarter',now())-interval '3 months' \
and xc1.launch_time < date_trunc('quarter',now()) and xur.role_id !=2 and xcp.company_id != xcp1.company_id group by 1,2 order by 2 desc) \
select b.\"partnerCompanyName\",b.\"redistributedCampaignsCount\",case when a.leads is null then 0 else a.leads end as \"leadsCount\" \
from b left join a on a.created_by_company_id = b.partner_company

partner.redistributedCampaignsAndLeadsForPreviousQuarterBarChartTeamMemberFilterQuery = with a as (select  xl.created_by_company_id,cast(count(distinct xl.id) as int) as leads \
from public.xt_lead xl left join xt_company_profile xuc on xl.created_by_company_id = xuc.company_id left join xt_user_profile xup on xl.created_by = xup.user_id left join xt_user_role xur on xur.user_id = xup.user_id \
and xur.user_id = xl.created_by where created_for_company_id = ${getCompanyIdByUserIdQuery} and xur.role_id !=2  and xl.created_time >= date_trunc('quarter',now())-interval '3 months'\
and xl.created_time < date_trunc('quarter',now()) group by 1),b as (select distinct xcp1.company_name as \"partnerCompanyName\",xcp1.company_id as "partner_company", \
cast(count (distinct xc1.campaign_id) as int) as \"redistributedCampaignsCount\" from public.xt_campaign xc left join xt_user_profile xup on (xc.customer_id=xup.user_id) \
left join xt_user_role xur on (xur.user_id=xup.user_id) left join public.xt_company_profile xcp on (xup.company_id=xcp.company_id) \
left join public.xt_campaign xc1 on (xc.campaign_id=xc1.parent_campaign_id) left join public.xt_user_profile xup1 ON (xc1.customer_id = xup1.user_id) \
left join public.xt_company_profile xcp1 ON (xup1.company_id = xcp1.company_id) where xup.company_id=${getCompanyIdByUserIdQuery} and xc1.vendor_organization_id is not null \
and xc1.is_launched= true and  xc1.is_nurture_campaign =  true and xc1.parent_campaign_id is not null and xc1.launch_time >= date_trunc('quarter',now())-interval '3 months' \
and xc1.launch_time < date_trunc('quarter',now()) and xur.role_id !=2 and xcp.company_id != xcp1.company_id and xcp1.company_id in (:partnerCompanyIds) group by 1,2 order by 2 desc) \
select b.\"partnerCompanyName\",b.\"redistributedCampaignsCount\",case when a.leads is null then 0 else a.leads end as \"leadsCount\" \
from b left join a on a.created_by_company_id = b.partner_company

#PARTNER WISE LEADS AND DEALS
-------------------------------------------------------------------------
partner.leadsAndDealsCountQuery = select distinct company_name,case when sum(leads) is null then 0 else sum(leads) end as leads, \
case when sum(deals) is null then 0 else sum(deals) end as deals from (select distinct xuc.company_name,xl.created_by_company_id,count(distinct xl.id) as leads,\
cast(null as int) as deals,'leads' as data from xt_company_profile xuc left join public.xt_lead xl on xuc.company_id = xl.created_by_company_id \
left join public.xt_user_profile xup on xup.user_id = xl.created_by left join xt_user_role xur on xur.user_id = xup.user_id \
where xl.created_for_company_id = ${getCompanyIdByUserIdQuery} and xur.role_id !=2 and xl.created_by_company_id != xl.created_for_company_id \
group by 1,2 union all select xuc.company_name,xd.created_by_company_id,cast(null as int ) as leads,count(distinct xd.id) as deals, \
'deals' as data from xt_company_profile xuc left join public.xt_deal xd on (xuc.company_id = xd.created_by_company_id) \
left join public.xt_user_profile xup on xup.user_id = xd.created_by left join xt_user_role xur on xur.user_id = xup.user_id  \
where xd.created_for_company_id = ${getCompanyIdByUserIdQuery} and xur.role_id !=2 and  xd.created_by_company_id != xd.created_for_company_id group by 1,2)foo \
group by 1

partner.leadsAndDealsCountTeamMemberFilterQuery = select distinct company_name,case when sum(leads) is null then 0 else sum(leads) end as leads, \
case when sum(deals) is null then 0 else sum(deals) end as deals from (select distinct xuc.company_name,xl.created_by_company_id,count(distinct xl.id) as leads,\
cast(null as int) as deals,'leads' as data from xt_company_profile xuc left join public.xt_lead xl on xuc.company_id = xl.created_by_company_id \
left join public.xt_user_profile xup on xup.user_id = xl.created_by left join xt_user_role xur on xur.user_id = xup.user_id \
where xl.created_for_company_id = :companyId and xur.role_id !=2 and xl.created_by_company_id != xl.created_for_company_id and xuc.company_id in(:partnerCompanyIds) \
group by 1,2 union all select xuc.company_name,xd.created_by_company_id,cast(null as int ) as leads,count(distinct xd.id) as deals, \
'deals' as data from xt_company_profile xuc left join public.xt_deal xd on (xuc.company_id = xd.created_by_company_id) \
left join public.xt_user_profile xup on xup.user_id = xd.created_by left join xt_user_role xur on xur.user_id = xup.user_id  \
where xd.created_for_company_id = :companyId and xur.role_id !=2 and  xd.created_by_company_id != xd.created_for_company_id and xuc.company_id in(:partnerCompanyIds) group by 1,2)foo \
group by 1

partner.leadsOrderByQuery = order by  2 desc limit 10

partner.dealsOrderByQuery = order by 3 desc limit 10


#Leads To Deals Conversion
--------------------------------------------------------------
partner.leadsToDealsConversionQuery = select concat(round((cast (count(distinct xd.id ) as decimal) /case when cast(count(distinct xl.id) as decimal) = 0 then 1 else \
cast (count(distinct xl.id) as decimal) end)*100,2),'%') as \"Leads To  DealsConversion\" from xt_company_profile xuc \
left join public.xt_lead xl on xuc.company_id = xl.created_by_company_id left join xt_deal xd on xl.id= xd.associated_lead_id and \
xl.created_by_company_id = xuc.company_id left join public.xt_user_profile xup on xup.user_id = xl.created_by left join xt_user_role \
 xur on xur.user_id = xup.user_id where xl.created_for_company_id = :companyId and xur.role_id !=2 and xl.created_by_company_id != xl.created_for_company_id
 
 #Opportunity Amount
 -----------------------------------------
partner.opportunityAmountQuery = select sum(distinct xd.amount) as \"Opportunity Amount\" \
from xt_company_profile xuc left join public.xt_deal xd on (xuc.company_id = xd.created_by_company_id) \
left join public.xt_user_profile xup on xup.user_id = xd.created_by left join xt_user_role xur on xur.user_id = xup.user_id \
where  xur.role_id !=2 and xd.created_by_company_id != xd.created_for_company_id and xd.created_for_company_id = :companyId